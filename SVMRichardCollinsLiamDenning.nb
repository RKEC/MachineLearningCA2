(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    657536,      12750]
NotebookOptionsPosition[    651521,      12653]
NotebookOutlinePosition[    651959,      12670]
CellTagsIndexPosition[    651916,      12667]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"f", ",", "x", ",", "k"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numin", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numout", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"initialize", " ", "data"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"posPts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.2", ",", "0.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0", ",", "0.6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6", ",", "0.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.6"}], ",", "0.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0", ",", 
       RowBox[{"-", "0.6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.3"}], ",", "0.3"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"negPts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.5", ",", "0.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.2", ",", "1.2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.2", ",", 
       RowBox[{"-", "1.2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.2"}], ",", 
       RowBox[{"-", "1.2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0", ",", "1.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "0.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5"}], ",", "0.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0", ",", 
       RowBox[{"-", "1.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.0"}], ",", "1.0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allPts", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"posPts", ",", " ", "negPts"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"picpts", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "2"}], "}"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0.6", ",", "0.4"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", "\[IndentingNewLine]", "   ", 
         RowBox[{"Blue", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<+\>\"", ",", "Large"}], "]"}], ",", "#"}], "]"}],
              "&"}], ",", "posPts"}], "]"}], "\[IndentingNewLine]", ",", 
          "Red", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<-\>\"", ",", "Large"}], "]"}], ",", "#"}], "]"}],
              "&"}], ",", "negPts"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", "picpts", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"parametric", " ", "plot"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], ",", 
           RowBox[{"Sin", "[", "t", "]"}]}], "}"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0.6", ",", "0.4"}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "picpts"}], 
      "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x", ",", "y", ",", 
     SuperscriptBox["x", "2"], ",", 
     SuperscriptBox["y", "2"], ",", 
     RowBox[{"x", " ", "y"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"k", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"\[CapitalPhi]", "[", "u", "]"}], ".", 
     RowBox[{"\[CapitalPhi]", "[", "v", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\[CapitalPhi][\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(u\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(u\), \(2\)]\)\>\""}], "}"}], ",", 
    "\"\<] = \>\"", ",", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(u\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(u\), \(2\)]\)\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<K[\!\(\*OverscriptBox[\(u\), \(-\)]\),\!\(\*OverscriptBox[\(v\), \(-\
\)]\)] = K[\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(u\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(u\), \(2\)]\)\>\""}], "}"}], ",", 
     "\"\<, \>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(v\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(v\), \(2\)]\)\>\""}], "}"}], ",", 
     "\"\<] = \[CapitalPhi][\!\(\*OverscriptBox[\(u\), \
\(-\)]\)].\[CapitalPhi][\!\(\*OverscriptBox[\(v\), \(-\)]\)]= \
\[CapitalPhi][\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(u\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(u\), \(2\)]\)\>\""}], "}"}], ",", 
     "\"\<] . \[CapitalPhi][\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(v\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(v\), \(2\)]\)\>\""}], "}"}], ",", 
     "\"\<] = \>\"", ",", 
     RowBox[{"k", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(u\), \(1\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(u\), \(2\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(v\), \(1\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(v\), \(2\)]\)\>\""}], "}"}]}], "]"}]}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newPosPts", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"\[CapitalPhi]", ",", "posPts"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newNegPts", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"\[CapitalPhi]", ",", "negPts"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"posPts", "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"posPts", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "}"}]}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "posPts", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"negPts", "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"negPts", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "negPts", "]"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"posPts", ",", "negPts"}], "}"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Transpose", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"data", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"data", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPhi]data", " ", "=", " ", "data"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]data", "[", 
    RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"\[CapitalPhi]", ",", 
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Transpose", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]data", " ", "=", " ", 
    RowBox[{"Transpose", "[", "\[CapitalPhi]data", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{"MatrixForm", "[", "data", "]"}], ",", "\"\< \[Rule] \>\"", ",", 
     RowBox[{"MatrixForm", "[", " ", "\[CapitalPhi]data", "]"}]}], " ", "]"}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ids", ",", "xs", ",", "ys"}], "}"}], " ", "=", " ", 
   RowBox[{"Transpose", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len", " ", "=", " ", 
   RowBox[{"Length", "[", "ids", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8525457163229475`*^9, 3.8525457168123865`*^9}, {
   3.8525458108264513`*^9, 3.852545811137815*^9}, {3.8525487093630342`*^9, 
   3.852548712483204*^9}, {3.852550643098775*^9, 3.852550644637974*^9}, 
   3.8849364192071176`*^9, {3.888822145776349*^9, 3.888822146569601*^9}, 
   3.889369276896779*^9, {3.889369309418108*^9, 3.889369322416813*^9}, {
   3.8893694983296814`*^9, 3.889369505123626*^9}, {3.8893695462902136`*^9, 
   3.889369574057274*^9}, {3.8895264445756445`*^9, 3.889526468277206*^9}, {
   3.8895497583823256`*^9, 3.889549779170404*^9}, {3.8895498357280736`*^9, 
   3.8895498406676846`*^9}},ExpressionUUID->"1d6d8e57-0fce-4a96-a783-\
754c6c3516d7"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0.6, 0.4], AbsoluteThickness[1.6], Opacity[1.], FaceForm[
       Opacity[0.3]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBWIQPQpGwSgYBcMFAACjfwH7
        "]]},
      Annotation[#, "Charting`Private`Tag$643031#1"]& ]}, {}}, {
    {RGBColor[0, 0, 1], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {0.2, 0.}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {0.5, 0.5}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {0.5, -0.5}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {-0.5, 0.5}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {-0.5, -0.5}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {0., 0.6}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {0.6, 0.}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {-0.6, 0.}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {0., -0.6}], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Large], {-0.3, 0.3}]}, 
    {RGBColor[1, 0, 0], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {1.5, 0.}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {1.2, 1.2}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {1.2, -1.2}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {-1.2, 1.2}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {-1.2, -1.2}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {0., 1.5}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {1.5, 0.}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {-1.5, 0.}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {0., -1.5}], InsetBox[
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Large], {-1., 1.}]}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.8893482455918045`*^9, {3.88936927973298*^9, 3.889369287735417*^9}, 
   3.889369604300006*^9, 3.8895264981363497`*^9},
 CellLabel->
  "During evaluation of \
In[1995]:=",ExpressionUUID->"29c270ff-62d2-4cd3-9b90-a63efef0b895"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0.6, 0.4], AbsoluteThickness[1.6], Opacity[1.], FaceForm[
       Opacity[0.3]], LineBox[CompressedData["
1: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
OhOxOuTJNGryPaAr/xtFVy9vfl7JaVz7YY9i5f0x3DAewXWe9ANG8gxNXYqC
nxxDVZt9aGizk5d18iwF61NeG2u505BXo9DKWpGCdb91dl5/TEOX9uCbzvco
uG/FTdoqZRp2CVSP6AVR8LGNXNNFFhoueG48cv43BdN/Grmf16WiYqvULu3C
cdyiuF5Q6joVW9uk5TRrxzFxTqxIWIGKr9TjHRQ6x1E1S/h2nzQVz6gfltxO
jKPd5bHTKzmouFnonIj7jglk3IXb61Om0IhDdZ3U6wl085stl5ydRFvLtm0z
ypN45MJ1hysTk3h6O4vZ9tuT2OEUmHu7dxIpX2XvqT2YxEWb4/lmZZOoFnPs
eKTTJH5mk1e97DuJm87qbp1Jm8TbXcFfqw5OYlKc+LAy3xQGaX4y4DeawKBj
K76I1U1hvdHU3+PaEyhe0exV1z6FSjlX1LRVJ9ApxNbp/tAURjiLi/sfn0Cp
VmrSux9TKCXWQSvjnMD7F9e0Bm8lPW7PZgOxhHH0yZzd4GlBRa7pur2iFAru
ZAtPoaylYeVeG8tPXRQMrbOdrBSmodJcTMvuegrK5/BPR+2mYXcrZVQog4Jy
6UlysidoGDfbGVfmSMFvaknsoEvDnbX2TyQ3UdBnqPodZyoNeVS9T7kqjCH1
1PKt9vPTeH6TzNOsM2M4kVdlVagwjWclQrWHD5H+biunEKE+je3uTYf2CY2h
b9WPg8qG02iV7a3hRRlFv5HrYfdeT+NzAY6Tbs9H0ZZvTlT/6zSaa7Yc1UkY
wbd6Yqm+12bwzAvHT1xhI9gso12WemsGW8Ue78h8O4LCf6I0KvRn0Gk1VXXe
agQ7Qz9+67OaQRb7lb1KZ0ZwHnbVFfrNYIuyVcWrj8O4NSDr+oXWGUxX2V9R
Rx/EuHH+pevyZB8PdNV3NQ2iYEBD2mk1Or4/fdmuP30QTXaL2AjfpOO8M/f3
hseDeJ+j4nCZER35FXMPKSwNoBVnr3iqOx1V9GqUK1YPYL+vscTKSjpeaLoQ
S9nWh46nrVfGyzBwxbiBwM9/vegy0vfd8wyDnPPSp1hHe9GSkZVuJMfA00+9
ulljetFbhydo9TXyOutlmVSxXqxh29VGNWVg5pv3+7MP9GD2kehHwuTcov4t
ulEq3YUXdI3fy7Ez0TvHtlVYsAuV+tv6CzmZGFulQrVc6EQixLFxPy8TJwql
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
/g9FomeM
        "]]},
      Annotation[#, "Charting`Private`Tag$643077#1"]& ]}, {}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0, 0.6, 0.4], AbsoluteThickness[1.6], Opacity[1.], FaceForm[
        Opacity[0.3]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBWIQPQpGwSgYBcMFAACjfwH7
         "]]},
       Annotation[#, "Charting`Private`Tag$643031#1"]& ]}, {}}, {
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.2, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.5, 0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.5, -0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.5, 0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.5, -0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0., 0.6}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.6, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.6, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0., -0.6}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.3, 0.3}]}, 
     {RGBColor[1, 0, 0], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.2, 1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.2, -1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.2, 1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.2, -1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {0., 1.5}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {0., -1.5}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1., 1.}]}}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.8893482455918045`*^9, {3.88936927973298*^9, 3.889369287735417*^9}, 
   3.889369604300006*^9, 3.889526498311097*^9},
 CellLabel->
  "During evaluation of \
In[1995]:=",ExpressionUUID->"2a811de1-b4d0-4e45-985d-8ad750fae6c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[CapitalPhi][\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
     ",", "\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\"] = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
     ",", "\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>", ",", 
     SuperscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
      "2"], ",", 
     SuperscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>", 
      "2"], ",", 
     RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
      " ", "\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>"}]}], "}"}]}],
  SequenceForm[
  "\[CapitalPhi][", {
   "\!\(\*SubscriptBox[\(u\), \(1\)]\)", 
    "\!\(\*SubscriptBox[\(u\), \(2\)]\)"}, "] = ", {
   1, "\!\(\*SubscriptBox[\(u\), \(1\)]\)", 
    "\!\(\*SubscriptBox[\(u\), \(2\)]\)", 
    "\!\(\*SubscriptBox[\(u\), \(1\)]\)"^2, 
    "\!\(\*SubscriptBox[\(u\), \(2\)]\)"^2, 
    "\!\(\*SubscriptBox[\(u\), \(1\)]\)" 
    "\!\(\*SubscriptBox[\(u\), \(2\)]\)"}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8893482455918045`*^9, {3.88936927973298*^9, 3.889369287735417*^9}, 
   3.889369604300006*^9, 3.8895264983190975`*^9},
 CellLabel->
  "During evaluation of \
In[1995]:=",ExpressionUUID->"1941f3bd-7201-4881-82d9-c63255bd695f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"K[\\!\\(\\*OverscriptBox[\\(u\\), \
\\(-\\)]\\),\\!\\(\\*OverscriptBox[\\(v\\), \\(-\\)]\\)] = K[\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
     ",", "\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(1\\)]\\)\"\>", 
     ",", "\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(2\\)]\\)\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\"] = \
\[CapitalPhi][\\!\\(\\*OverscriptBox[\\(u\\), \
\\(-\\)]\\)].\[CapitalPhi][\\!\\(\\*OverscriptBox[\\(v\\), \\(-\\)]\\)]= \
\[CapitalPhi][\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
     ",", "\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\"] . \[CapitalPhi][\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(1\\)]\\)\"\>", 
     ",", "\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(2\\)]\\)\"\>"}], "}"}], 
   "\[InvisibleSpace]", "\<\"] = \"\>", "\[InvisibleSpace]", 
   RowBox[{"1", "+", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
     " ", "\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(1\\)]\\)\"\>"}], "+", 
    RowBox[{
     SuperscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
      "2"], " ", 
     SuperscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(1\\)]\\)\"\>", 
      "2"]}], "+", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>", 
     " ", "\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(2\\)]\\)\"\>"}], "+", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)\"\>", 
     " ", "\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>", 
     " ", "\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(1\\)]\\)\"\>", 
     " ", "\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(2\\)]\\)\"\>"}], "+", 
    RowBox[{
     SuperscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)\"\>", 
      "2"], " ", 
     SuperscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(2\\)]\\)\"\>", 
      "2"]}]}]}],
  SequenceForm[
  "K[\!\(\*OverscriptBox[\(u\), \(-\)]\),\!\(\*OverscriptBox[\(v\), \(-\)]\)] \
= K[", {"\!\(\*SubscriptBox[\(u\), \(1\)]\)", 
    "\!\(\*SubscriptBox[\(u\), \(2\)]\)"}, ", ", {
   "\!\(\*SubscriptBox[\(v\), \(1\)]\)", 
    "\!\(\*SubscriptBox[\(v\), \(2\)]\)"}, 
   "] = \[CapitalPhi][\!\(\*OverscriptBox[\(u\), \(-\)]\)].\[CapitalPhi][\!\(\
\*OverscriptBox[\(v\), \(-\)]\)]= \[CapitalPhi][", {
   "\!\(\*SubscriptBox[\(u\), \(1\)]\)", 
    "\!\(\*SubscriptBox[\(u\), \(2\)]\)"}, "] . \[CapitalPhi][", {
   "\!\(\*SubscriptBox[\(v\), \(1\)]\)", 
    "\!\(\*SubscriptBox[\(v\), \(2\)]\)"}, "] = ", 1 + 
   "\!\(\*SubscriptBox[\(u\), \(1\)]\)" "\!\(\*SubscriptBox[\(v\), \(1\)]\)" + 
   "\!\(\*SubscriptBox[\(u\), \(1\)]\)"^2 
    "\!\(\*SubscriptBox[\(v\), \(1\)]\)"^2 + 
   "\!\(\*SubscriptBox[\(u\), \(2\)]\)" "\!\(\*SubscriptBox[\(v\), \(2\)]\)" + 
   "\!\(\*SubscriptBox[\(u\), \(1\)]\)" "\!\(\*SubscriptBox[\(u\), \(2\)]\)" 
    "\!\(\*SubscriptBox[\(v\), \(1\)]\)" "\!\(\*SubscriptBox[\(v\), \(2\)]\)" + 
   "\!\(\*SubscriptBox[\(u\), \(2\)]\)"^2 
    "\!\(\*SubscriptBox[\(v\), \(2\)]\)"^2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8893482455918045`*^9, {3.88936927973298*^9, 3.889369287735417*^9}, 
   3.889369604300006*^9, 3.889526498325097*^9},
 CellLabel->
  "During evaluation of \
In[1995]:=",ExpressionUUID->"c6aef9bd-5c16-4f92-a4bf-a94f5a0530b9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.3`"}], ",", "0.3`"}], "}"}], "1"},
       {"2", 
        RowBox[{"{", 
         RowBox[{"0.6`", ",", "0.`"}], "}"}], "1"},
       {"3", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"4", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.2`"}], ",", 
          RowBox[{"-", "1.2`"}]}], "}"}], 
        RowBox[{"-", "1"}]},
       {"5", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", 
          RowBox[{"-", "1.5`"}]}], "}"}], 
        RowBox[{"-", "1"}]},
       {"6", 
        RowBox[{"{", 
         RowBox[{"1.5`", ",", "0.`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"7", 
        RowBox[{"{", 
         RowBox[{"0.5`", ",", 
          RowBox[{"-", "0.5`"}]}], "}"}], "1"},
       {"8", 
        RowBox[{"{", 
         RowBox[{"1.2`", ",", "1.2`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"9", 
        RowBox[{"{", 
         RowBox[{"1.2`", ",", 
          RowBox[{"-", "1.2`"}]}], "}"}], 
        RowBox[{"-", "1"}]},
       {"10", 
        RowBox[{"{", 
         RowBox[{"1.5`", ",", "0.`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"11", 
        RowBox[{"{", 
         RowBox[{"0.5`", ",", "0.5`"}], "}"}], "1"},
       {"12", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.6`"}], ",", "0.`"}], "}"}], "1"},
       {"13", 
        RowBox[{"{", 
         RowBox[{"0.2`", ",", "0.`"}], "}"}], "1"},
       {"14", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], "1"},
       {"15", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "1.5`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"16", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5`"}], ",", "0.`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"17", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5`"}], ",", 
          RowBox[{"-", "0.5`"}]}], "}"}], "1"},
       {"18", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "0.6`"}], "}"}], "1"},
       {"19", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"20", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", 
          RowBox[{"-", "0.6`"}]}], "}"}], "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" \[Rule] \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "0.3`"}], ",", "0.3`", ",", "0.09`", ",", "0.09`", ",", 
          RowBox[{"-", "0.09`"}]}], "}"}], "1"},
       {"2", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0.6`", ",", "0.`", ",", "0.36`", ",", "0.`", ",", "0.`"}],
          "}"}], "1"},
       {"3", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1.2`"}], ",", "1.2`", ",", "1.44`", ",", "1.44`", ",", 
          RowBox[{"-", "1.44`"}]}], "}"}], 
        RowBox[{"-", "1"}]},
       {"4", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1.2`"}], ",", 
          RowBox[{"-", "1.2`"}], ",", "1.44`", ",", "1.44`", ",", "1.44`"}], 
         "}"}], 
        RowBox[{"-", "1"}]},
       {"5", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0.`", ",", 
          RowBox[{"-", "1.5`"}], ",", "0.`", ",", "2.25`", ",", "0.`"}], 
         "}"}], 
        RowBox[{"-", "1"}]},
       {"6", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1.5`", ",", "0.`", ",", "2.25`", ",", "0.`", ",", "0.`"}],
          "}"}], 
        RowBox[{"-", "1"}]},
       {"7", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0.5`", ",", 
          RowBox[{"-", "0.5`"}], ",", "0.25`", ",", "0.25`", ",", 
          RowBox[{"-", "0.25`"}]}], "}"}], "1"},
       {"8", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1.2`", ",", "1.2`", ",", "1.44`", ",", "1.44`", ",", 
          "1.44`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"9", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1.2`", ",", 
          RowBox[{"-", "1.2`"}], ",", "1.44`", ",", "1.44`", ",", 
          RowBox[{"-", "1.44`"}]}], "}"}], 
        RowBox[{"-", "1"}]},
       {"10", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1.5`", ",", "0.`", ",", "2.25`", ",", "0.`", ",", "0.`"}],
          "}"}], 
        RowBox[{"-", "1"}]},
       {"11", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0.5`", ",", "0.5`", ",", "0.25`", ",", "0.25`", ",", 
          "0.25`"}], "}"}], "1"},
       {"12", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "0.6`"}], ",", "0.`", ",", "0.36`", ",", "0.`", ",", 
          "0.`"}], "}"}], "1"},
       {"13", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0.2`", ",", "0.`", ",", "0.04000000000000001`", ",", 
          "0.`", ",", "0.`"}], "}"}], "1"},
       {"14", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "0.5`"}], ",", "0.5`", ",", "0.25`", ",", "0.25`", ",", 
          RowBox[{"-", "0.25`"}]}], "}"}], "1"},
       {"15", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0.`", ",", "1.5`", ",", "0.`", ",", "2.25`", ",", "0.`"}],
          "}"}], 
        RowBox[{"-", "1"}]},
       {"16", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1.5`"}], ",", "0.`", ",", "2.25`", ",", "0.`", ",", 
          "0.`"}], "}"}], 
        RowBox[{"-", "1"}]},
       {"17", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "0.5`"}], ",", 
          RowBox[{"-", "0.5`"}], ",", "0.25`", ",", "0.25`", ",", "0.25`"}], 
         "}"}], "1"},
       {"18", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0.`", ",", "0.6`", ",", "0.`", ",", "0.36`", ",", "0.`"}],
          "}"}], "1"},
       {"19", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1.`"}], ",", "1.`", ",", "1.`", ",", "1.`", ",", 
          RowBox[{"-", "1.`"}]}], "}"}], 
        RowBox[{"-", "1"}]},
       {"20", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0.`", ",", 
          RowBox[{"-", "0.6`"}], ",", "0.`", ",", "0.36`", ",", "0.`"}], 
         "}"}], "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
   MatrixForm[{{1, {-0.3, 0.3}, 1}, {2, {0.6, 0.}, 1}, {3, {-1.2, 1.2}, -1}, {
     4, {-1.2, -1.2}, -1}, {5, {0., -1.5}, -1}, {6, {1.5, 0.}, -1}, {
     7, {0.5, -0.5}, 1}, {8, {1.2, 1.2}, -1}, {9, {1.2, -1.2}, -1}, {
     10, {1.5, 0.}, -1}, {11, {0.5, 0.5}, 1}, {12, {-0.6, 0.}, 1}, {
     13, {0.2, 0.}, 1}, {14, {-0.5, 0.5}, 1}, {15, {0., 1.5}, -1}, {
     16, {-1.5, 0.}, -1}, {17, {-0.5, -0.5}, 1}, {18, {0., 0.6}, 1}, {
     19, {-1., 1.}, -1}, {20, {0., -0.6}, 1}}], " \[Rule] ", 
   MatrixForm[{{1, {1, -0.3, 0.3, 0.09, 0.09, -0.09}, 1}, {
     2, {1, 0.6, 0., 0.36, 0., 0.}, 1}, {
     3, {1, -1.2, 1.2, 1.44, 1.44, -1.44}, -1}, {
     4, {1, -1.2, -1.2, 1.44, 1.44, 1.44}, -1}, {
     5, {1, 0., -1.5, 0., 2.25, 0.}, -1}, {
     6, {1, 1.5, 0., 2.25, 0., 0.}, -1}, {
     7, {1, 0.5, -0.5, 0.25, 0.25, -0.25}, 1}, {
     8, {1, 1.2, 1.2, 1.44, 1.44, 1.44}, -1}, {
     9, {1, 1.2, -1.2, 1.44, 1.44, -1.44}, -1}, {
     10, {1, 1.5, 0., 2.25, 0., 0.}, -1}, {
     11, {1, 0.5, 0.5, 0.25, 0.25, 0.25}, 1}, {
     12, {1, -0.6, 0., 0.36, 0., 0.}, 1}, {
     13, {1, 0.2, 0., 0.04000000000000001, 0., 0.}, 1}, {
     14, {1, -0.5, 0.5, 0.25, 0.25, -0.25}, 1}, {
     15, {1, 0., 1.5, 0., 2.25, 0.}, -1}, {
     16, {1, -1.5, 0., 2.25, 0., 0.}, -1}, {
     17, {1, -0.5, -0.5, 0.25, 0.25, 0.25}, 1}, {
     18, {1, 0., 0.6, 0., 0.36, 0.}, 1}, {
     19, {1, -1., 1., 1., 1., -1.}, -1}, {
     20, {1, 0., -0.6, 0., 0.36, 0.}, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8893482455918045`*^9, {3.88936927973298*^9, 3.889369287735417*^9}, 
   3.889369604300006*^9, 3.8895264983440995`*^9},
 CellLabel->
  "During evaluation of \
In[1995]:=",ExpressionUUID->"f824ea3d-c6f2-4e28-8903-a0d2739063b1"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"c7faf29e-f451-4757-b0e1-04a95c7f7700"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"allPts", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "@", 
       RowBox[{"{", 
        RowBox[{"Yellow", ",", "Blue", ",", "Green"}], "}"}]}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8895060470296307`*^9, 3.889506048280568*^9}, 
   3.88950645551512*^9, {3.889526516522721*^9, 3.889526546900829*^9}, 
   3.8895265986504974`*^9},
 CellLabel->
  "In[2034]:=",ExpressionUUID->"e05fc2d3-b655-498a-b970-e7fbaf54b034"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.012833333333333334`], AbsoluteThickness[1.6], 
     PointBox[{{0.2, 0.}, {0.5, 0.5}, {0.5, -0.5}, {-0.5, 
      0.5}, {-0.5, -0.5}, {0., 0.6}, {0.6, 0.}, {-0.6, 0.}, {0., -0.6}, {-0.3,
       0.3}}]}, 
    {RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.5, 0.}, {1.2, 1.2}, {1.2, -1.2}, {-1.2, 
      1.2}, {-1.2, -1.2}, {0., 1.5}, {1.5, 0.}, {-1.5, 0.}, {0., -1.5}, {-1., 
      1.}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8895265674528813`*^9, {3.8895266204689474`*^9, 3.889526623935672*^9}},
 CellLabel->
  "Out[2034]=",ExpressionUUID->"6e456c0c-e9f2-4cbc-a071-a001ff8b886e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"Yellow", "\[Rule]", 
       RowBox[{"allPts", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"Blue", "\[Rule]", 
       RowBox[{"allPts", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<SupportVectorMachine\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.889526644034624*^9, 3.8895266613307595`*^9}},
 CellLabel->
  "In[2035]:=",ExpressionUUID->"de08dde6-5b78-459e-89bb-08de217d7397"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SupportVectorMachine\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 20, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 2]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 20, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {0.019999999999999976`, 0.065}, "Method" -> 
                   "Naive", "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {0.019999999999999976`, 0.065}, 
                   "StandardDeviation" -> {0.8761278445523804, 
                    0.8057760234705423}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                   "Perfect", "StructurePreserving" -> False, "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1, "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                   "Perfect", "StructurePreserving" -> False, "Missing" -> 
                   "Allowed"]], "Model" -> 
                Association[
                 "Matrix" -> {{-0.7071067811865475, -0.7071067811865475}, {
                   0.7071067811865475, -0.7071067811865475}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {0.019999999999999976`, 0.065}, 
                    "StandardDeviation" -> {0.8761278445523804, 
                    0.8057760234705423}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 2, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.0130106, "MaxTrainingMemory" -> 67984, 
                  "DataMemory" -> 432, "FunctionMemory" -> 22200, 
                  "LanguageVersion" -> {12.1, 1}, "Date" -> 
                  DateObject[{
                    2023, 4, 3, 17, 4, 26.0626659`9.168593755040678}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 2, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {12.1, 1}, "ID" -> 
             4443728544268478220]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {0.019999999999999976`, 0.065}, 
             "StandardDeviation" -> {0.8761278445523804, 0.8057760234705423}, 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12.1, 1}, "ID" -> 8868013058718301057]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12.1, 1}, "ID" -> 459574711200189037]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[RGBColor[0, 0, 1] -> 1, RGBColor[1, 1, 0] -> 2]}, 
             "MissingCode" -> 0, "Version" -> {12.1, 1}, "ID" -> 
             4763265325110401226, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {2}]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12.1, 1}, "ID" -> 4528173093170549902]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[RGBColor[0, 0, 1] -> 0.5, RGBColor[1, 1, 0] -> 0.5]], 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "SVMParameters" -> 
      Association[
       "KernelType" -> "RadialBasisFunction", "GammaScalingParameter" -> 
        0.21178779870618225`, "SoftMarginParameter" -> 1., "PolynomialDegree" -> 
        3, "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
        "Shrinking" -> True, "KernelCacheSize" -> 100], "TrainedModel" -> {
        Association[
        "supportVectors" -> {{1.6949859281434618`, -0.0839789856499568}, {
          1.3397171433694612`, -1.5603371583362609`}, {-0.02146809721842343, \
-1.947994530014083}, {-1.3830077103243243`, -1.572643452961707}, \
{-0.014191685103546153`, 1.7903491417592672`}, {
          1.6883202229049301`, -0.08288484377542044}, {-1.725274683792559, \
-0.07222386640702189}, {-1.3976686200985045`, 
          1.4119577686744718`}, {-0.7164915934666087, -0.0859479391401611}, \
{-0.5986847718364425, -0.6937697187664933}, {
          0.6711462468086438, -0.08198435553210884}, {0.5394412710437823, 
          0.5346918532614651}, {-0.027538877704469604`, -0.8297133675719643}, \
{0.5385358822510864, -0.6988651474939858}, {-0.37364381025584076`, 
          0.29641741546853817`}}, 
         "supportVectorCoefficients" -> {1., 0.4188411194342079, 1., 1., 1., 
          1., 1., 0.30070953825646396`, -1., -1., -1., -1., -1., -1., \
-0.7195506576906718}, "rho" -> -1.4308804955101433`]}, 
      "ProbabilityCoefficients" -> {{-5.662773609161377, \
-0.5110970735549927}}, "MulticlassStrategy" -> "OneVersusOne", "Processor" -> 
      MachineLearning`MLProcessor["FirstValues", 
        Association[
        "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 1], 
         "Key" -> "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
         False, "Missing" -> "Allowed"]], "Method" -> "SupportVectorMachine", 
      "PostProcessor" -> MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "KernelType" -> 
        Association[
         "Value" -> "RadialBasisFunction", "Options" -> Association[]], 
        "GammaScalingParameter" -> 
        Association[
         "Value" -> 0.21178779870618225`, "Options" -> Association[]], 
        "SoftMarginParameter" -> 
        Association["Value" -> 1., "Options" -> Association[]], 
        "PolynomialDegree" -> 
        Association["Value" -> 3, "Options" -> Association[]], 
        "BiasParameter" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "MulticlassStrategy" -> 
        Association["Value" -> "OneVersusOne", "Options" -> Association[]], 
        "Shrinking" -> 
        Association["Value" -> True, "Options" -> Association[]], 
        "KernelCacheSize" -> 
        Association["Value" -> 100, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[127697], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.191989`6.734821340032051, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[0.31095789826924536`, 0.22850293367503802`], "Accuracy" -> 
         Around[0.9000000000000002, 0.28982753492378915`], "EvaluationTime" -> 
         0.0004988155787422197, "TestSize" -> 4, "ModelMemory" -> 13880, 
         "ModelUtility" -> 0.3378231750477997, "TrainingSize" -> 16, 
         "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 107040, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[0.31095789826924536`, 0.16157597392263928`]}, 
         "AccuracyHistory" -> {
           Around[0.9000000000000002, 0.20493901531919223`]}, 
         "Configuration" -> {
          "SupportVectorMachine", "KernelType" -> "RadialBasisFunction", 
           "GammaScalingParameter" -> 0.21178779870618225`, 
           "SoftMarginParameter" -> 1., "PolynomialDegree" -> 3, 
           "BiasParameter" -> 1, "MulticlassStrategy" -> Automatic, 
           "Shrinking" -> True, "KernelCacheSize" -> 100}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}]}], 
        Association["ID" -> 182622301432987]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.1066773585268308], 
             "SoftMarginParameter" -> Association["Value" -> 0.1], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.7537249582452175, 0.12905736295269696`], "Accuracy" -> 
              Around[0.10000000000000002`, 0.14142135623730961`], 
              "EvaluationTime" -> 0.00039622329811527814`, "TestSize" -> 4, 
              "ModelMemory" -> 14136, "ModelUtility" -> -0.44409747644241615`,
               "TrainingSize" -> 16, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 106680, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7537249582452175, 0.09125733650590552]}, 
              "AccuracyHistory" -> {
                Around[0.10000000000000002`, 0.10000000000000007`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00039622329811527814`, "MeanCrossEntropy" -> 
             Around[0.7537249582452175, 0.12905736295269696`], "ModelMemory" -> 
             14136, "TrainingMemory" -> 106680, "TrainingTime" -> 
             0.09531938816691377], "Index" -> 1], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.6396222254841362], 
             "SoftMarginParameter" -> Association["Value" -> 1.], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 2], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.464716651191452], "SoftMarginParameter" -> 
             Association["Value" -> 3], "PolynomialDegree" -> 
             Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.31398590587891995`, 0.22749406190478258`], "Accuracy" -> 
              Around[0.9000000000000002, 0.28982753492378915`], 
              "EvaluationTime" -> 0.0004988155787422197, "TestSize" -> 4, 
              "ModelMemory" -> 12984, "ModelUtility" -> 0.3299303107001029, 
              "TrainingSize" -> 16, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 106376, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.31398590587891995`, 0.16086259385254398`]}, 
              "AccuracyHistory" -> {
                Around[0.9000000000000002, 0.20493901531919223`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0004988155787422197, "MeanCrossEntropy" -> 
             Around[0.31398590587891995`, 0.22749406190478258`], 
             "ModelMemory" -> 12984, "TrainingMemory" -> 106376, 
             "TrainingTime" -> 0.09531938816691377], "Index" -> 3], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.13922863205532754`], 
             "SoftMarginParameter" -> Association["Value" -> 3], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 4], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.5096660889921671], 
             "SoftMarginParameter" -> Association["Value" -> 0.4], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.34907853771565683`, 0.21577832584779383`], "Accuracy" -> 
              Around[0.9000000000000002, 0.28982753492378915`], 
              "EvaluationTime" -> 0.00039622329811527814`, "TestSize" -> 4, 
              "ModelMemory" -> 14136, "ModelUtility" -> 0.2427428293977637, 
              "TrainingSize" -> 16, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 108080, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.34907853771565683`, 0.15257831744005548`]}, 
              "AccuracyHistory" -> {
                Around[0.9000000000000002, 0.20493901531919223`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00039622329811527814`, "MeanCrossEntropy" -> 
             Around[0.34907853771565683`, 0.21577832584779383`], 
             "ModelMemory" -> 14136, "TrainingMemory" -> 108080, 
             "TrainingTime" -> 0.09531938816691377], "Index" -> 5], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.3318849440814615], 
             "SoftMarginParameter" -> Association["Value" -> 1.], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 6], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.15322071433492002`], 
             "SoftMarginParameter" -> Association["Value" -> 0.4], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 7], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.2789243380060359], 
             "SoftMarginParameter" -> Association["Value" -> 3], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 8], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.21178779870618225`], 
             "SoftMarginParameter" -> Association["Value" -> 1.], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.31095789826924536`, 0.22850293367503802`], "Accuracy" -> 
              Around[0.9000000000000002, 0.28982753492378915`], 
              "EvaluationTime" -> 0.0004988155787422197, "TestSize" -> 4, 
              "ModelMemory" -> 13880, "ModelUtility" -> 0.3378231750477997, 
              "TrainingSize" -> 16, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 107040, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.31095789826924536`, 0.16157597392263928`]}, 
              "AccuracyHistory" -> {
                Around[0.9000000000000002, 0.20493901531919223`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0004988155787422197, "MeanCrossEntropy" -> 
             Around[0.31095789826924536`, 0.22850293367503802`], 
             "ModelMemory" -> 13880, "TrainingMemory" -> 107040, 
             "TrainingTime" -> 0.09531938816691377], "Index" -> 9], 
         Association[
          "Value" -> "SupportVectorMachine", "Options" -> 
           Association[
            "KernelType" -> Association["Value" -> "RadialBasisFunction"], 
             "GammaScalingParameter" -> 
             Association["Value" -> 0.10646309289967171`], 
             "SoftMarginParameter" -> Association["Value" -> 0.4], 
             "PolynomialDegree" -> Association["Value" -> 3], "BiasParameter" -> 
             Association["Value" -> 1], "MulticlassStrategy" -> 
             Association["Value" -> Automatic], "Shrinking" -> 
             Association["Value" -> True], "KernelCacheSize" -> 
             Association["Value" -> 100]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 10]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["SupportVectorMachine"]], 
           
           TypeSystem`Struct[{
            "KernelType", "GammaScalingParameter", "SoftMarginParameter", 
             "PolynomialDegree", "BiasParameter", "MulticlassStrategy", 
             "Shrinking", "KernelCacheSize"}, {
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["RadialBasisFunction"]]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Real]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean]}], 
             TypeSystem`Struct[{"Value"}, {
               TypeSystem`Atom[Integer]}]}]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], 
        Association["ID" -> 182618006465691]], "MaxTrainingSize" -> 20, 
      "PreprocessorEvaluationTime" -> 9.7478515625`2.*^-6, 
      "PreprocessorMemory" -> 35216, "InputDimension" -> 2, "OutputDimension" -> 
      1, "BaselineLogProbability" -> -0.6931471805599453, "VariableBudget" -> 
      True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
      "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
      "LastReportingTime" -> 3.889530266840665`17.34247214451211*^9, 
      "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 16, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.4179974, "ExperimentCounts" -> 4]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 182630891367579]]], "AnomalyDetector" -> None, 
    "Log" -> Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{-1.2, -1.2}}, "ID" -> 3614444893714305293]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 1.0768014, 
      "MaxTrainingMemory" -> 623376, "DataMemory" -> 2624, "FunctionMemory" -> 
      171024, "LanguageVersion" -> {12.1, 1}, "Date" -> 
      DateObject[{2023, 4, 3, 17, 4, 27.1106648`9.185715082873292}, "Instant",
         "Gregorian", 1.], "ProcessorCount" -> 4, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.889526667259694*^9},
 CellLabel->
  "Out[2035]=",ExpressionUUID->"efa428a3-378d-4a72-af9a-2db3d28b32dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "3", "D", " ", "plot", " ", "that", " ", "visualizes", " ", "the", " ", 
    "probability", " ", "decision", " ", "boundary", " ", "between", " ", 
    "two", " ", "classes", " ", 
    RowBox[{"(", 
     RowBox[{
     "Has", " ", "Diabetes", " ", "and", " ", "Does", " ", "not", " ", "have",
       " ", "Diabetes"}], ")"}], " ", "using", " ", "a", " ", "classifier", 
    " ", "function", " ", 
    RowBox[{"c", ".", "The"}], " ", "plot", " ", "shows", " ", "the", " ", 
    "3", "D", " ", "surface", " ", "for", " ", "each", " ", "class", " ", 
    "probability", " ", "and", " ", "overlays", " ", "the", " ", "original", 
    " ", "data", " ", "points", " ", 
    RowBox[{"(", "allPts", ")"}], " ", "colored", " ", "by", " ", "their", 
    " ", "respective", " ", 
    RowBox[{"class", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"\"\<Probability\>\"", "\[Rule]", "Yellow"}]}], "]"}], ",", 
        RowBox[{"c", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"\"\<Probability\>\"", "\[Rule]", "Blue"}]}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "5"}], ",", "4"}], "}"}], ",", 
      RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], ",", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "allPts", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Yellow", ",", "Blue"}], "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8895266922432985`*^9, 3.8895267000928173`*^9}, {
  3.88954967829992*^9, 
  3.8895497093862534`*^9}},ExpressionUUID->"d29fd878-c7c0-497b-a5c6-\
14ff7ec8456b"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
1o99jffLz7+SdC1Nll5WtQ7v15CXZw25+FrmaLtFdH85+WwVtbeojlzO8nXL
sqDPK9Jlgp7G2jWS+koRTV/iq/B++R6aSP8nDmZacztxf+ptVGFXw40mTOpm
lQ9WpM8rvHkDky/pnzdVavwKur+ob1zeHajznMxuYDV2BQ7E+1Xi/Ywh7E8d
uiPnRZ9LjOQtUHzJzvU/YsyVSvG+TqmZ7LItekPG7FXIXmNEr9s3vRgeNNc3
myyc9uXQ/Hz6vtptHrh+jSsgx+TsL3rvQJ8/XOG1U0h2lT+YaRxEnz/s5LVT
QZw8PXDc/VH0OKC+rfh2D/cHsdtTf1jFOlG8rwyetzJizLXFtjbOSnhfS3jP
sYL45mSVPHZ5Jd4X//cLfhK7uaGq7JUpeF9fefXwnVi9cyH1fB6e57On8urq
C1Ge72QqcpSuz/DZ33ck2OURK4d8a5C7VIH3JW94r2ehbxZx6ITOyrdaf/C+
Cj2ezpnn+5eIfHn3gdc3HCepCbw6aSHCR9eH3miiz70v8p57MyHvU69i64Lf
e0X94tXbb0LN+GDL0Te4PiEW8+73LzE+YQj1Y5Yv3u9d3nzRQrjcD1Q3iXXH
uuV//vyHUJs6609nwhz0sJE3f/0msjZVB2el0ucqcbzxoYnoSUnbdPUsBz0M
6zTW07VsIAKTjFSN17SiB37/qiXefF+QKDsPz2MpV179c4mphfOktNfi/o76
yvPTQ+woO6i46rcCejDm+ekmtro4jbC2EEcPfD9dRMwht+Mh54C3kxU8P53E
+FuF09RWD0I//HMMLuHybmmVwlZj9MP31kN41NZa2Cwdh3743roJLXvZoiXa
ZuiH741DrJiySKa4hV5X8L11El+Ht9rM9IPzH0l2LM9bB5GpZSsZGgTPUZat
wBuH24kbr5/n+D6Qw3FMhbfeEGO3npvDPW5CnwPw5k07UfZ5pz3OufvpdRp/
XhBhO/4wr3Srxf01Fcgbr0TYomemDznGpc9V3vDmHWF24aF5FX49uB7o258K
sV+XZ4+K/Q4++84BJgmxj2wOXrLKiZ4XeOcYvXke195oW+wiiT4deOs9UTal
6ZTj5kbvW+/w1oci7Kkbj+56t4Y+V8nnzb8i7PcvFDJczenxhPf7Ca7C7JaH
yqLngvBzIrYhb34XYk+0X7Bv4ZGB6JO/HhBiP/I84hIfi+sNilcPk6TZkaOm
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
9iEeRkP5xkHqeyLo9tJy6HqkdHsNmh5/Rw6dmOCo2d6JOeq6eSc9em3XXG+J
aJKTTSbPOfNac92pS5OcYvCg/7SZRzTaK2j6lYJhTl4nb2q0V9rEZyG4vkhs
EKDR3m1N72XqK9LtdYbyC0yX6l6anYHaqw/lT4f3XNDtpeXQ987Q7XVpkpMF
hn1RmOVptFfRpM8HYFHwc3WpRnvnNz2fBgzS1zz+otHeTk34L/D83ME2qzXa
q657WgNClduGnNdor/pckBzcrZnCj9Jor3+TnjLQzHxGmq2GnTtC+V0Ly2RZ
PozfOwnlb6kf0t/xEjPehVC+58PLTyYpGDsPgPLlOePvLNKIf742tbcalF3N
qnmhwYO6TnAleHgpctIHDR5CmuSUgZb+P3yfaPDwoMkeGsGcLT9dhmjwoK73
2QBmaccODNXg4UST/HowcvYmwxgNHnSafpSgZuT+QmYfoY5c0/ReBRi9YrZ7
Xw1+kuB77SYOeHynnuGnK3xvvlbkHz2NePskfK+Tf69PfzXWlwTwvW0ums0c
rWEnAfC92uHyq5Ea/KjrdP4BV/fvOHZBg59JTeO3Dmyaen/Sbg1+HJrmfR3i
YLz3faVGHJ7XJEebWLxpSbCrBj9N9TBTmhGeL+STwjT4Ua/vNSNsntjyr2vw
03Q+J5RPeBy9oqMRV5DqftEipgztuTtaI27xa5oftYg9LZa0ZNYfeLxO/1hf
6gT1X3ZhF4/Zd6uGdZu1Ca2ZNfI1GvPvMah/yY9HQ5dozL9uUP8/H/44avqf
ZlB/40evHBdp8PwQ6q879OzUKRo8+0P9775zndxLg+em9ZB+esT1YLNDTzR4
buI/vDkRbPfe47dGvtPEf4UuUWJOhv6nwbO6Hqku4RIY5hyowXMT/9FCYp1x
pOVFDZ7V56OExKkCC8+HGjw38T9bQHT3+BuRrMGz3z/Wl/yg/p6PLVNOaPDc
CerfRcd52SYNnvOh/kPs3fzmavB8DOo/4vCTvMEaPLtB/e9GbVvdXoNnbaj/
ldAHyTwNnhOh/j3nf1qoEZ+r14FnGxGjMt9lntbgWV1f2pD4fU9X954Gz2r7
NyQ6mC4gvmrk6Wr7b0GMttleZKXBs9r+DYhOUd2Wu2vwrLZ/A2J2ssf99Ro8
q+1fn2g/a1Ooxj4O78E/1pceQP3vXrw6YJAGz35Q/2kXLIqcNHjuBPX/qcwA
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
HlNV60LqOnTMeew/K8dN7EDh6vsPmPPY46fczVTxrK4TwZzHvvqzctwblA8y
57E/Xgp8o+rfpmZpnMd2umObrrrPRV33kzmPHZ0SmHkYtZc5j+3Nr7qm8g+T
1fVWEH779u85qnv9+E0XFjHnsa8cH7FNhavr3DHnsY+FvUmYitrFnMd2CJjU
THUvqrpdzHls6+EXLEtQfMKcxz6pP8vwPtKfOY+9Jz0+XrVeoa53xpzHdri3
sacKj26Sw5zHdv7PW5SK9GTOY/e7U/9KNY+o6wQx57EXGxx5rKo3rq6LxJzH
TlEOHaa6X0xd35A5jy1ffuy5ClfXDWHOY+/WDdA9inhgzmPfeblm11ikD3Me
u1uXPt1O/R/53f9fXsbkXxLW/CIhf+74es1cjs8vErLlMbDWz/UHOM2aXySk
QdIs7zsfoqH/ykDnsbNg3ZvdrPlFQq766rrtXPVNbH6RkDeGPv61em7F/2ee
9a986l9507/yIyYPYvlDKr/4lGAZp+KT5Q9Vec1aorVqPLL8oeqc9spBJQHf
MX9I4ZNaHPH46FwCumn6Qwp3SbPYMJZ/FORq+kMKd+xpYhs/YwH0A8y5aw8y
0C/f4xvbH6rO+012fJz9E/OHFD7q6p4Hqvmd5Q8pvHSmvkNVI+YPKfzUsxbf
Vff/svwhhX9e0nlXfCPuD6Wgi/OPsiUcfygF7aMjh49RVIFRLH9FPX+5q4Nq
fXUFy19JQVW3afyvSE/m/HPk4hP7VHki219JwYR9x/eq1qNY/orKLx5ezs+0
xP2V6jyhiYF1Wi3mfyh8VudFYlWdcJb/UZ2b8m62Lxn3PxQuDus2634j5n8o
vORMxUvV/QJJLP+jBI+TPVqP4fgTJXB8vGjocTTemfPJwmNjBm/l+BMluNL1
SjtVPMz2J3wizu3WVdW6kLr+JnMO+Zbb5fmqe5HYfoZPdOma02sYx8/wifNd
exSp7r0qUxON4saPNhlFJMf/CIlw3QvEB4q3StbzClK3uGzFys9VsM4Usy/c
tUDfLHbOHRCsnu8Ajcsv+ITpxV8EIvX8iPCVe1/0AQFZUH/m3IXp98nT/A9U
wbpFzLnlzeO+DBu4mp5nmXPLa860qzwgLwcvmvRhzi3zB50f/iqyHMYbzLnl
GEfetpK1yP7FTbDqe7Fhu/ftx+MoCh8z7OU9VX3d1yz+tcTV1SN6qvJuWYLm
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
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJxFm3fcV+P/x8+pc27nfNzHpkhoUkqRLZTRolRIe8kolBFRIRkpaSGlRaQi
MiM0lIYoFLIbtuzs+Xs9va7v4/fHdb9fn+tznfM55xrv8Xq/72q9B7TvXyGK
ollJFFWUvDGLol0l1+vzJ3kUVYqjaIXkuZJHqn2t705Ko+heybs0pqf6jlDb
ps+nl6KoSlkUfVRE0Zvqu0LtG/olm8W+151qu6t9q/6zSv6+V8m/x+/uKtlG
39dU+0Gfx+q32kl2Uf8Y4R7Ct0s+rmfaT7id5GK1a4Wvl7xe1+Vq/fX5Vo3b
HsaMEN5JuK7uM1L4ZOE2wlfG/r0f9fk29beXHCX5i+TPameq/ab2q1pPtdb6
7lHJmbr2Pd33O+FPJafoHpPV9lR7R+0YtVhttcY3kXxBsoVkXbUd1N7MfO+2
evcd1Wqr7w3dp63kX+rvrfaLPl8h+bdkQ425hHtKbpR8W+1Pfbe3Pu8s/KLG
vJt7Xv+U3Jp7XT6UnKTfvkT9l+mZ56rvILVE7Wi1P5j/yJj7/a72eebf31X3
fk/9HdQqsv4lXzdc9/xCso5amdrzapeqpayt1v9Yyaf0m00lK6gN0L2+kmyo
VlXtcrX91MazBho3X/J+PVsf9TUP+6SS7nO85DP6frlkrzC349TGqu2qNkbt
drVd1E5S21HtOt3rMcn5avXUlrIn1HeD5K+5+zZKvhR7T++ltm/JezWT/Fu/
t4Q1kGymzxOE95e8I/Y8f8Uc5d7DyyVf1Li9he+X/Dj3M74keYquOVn4y9zX
7qY2TNcui31m9mDN1LqH87BM48bq+zGSNXXtRPVVk7xW83KD+l/T/R8s9xn8
SGO+0efbOI+Sh/GMajM0bo4+HyC8TmN+0bVHq+/kxHtzn9i/8VduvFryL8kG
alXUTta19+n7iYnP677Mtz6/nPv76ZKH6pnacTaFf9a4o9AHkpfq2jeFVwj/
pHakcFPJ3iXPzyqNv4VzqVZS6xL7POykdoFaDbXqaj/n3p8bJOfqnm/oPi/p
Pg8LbxZ+SHK2vj8x9pl5UO0MtVpq8/QduuwWyddY48jzME/tZvV9IL20Jfe+
fVNyNz3bgcLrhbfF3qPTdc29sT9PDzrtB+ZNY6ZKfhr2DPP5SdiT56l9FsZz
vj4PZ+w+rddm/e76wnPNnNfW/b6T/J57RT5HX4azdFr47orcz7ItnJm9dRa+
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
KZUJBA==
             "]], Polygon3DBox[CompressedData["
1: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

             "]], Polygon3DBox[CompressedData["
1:eJwt1wW0VlUWAOBfeMR7PFAJAZWGkTDoUkrg0d2SkkqqSEg4o0hISzcoLQgo
CjhIjYzgoIBrDJASRUexFUFxHOfb639rsRdnf3ef/5xb555Xou+I9sOzJBKJ
QyKbWJeeSHylkT97InHuhkTiQGoiUS4tkVirvZ7vEV+wweru1p6Ykkjc6Fhh
NZN5RZZV31F+69ecicQwdTXZs+r6q7uu5kNRQfsXfkWsV/OIuF97obrKjp1V
s0Q0ZjPZAr+XS75MNGGz2SKWW/6nGKrPRf6JeN5vLWUZ2rPULVSXLn9edGDL
2HpWWP6C6MpWsy2smLyRc/nU7xVwHvsc+5JtEA9qb1L3qrqy8rXGucTyqjut
fi9bL/qwjep2qrtDvkk8xLazN1hF+XxxH5vEprKs8nXigZg/e4mVkH/lGg6O
68HPiDXGXCKe1J4fN8yxS2rmqq0lf0E8gxPyjWKQfJvf24vukY8SpVk+cz6r
b0PnOo/dy55WN0VdFvl5cZPj2dRlFxuMuZmNULdL3ZvqasgXivpsKpvJcsrX
iPZsKVvHCskXx3VlM9h8liZfJFZoz2c5jVHHXJazFurmseWO5ZVvEROjr7jK
XpUvEPXkU9TNYDnkz4pqbBwbz/7nuqxl3eK6sa2suPw5UZs9xSbHJZS/KEaz
fewYqytfLdqxJWwtKyifLqqz8WwC+9MYK1jLbMnziPPJJx/rerWNZ5vtYAXY
VFGZjWFj2HV9qzvn/fFe8EXijZivuKzmDnG7upXqusazIC8jbmMr2N+M0Uuf
newAK63mr6wne4XtZ6XimRJfy8uJImyVvt3ZN/IKoihbzRqYyylzudm9+DSe
Jb81TF1x7b7qHlB3Rt0jrFTco9zq5J+JEawke459Ir8ontK/N3tV34P6llHT
xRhXjNGDlTVOZ/nK1OS9iXtUinVgq1KT70C8C+v8xtvy4aKE9lxjnPX758R4
Vj7uEftJ/rN40rg92Mv67vMbJdV8z78TDzlWzrHm6idrD9D+u7oj6u5UN4F1
YVvZHlaEjWed2Ra2m93OxrFO7EW2i93KRrJmbAXbyPKwSaxfrJvsn6wc6+j8
rrsGpZ3r5BiLPaOuv/br6t5SV4FNYQPZXnaU3cW+dQ7fiEGOlXWsmfP4Uf6D
eDg9eS1asIna3bV3ZK45sZY8zfqy3ewwKx/vM6sb15QtYSlxnVkdNoctju8C
G8KqxtrCprE/jNeSXZE3ENXYRjYuNXl9F+dOzinm1kLdd2ruFffEfWa91P0k
rxTPNNvAerIf5RVFabae9WY/xzdB/CVzjB7sh/iteF7im8X6sevyWuIuto31
j2+DvK6oEutGrKUsj/m1Yg3ZYfZKrB2sNWvEdsb7Jw6xtfFtcK/KuGeDWHZ5
Y3W11e3Vd6hzq8GmxZqorqa6B9X9Kq8R75e6rfHcsRzqMuI6sDfYgNTkR7ce
q6r5WtxDlpM1YfexfWwgu4HVz7zOu1gfdk1eXZRnW1hf9pu8priTvcTam881
8yruWZsUa7L5thG/q2kq6qjboa41uxrXJObNNrMJ8Z3WZzgbwq6wtur+K28W
15VtZ63YL/L7Yz5sE2vOvo3rJO6O95i1Y3/Im4t67GX2GGtqjOVsA7vRmE+k
Jp/tRbmT72y8u0+yu9gj6oapu8aGsPysY/wmOxb3gxVgnVgL9g6byO5kI9hQ
dpU1Ne4X8VxkPldLWAY7LS8mCrLprAm7ENcznM1jzdh/4p7FGs2WsmnGqGKM
sWws+509rq45W8k2sZtiLWY3s16sEzuiriP/TF5YFGCLWGf2eazXmXOJ+TVn
H8lvFTnYszGX2E/JCwm3ODEtzo19IL8lJbmnm8o6sUvx7Qhni9kccxmp4Cj7
kNWO77a4GPMQ+dgCdZPYPeoOx3vjWfpe3kqcUVNS5FI3S91oVkbNqWzJPcsf
8S0Xp+I7Ft/4zGv6qHEbxv1la+Iexb5MfBrnKvKzheq6sC/jHY9zZsvZbH0f
0/cI+4DVUjOXPR7fCPYRu5etYnvj3OJZMJfPcya/1fHNLupCFRMb1SwU49Sc
0PecYw1iLWBD2EH2Lqsc+zU2lr3LzrB6sQdhT7Dj7CyrH/scNoG9xy6whixD
/FueV2Rlk+O5Yu/HuQr/ElPYPH3H6PsO+DhzDzKLPcreYu+zmmwmG87eZCdZ
NbaMzYz9rujN3vN7M+L7Lf+HuhOsaux92Cj2L3aK3RfPVKxF8V3jFVyXTWq+
ZpdjXbV+ZPcHQn//d+Pparrp20b9ofgG6P+xvLhQkpgZawk7G2u40CUxmz2h
0VHfzew1dpuanuwW1o91Z8djLUlLrsFt4tk3l9Zpyb1E7CkGpif3HU2sC1O1
H9ben5Lcr8WeuhPLxtqzJux1fTqwrKwta8x2x5rIsmRLjtEocz3tyFJYO5bB
9sTzx9JYF9aK7Y99E8sb15h1Zkdjb5aW/O0Yo7w5d5P3UJdPXR/WxbG3451m
qawza8kOsFGsVey1UpL7nWPOoyvLxbqy1uxgvKt8Xrw/8Q4bo2Vacv8T+6AB
6cm9V4br0ku7oHZ/dT3Uv+v4dDaUHWLHWRW/VUj/kd6Lc/yyKChvG/t+NWVF
HnVzcybX2Vhvl8S3I9ay+H6oOxfrpjBkYo6aC+J8fHPTk3u0xg5MUVdJe7S6
0ep+i3XS8cHsAHuHVYp9N2sd31q2LebM+rDCbCDrxU7GXoAVYgNYT3aCPciK
xHqTknyG41keE3Nk69h2lj/+1mDj2Ul2nt3P+rKibAgbyE7F886KsaFsEDvN
/g+F/N8q
             "]], 
            Polygon3DBox[{{2424, 1319, 1580, 3241, 2284, 2285}, {2423, 1318, 
             1483, 3231, 2282, 2283}, {2275, 2274, 3227, 1425, 1426, 3228}}]},
           Annotation[#, "Charting`Private`Tag$652213#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJxFm3XUFdX7xV/eebkzzNx7QFSwML+2IChlAIKJLXagAmKjgIIiStjd3Yog
gkmIImIQggEGBipggdIqDaK//Vn7rPX746yz75lzz8yceGI/z+zQ9fJOl1VX
VVW9UVNVlah+uaiqGq6GiapvS6uqpgrPKlVVDRZ+T/hT4TuFpwt/K3y78EfC
XwsPEp4o/InwjcIfCs8UflH4N+G/hW8Q/kB4hvD1wu8LfyZ8ZFZVtbMe4Fe1
9RfeSfhn4c9V76rypvpdq99vq/5I/R8X/lZ4vvAQ4Z+Flwk/L/yT8FLhZ4Xn
Ci8WHi48X3iF8GUab3eV3VSeVPtstf+u9v7CbwlPFb5DeJrwN8IvCP8ivFz4
GeE5wou4r/7/nEojlQmarzW8u+qT9PtYle1ULlRpo7JC14apPjS2v61xGqjt
CJ5Zvw+J47yj9qPUfpnaT9PvJiqL9LuX6r1VFgvvUfiZy5WqqpHq/4fwavV/
WfgM4XdVb1Tff1T2KesZ9Xue2peoz9367y7CrXhe/d5SuLHqVuq3Svgg1eN1
bbXwz6ovS70f3lSfJzXe1omv/auyUeVMlR5ar3Vqv1T1Kar3Ulmn9gGJ+50Z
n4lnm6D6usT91uv3JarbqqwUfkLXvlO9QPd6TPgb4d+E7xWeIfyD8ML4vn+o
7pd6X0xW++XCLwmPE35V452q0ljlGpVdVB7TtQ9Vf6DSVGWyyjkqzVReVxkU
53c3vf/1qpfr3RdpzFz/e0v17mq/Te1/q72B8JnC3wlfo2vj1GeK7rsg9Z56
Te0/qW6vUkflo7yq6gL1qdF6ddbvI2L7o+rXV+2nqn6/8D5/RfXDqh9S2ULl
P/3eUvWzqi9XvafKHjyzfn9a7Xs9rfv+KLxQz7BFxfP5odpfUvsCta9U+2tq
Ozzup3cLn7URquvrXe5kTYUvVX1c3J/t1b6D6qFqRzD8p3EuVPlFv3fU72Gq
H9T4X6ptnsZ/QPgL4bnC9wh/Jvy98P2cYeE5wvcJzxT+UfhR4a+FfxXeXPc6
XWN+rTHfKXz2X+T9Eu+PbVU+jmdpG5VpurZC/386+Jz9j7lkf6t+PJ6joSpP
x3f5ROWi2L5I5ai4jz/WOCs1zjMa5yfhrTjPqg/XPv5I+DDV01WfH/uPUN/f
dZ9VeubJ6pezr1RXNOcJaya8beb90yjzfhoUz2xH1bcm/s9Wmdu3VH1G5n31
v8znZWA872DOzTjtnYt17QbWXPf/U/e4Su07lt2HvvcVlhX8t0blDfVbrvbP
Va/VtZuEn1R9lsa5T9dHqf1s1berFCqr2Mfq8z+N+at+36FS4tyo/8Vq30/1
GvW5V23dC68V/62tMjpxO/crNA/faOxXNJ991XaPSn2V09V2m64/rXnbLLZf
rd9fpL7eRuOfrnKz8Kupz8dN8YwwZx3j+D107UXVYzXOeanP9Ajhdrp+pMrN
yBnVB7HewpvG9j+F943jMHdrUp+F1apfU1mqtu11/x3KvvdnrKnwYYnl+V/x
nHJeWXfO9Wmq71LdIc4V/2cc1ojrN8bnPyviJbq2i8bsLjyvcFv72D6u8LMz
t8errVvi9WB/oi+mq+6Weo+/pPetKVtffKT2fVSfp1JXZUpheTaWs6P+FeG/
UstaZG4d/f9g/b5E9a0a51PtrUuF22q8BYXnbLrafhXuL3xW4d+0b6K1PYP5
S/z/kehg5HO8z9Uqy6q9tn3j+u6hOemPHFP9QmJZzJo11O9+wg1Uzy/c93Tk
Scn3zdT+VOK54txxFqfyLrq2V9nj/6H+T6huqPK32u9OvMas77Zlr/keqhcX
fuaFyNjUcvg91TvpHreofUfVv8V5fLPwPmffPFVYxt8V17dexc87Unv72sTv
9XC1dfvFifX7gYllNPL5gMR2BvpgpkoPlWHq81Vs/yHuXebjXz3P94llHXqQ
sbkH+niHiLkXewEZjUwryh4THc07Mv+LCst+xrm92nIa2fVIfE7kJ+dwVnzO
hcy17L6ewm9pnZ+NfXiXjpnfK6iuZJaf5czzfUGc8+lxjRj/iMzteeY1477Y
CdhI/Bfb6JfEcqeIZzGP67WysKwcXXhu3o7z04nnUmmu0lbjjlH9JXpDZXPO
tepNyz47nKG3CvdtUPF+GBv3xCWZ53Vp6n3D/tlUfbqw5sn/y6D6cfyWKqez
DiXLttFxnP2iPERuP1DyGa3JrK+nJN672BfYGf2wBXOfFdaldeZzhMzBNpmg
8k+112F8XIv9M5+Frpnnh/si95AJoxLvUc7yO4ltrEPZw7p+iOoWGvc04Wv0
XPty5oWvFm4vfL7wzSWv8xnx/B6mdgz/O9R+kHB34ZuEp6WWScjhdirnCd+o
9g7x7NxSsv5Cz0xR25jc9001n6eqvRbvj52u9s6cCa1Pc95ZuF/Jch1dhmw8
XO2Xq/1OtR8gfI7wIOGX9N9j0Dv67/7oKuGBat9H+GThq4Sn5H6vhzW3jdV+
nHBvtTcRPl74CuEjhHsK3yV8oPC5woOFdxHuiO0pvJfwscK9StYL1XquSej5
KHNurbY+Qa+g40tl731kL7b/kLi3sTuw47ExumgehqtuiU5ILPs455yDkbH/
vNRne9/MZ+WleF7uiH4E/sRPqc9wC/X5JbWds0r1nbq2FjlWeMwh8b7YO8Oi
fMBWx9bZOr4H74P8PCfzeW2i+ofUNk8z4VsLn5G99X6dM8ubddiPieUv/83K
lg3oI+yuofFeT0f8aDyz0xLbrLn2xCca4w3JzBGJ52tN7PNY4jPMOK8kfrfq
su+DfnwxvgNzwnnBpm8ovDjej3s1LHt9Lihs03P2yoltoYmJbV38pvcSyxd0
Hnu/Wu/3fuzPOUXmIfuwLbENn4rztjCxjmG9H+GeiecF+fxIxDcXvs6+aJFY
FmC331J4rpizqrL7/8tzZn7m77DZU98TWxbZ+Uy81z5x/lmH5nG9WDfeB7sF
m29n7CTVF+uddhI+jPcQrl32/CSqL1b7c2p/g/cWfl54lPDemded9a+rfi8L
B9XrU6/b96pfKKzf32aPZfZHHirZV0Dfo+svUr9nsXnUvl3Z+zxVfYLqB1Ua
sA+0B4awbjqvrTLvZ/b159FGxRadlXrd2CvnqNyn9qEa8zP9pwc2C76XnmOc
rg0Mlutjokx+AltKfb7PrQ/YU9igfTPbAGOE99X/H0D/qM/J+n0951Xjnyt8
v/Cwku1j7OTzVE8trC8/iHY1sg65v1XZz8l+w5ZFl6LvlhVem1G0F5bJ56v+
Ie7LMYyTWX5M5jwkbmcsZAsy56IoZ+iDDN1M9+rDuS1sp2yS2AbFnsU+Qect
Lfy+7KtJiW0A1gZ9ga7AJtxQWGc/o/rPxPZh4L56nnGq26k+M7Mdi624F7pN
eE/Vc6I+Ra+yX9m3n6W2T4+P67t75uf5CvmEXc2+wDYs3Lev1uvExGeDc1FH
9kZeY7vz0NTre7v6/xhtTmzPutozJY37gf67c2Z74ePU+gt7BR2W1hifhd7U
XJVqrC+o09i+X2odNKDkAq6l8dqpX1Fju/eheGa592bq30r16epbwucXPgqs
59kZnaL9Uxsfn3VQ+xt61u+F94x+35Wsm+q79HsL5JL6b6v+Bwl3w88Vbi18
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
5zmOfJ/CuTobhHcvnIuV6L13K5xrVy28S+G8nSrhB3PzmW8xTrB98K/wToXz
gjbCu6tPS+E3ObNlx8lqqR6GfYzu45wW1nH/qf2d3HHAT+Aec+envSJ8U24+
dpTwe7njkjOEJ+WOXc4Unpeb2/+GPSDcDZ0i/JPwYOGvhUfmjhVOFh6Rez9M
En49d2zxI+E3hE8SnorNkztW+CFxktyxxSnC26Re0y48f9lc4gy9R+2K+U94
0Odyx2XeE74hN2/8hvCNwrsKvy48JDdn/n7Z+TP3a5z1GueF3PGdD9jnueOY
X5YdU0MGE2f4Inf89IuybXRs9c+FvxPujY1Uto2PrY9unhTsT56NjRl8NuBp
OwfznviwNwT7P9jM3YJ5AXy6G4N9J+zk7sHcAT7m9cF+FHbyIWX7qoeqviCY
a8A/7RrMTeAPDg72f7DPF1TMp3P211Qcu+VcnBjMJ8IPrKg4XsteXVVxvJZz
tLriuC/nBV6YXEd44t8r5u7ZMycFc5RwBWsrjh9zds4N5mrx0/+pON7P+m4e
HCfDTt4sOH6GPbxpcKwLW/qhYNlNvBtbFDvpS3yBimPV7KWGwbw59hu6Gx7/
c/RkMK8Hn/BCcG4l9tgTwXJ8MzikYE4ZvuKcYL4YDmFO1LPo25uCuUj8F/h9
+PwOGufZYN8Mf/OpYE6NeNYDwTYo+YcPB+uVTHhdxbkC7M8NFecQsN+uUJ+T
Uvvp/YL5Vny3a4L5Nfyj/sF+L77YrcG8J75Pb+I9qbmIq4P5XPyyW4K5V3yi
QcH2DVxiL+FOqbmFS0LknoTvCeaR8UMvFz4qNVdwmfCRqfmEHsHcHPzDpSHy
aMJ/VCwTkY23BfOw+Gg9hY9OzRusrzgvgXN3VTB3jA/bJ9jHht84JZgLhuc5
OZj7hlNaVHGsiPO7uOK4Dud6YcVxHWTsqcGcMpzPGcHxAHinvyuO3SIzrwz2
8+E6/qo4foYcPi2Ym4ZrOiE49gAP9mfFsV5k6YXBHB+8zfnBvCF80fKKY07o
jiUVx5aQmacHxwPgu5ZVHGdC7xwfHBuAg9okOP6KnHw82N8gN/XJ4FxA+Gfy
UYllE9Mmxk2smZgzMVC41nr4LIX5GXgaZAJxqhnwf8F+IL4eOT9w2nDbxNDR
C+gHchvwMYhLv1SYGyE2jb0K70quKHGadlFOkrcGh0u8lNwJbHv8YOKJcGUb
8TWDY9vIZ3IdiWGT90q+F3FScl9fDc5ThCcnF5S8JvL1Lg6OY2ELDS/sX2xd
tt9EbjM8L7ll5JgtKZyviV1B+07BefD4wuTkYdeSP0wOLblb5HBhz2Pn1yk7
f5T4LzHfvYN9P3zMccFxVjjzi4JzxPH13gqOqePvHxCsU9G/5HIR/8L/wC9D
N6GjiLtVoqwgJk0MmjznBsH503AU9YPj4ujQtRrns/i+eTx36FPi3MS7yddt
FJw3D4dAznHbKA+3Dc7Xxzffmr2U2XbdLvg7AXz8esHxePTUhOA8LezGEGUI
em3H4G8G8P23D/4OAd5gi+B4JP7yLsHfIcBRbBnsA+B3byV8VWpOAHsRu5E5
2SH42wO4hQcK5zd/Xzj/jDwR8rqLKHOwMcgDaBNlOLqGWCRcwue5403o00qU
Y+jfulF+oq/JAcCHwpcqR/mDrVInOD8JW5GzwRnpXDiHE7t3S7XXDs67wi/A
dz4rPmcWnDuFjVQTnOOFnZkE53Jhw1QH529hw1QF51dh89QKzoXChnkk+JsB
fH84EWKlvFcanB+Gj7Bz8HcgcFBnBscy4cb3Cf4GA95jZcV2KnYm+an4suQK
kldD3ja+677B+f1wI+QnktuNnwx/QD4iee3kfbPf4HNfDo7fkHeKb0EONzlO
xIfrxhjxyMK+EvnsnE3+T/44nCi5ieTNwEOQc8n3HviI+PP48pw/+AK4AvKJ
4TOOjn4WmDx8fBHy+OEi4FLwL07OHBeHS7hIfa4N5oLhMLcvO4bep3BMirgk
8Uk4N2zCk+AJguO78Ki8CzFv1h5fcE5iHuS6YL4YjnRAMAcNj8r1ubEPMSRi
Sehx2ubFdvJM+E0OHjni5FeSq0yOOpzTm8GcEFz3Q9igwflA2OScUbgO5mFG
nB9yVocU9t3I7SHfndgftgrxtyVxXYihr0qcc8vYq+P4sxO3g8kjWpk4Vjs7
9oGLJMdyfuJ8oOHBcQ7OAr47+ejk344K5peJBZMTQFwNe4+cdfiGM6Nc/y1x
3I4cJvhvcvjJHSFet2v0g1fEPfBScFyQPOc1+r02cRwQf5n3vjDyAX8llt3E
M5cnlpvERsnZHx+cx/1zYo6ve9x75I8RNyV+Cn8CtwDurnpEsK9LDioxXL4V
eDs4t5nnIBeamOSa+DxDg/1h3pH9sjLumQvjc5Jn2CE4lt846pZlce2GBcd6
4aM4d+QZs5b45pw1ZHzj4O834JA7Bsf7id/dHhyrhvc+Ijg/gFjeXcExdWIr
8yvm6+Hn9wv+Fgtf+LjgfAXice2D8wng6o8Kjs0TB7wjOHYOl35McE4D8aYh
wdwEebxHBuc3EFs8Nji/gRjZ88HcLt9AHR0cRyc+eGDw92b4ksQ28H/IW9or
+FsUOPM9gr8pgpduGfydGHxvq+BvpeCX7gvOVyCW1Dr4uzL84hbB34DBGzcP
/n4Mnnn/4O/E8Hn3DP7WBf68WfC3THDITYO/e4FDvjk45wa+5e7gPAliH79V
/F0WvO7uwd/SEAvYNfibNGIEuwV/g0csoEnwdzhwyIcF55EQSyWfk/wY8vLa
BH//hs/eNvi7IHizQ4LzS4ifHhT8LRn+frvgb13w9zmjs+P5xbcln26sri+t
2AeGZ0DHwvm/p7EODc5rIYb7f3azILs=
             "]], Polygon3DBox[CompressedData["
1:eJwtm2XYHEUWhT9mQvcw3TNocHeH4A4huLu7u1twWdwXd4fF3SVAcFucxd3d
HfZ9Of2jnqnTt1qr6t5zZabYbOfVdmoNDAz8pz0wMIjfGeqBgW/pb9kZGLir
PzBwb3dgYFMGLFsODOwI3obj3yP/jrYV/VkY/yv9Henfg/z6amDgKca/VgwM
fMQ5UyB/G/lD9G9D3gafD/6cdjFj9+H6EzN+NOQrI3+V3/GRnUbblmvO08mz
ec9tmmeamt+j23nWu8HLgZ8GT9gbGLgJfBH3PpZrToy8pF2K7EvaJdzvJq5/
Mv0xac/SX4pzH6X/Ee018Ks8zx6cuzb9PbnWHeBdkB3EuBHga7nGdJ5L+xXZ
gdyr5MMVtPk5ZyTtM85fGvnP9M/nnI04dwnwY5z7MMc+R36wz8vx8Xi+++kP
pb8XY79CPq9zwfX259gQ2jngT2mvI7uXa8xH/zna1fR3Qf47/T9ou9L/lTHL
0/+MtiF4VtrZ9L+gbdzJvDq/39A2pz899/+a/mb07+T+3Trfe1PwHeAD+R11
UK5/QJFm33vOx73uaZ7Hc46l/z+OjdfOM8/OuXvzjSbifTscX8m5YcyEyGZD
dgP4J45vi7zVfK8JuP/i9FeifxnyC5u5XMF7cuwRzh9Gfz36lyO/uRmzCMfG
Z/63Rf4K/Zdpk3Ct9cAb0X+PNhX4SsY+2c58bM417uP8Azr53lcwdh3aUGTv
0KZk/KLI5qJ/B20x+l3a1u284/lc6xbOv4XfS3jGCbj/+7zvcfS34tr7IXuC
3/fbWa/TcO514CPod1wP9Gev8y2dx+0YPxO/44JPpc1M/0Se50+ud4/fCfmt
3Ot5ZEu55zj2Ovc7APkG9PdGfhXyHZAtSduCY3fQfkU+s2uC/h+0FdtZY661
72hz01+TNsD9xuZ5bqG/EP1LuF6H3y3Ac/hMXPskjr3L7wtcc1yebWHGd/l2
x3DsAWSn8bs/sh+a/XsjY2ak/zH3uRj5J2XwTK5p55DnX47x89LfBnnf74Bs
YdoFXOtWjq3BsVMZMyrfdxzXI7JDaZM2a3aSTrBr2WfwWXZk/OiMf5j+ba3s
2X25x2uM+QX8Nf1LGftv2jeMeY9jU/Osn9Jf0Gs5v2Wu5fuNRlsS/CDtLWRv
0tbmvq/w/Ltz7loc38P9Ap4SPAZ4jX7009ad6MurqrzLq/T/R1utE52obmyD
ezzvkZw/E+ePz7F1+9F37tnhHBuM/CjkM7vWkK/Xj368HPxVs2fd4+71i2hz
0Z+Tdi79K2hvc84ZnL8g46env5nPxjPV7eggddHb4G+RfwKeto4OUZd4jTka
Ha+u/809jPwIrjcj48fjeusgW7mTveceXEW9R3ukHR27JP0JOtF9N9Dmp38Q
50/F+WNy/pruRfAUzh14dfCkdb6X3821oE7yPX3fy3nWs8CPMLYEn15lfkZp
53uuw7g1aa/Tf4N2G7LbGb8Bxz4En8f4M/rR2eqf27j3meDd1Qfg27vRi+rH
G2kL0J+wzvv4Xjcydi/GTMjzlu4r8NHgWcATgtdv9Ju24Hr1JedM7Xw3a7JT
ZQ26FudHfh94X86fFFnFsVWRHUEbznk3c+ynbr7BLci+aeXbzN3JXF+lzuL4
u4w5DNmm9Pdl7AXgYeAh4K3B54MXB88O3gp8O/ecs509794/EfmcyKdAvjHy
OTn2l/ZB2wO+n3ZIJ/thIWR70f9b3QG+WV1Txb76jf3Wx3O9IVxvMmQbgk8A
zwGeHLyR9hS8Knhh8Pbgg/qZsx85djTXugC8SSf67AnwSYyfC9mUjN8E2QiO
LYDsGtpxVWyg9ulP2m7auir6dgrtaD9z9mSZNe9cfku/R/8D2vpyG8YfS386
9w1jT+d+C6g/GLdpP8eVq9PV7Rdx7Ed+pwZfybmfyWnoj6Q9ybnPIxvLtUVb
xH3MsUm4Xpfjq/gtwdOAxwavDT4YPDV4LPBa4Jpztm3HZmm71HeuyX0cgz44
j/FD6c/G+C2RnarOoP+7OrUKB3rJdyvDjVbohDtoQ/6xJWXm/lZ1LrJvwIu6
9mkv0b+7iq14RhtP/w05D9feENk+/Xwjv0nl90D2Ju0g5BshH47sTPBC4BnA
m4OPoz3PfR9yz3C965CvRn8R5DvIN3nexcBbMOZn3u8cxozhXkZ+HvJpwO8j
vxy8IHgq8LvgS9xD/ehwdfml4AXAU4LfAV8Mng+8Fffrgn/h+kPB0yL/AHwF
8oXAM4I/AV8NXgw8A/hj8FV+F/D04I/AV4IX0R6X4Sbz0L6k/ynXvwj5dvTH
Qb4tuAb/xv2GgT8GXwjeFvnY4NG43iOudfA0fkvwh+D/gBfuR0c8DD6qjO54
j9+r21kTPb77TlxvTAk8x5dBvgt4bPkUeDnw2Jz/LPjf4JldT+DHwceBp5fv
gR8FHwOeFlyBHwMfC54OPA74OfAp4FnAY4H/Cz4ZPBN4TPAz4JO06+DRwU+D
TwTPAJ4M/Cb4AnmG/gPPV4F/5XssDt4BPDr4T/BS4J3BY4FHYfyy4O3APfDv
yJcAT8H13gZfJE8GTw5+C3wheB7w9ozvg/9g/JLgz8AXg7dHPhj8Jr/ft8Ix
Rtc2sN6mdf9zfFzk/wOf7PoqMn+vgE8CX1Zkvv4Gvwh+v8h6+ZI1uhr92fxm
3OtH2k309+Z6E+rPMP7frq8i9/+B8ZvKVzl2NmPfQH4B/Rs4Np78CPnC9Cfn
2P7In0O+M/3jOdZv9O9B9DfSv+nFB3A/r8i7TNSPjv4P8lNa0d0jGg6/QSu+
zBe0K+nv3Lyv/Hc/5G3090Rc7wfkNyLfSy6O7Fvw9eA9yjzf9+AbwHuCx29s
l3xqZZ7h78b++L6bqPeQf8Q1Z+F5JvAa+lbc6/BWbMae9N/u5ntvzPgxGf8p
4xctwgHkAm9w/IJ2OHfF+MG87/PITuX4rO4nxs9WxAZriweQ36d/hXwy9486
Fvkmcmjkv9PuoL8f8kmQtRg/AnwIeHLwIPAD4MPAU4L/YPydzgV4UnAb+f3g
Q8FTgEeVc4D/BZ5K3cY33wV8AvccHTwx8lfB5yKfCzyh/olzD54DPCDfYOwq
HLuGe/3B++xQhBPLjW+hbU1/ccaPytibwVuBh4IHgW8CbwleTA7ZD4eRy8iB
TtUX5/jx6n85Ed+vYMwSckfwy1X466GcvybHxujnG7neli7z7bzHcJ5n7Vbu
/RvPtx14GXVsN8+0L3idVp711m648d/qHK4/llyN/nD5Jf0xOvF/9Sn1qe9m
vAGIpeRwXOtXfTiut7Q6vZu2lmu5jEy+4FwuJM/r55ttDF6wzLe8upu9sQD4
b8b/1Ytfrn++gL4t8vVb8alO4vluAG9Bf1E5IOf/wvht1EXqGNcLeHvwsuqA
buZkXfrzlJkr77Eb8pVbufe53fRnQf5TL9dYEzxHmWtrr53rWcvYN7+h33au
Mt/We/gt5y5z73PAK4FnBv/YSzzG9bUMeLR+nnnvIvfwXVwD+xT5Zq6Nw2jz
0h+H8Z/1wse0r5OCvwaf2s23nhr8Lfi0buZ2GvB3vfAf331a9Sb4G9q6Ra75
7274//z0x0X+BbLDwfOBB4M/70UnqusmLqMrJ+Cbvww+CzyEZx2vij49Azyb
/IDxi4InAX/F+PGRvwQ+Ezw78i/4Hb0dn3Q01s8z4L1aief8t0z8SN9TH0Rf
xGd0Lqcq8+y+43pFntF39x3XL/IOvrs6Z3b6/TK6SJ01veu1jC5TJ6vre2V0
tXMoV5GDObfq9BXpz1RG17tG9yjCcV27zuFmRd7RuZ3ImIl9xs/Z+BMzgIsy
us05W67IMziXzsEGRTipc+McrlGEYzu3zsEKRXwy58Y1uHmROXdtOifLF7mH
cyV/0Nb8zbEPe/nmqxf5Bs7FC+yZ3bTnRfSD/nXBd92kHd9/EdoOrfjIi9Lf
lXPGAbd5/uUdy7GL24lBHVEl5mNM6oxWYkEP1llf6jz30wN11p97zvW/G9cb
DB4kz+Lcx6v4ApfTOox9pkq8axaueT3yv8rYImMgxkKMJxzD+U+Bl6X/AeN3
d20w7krGX9mNbTSW9adrG/nPyPegfShX6qa/J+0j8FFccwT9XWnDXFMcO4z+
ZFz7qoavn9mKPyA/G1ln/6oj1BUP19n/rgnXhj60vrQxyqPkYlViU34zv92j
dfa2e9q9/d86+v4IcA1+po7+OhxcgT/geY8Hb82z7S8fruPbHEf7kWvfU2ft
uSZcGyPq7A91rvr1oTr6S5ukPvUb+62N2R7J+Vdx/Q1b0anq1vvr6A9tgvrr
7jr73TXuWjeesKW+Nq2F7D7akq3oWPWh8bSjwU8gX6aT+TurFX/472aOjDsZ
f3LujJ99gfxd8LqdxHDd+0fqo9O/QT2D/Bfwds5FlVibPqC+oPGH7Vrx742/
Ot75O5w2eSd8/odW4onGG42nnq7+adaYYxy7jD59mfjNL2WwsW7jyRPQf4y2
tPaOY4fQn4j+Nf004wDGA5QZAzcWbozYWLExamPV+rz6vpeCJwdvyT0uBI/P
8dPUvRybsZMYpbFK3+Gbxv/cHvne4M+NHVbZq6tw/n/6WaODjcu2Mn4Q/X1d
D4wpO4n37Qd+2PXdyf6u2Nu7gZ9i7o8ucm35gzxCH1dfd3HGXsG1n2b85vIh
42bq6yrjPe/qfni2fHtf2tUce5Hxp7QT67yunzHjdsIXPPdd2k9c70r5H2O/
BO/XvPu1/cTzv24lnmPMQX/e+LGcR+6jT6tvewLtOdcs5w+mfxZtwL1kfIDz
xwb/TP/cKuvJGMYv9H+r4++8WcTf+LMO/3yniH/5Rx3/6O0i/qd74uBO9rx7
5ac6/tQrRfT773X8sbeK+KO/1vGf3ijiv/xcxz/7XxG+OG7zzc5uhbu/h/w6
uWwRfvsbx25vJbY5sf5FHX/ypSL29d06fP+OIvz1C/C94CeL+Ge/1PHXXi/i
n70jRwLfXoQff12H7z5TxH/8qg5ffrqI//dlHb79VBH/bz5wi/XSo81DfyTH
TpcLGz8FPwg+tgjnm4Rv9XId/nlOEX9BG7RgEZ9W2/RBLzFsfXZ995fcT/TP
LuIvLF7Hdxmlud9idWJHUzB/Q+m/Vccfv6mIP/NjHX/35SL8+5s6fP+/Rfzb
N+v45zcW8W+0CTt3YtO1Fd/X8cdfLMJH3q7jX95cxN/7to4/8GwR/2TPKrFe
Y5CTI5uoTq5qqiae8n4d/+reIv7HnXW4iDZeW39HHa4iR5GrXAMevxWfSj5y
bR3fSh9IvuA3Ev9c5Ntpz4wV7eUeY+yd3dhr966+wIx1YonGfGaqs6deLrNH
3GuPcGyNVjimXPOpOvz70CL80/k8lO/T5/sPQ/ZEHf59cBE+/1gdLqoPoS/x
ZB2+rk+mf/F4Hf6rD6EvcX0dPqIPKP+6tQ4XkePIdW6pw7/kKHKVD+v4qyOK
+Gsf1PFP7yvin31Uxx+/v4h/9kmd2Kt5AeMtn9bZP48UiX98Xsffe6xIfOSz
Ov7io0XiIeP1kvtbvvG3n62zlo9D3gPfWIerybHkWn7jUTqxmX772+twZzmo
XPSqOvkZ17jzdRt4nlY4tnz1BvB0rXBAueBNdbibHE+u557/sMyeVRdoN7Qf
2lDzP8YjzE3tQ/9w9WWV/Ik26asm36Ut6IIfkmvTZqV/H21wnRybeRjzMebe
1PGtTmyMut8YvLH4HWnvVU2Oh/GvtZL72aKKv39ekfidfN143p7aMI7tjvx8
+tfTPwD5buDzwNcV4S/mW69oJcZ7f2PPzA1ro96okm82VzMD7QZjV/ITbQHt
VfcebbZ2ONu4zk0ne2Gsxh7IYbWPVcNf5ShyFTnl4VVyAPqLxpLNDdzVxEPN
oR1D/48qubpV9T+q+N/rMf6aMrmFF6rk1lb3flVipPKPaZv48pPyzVZier06
+UpzPQ+Cx1dXVOEWvpPvtiDnjdPOnjYf4fWMva5Le7HK+G1aybnLR+ST37US
QxlUJ8dprtN3MLa7qzYP+bVF8pXmqMxVmdM117xJlXjumch3Q75TldiS8Szz
CxtXiQefAd4VvCn4YPBZzi34wH50ozrSWJxz7Fw7xx+qixh/Av1LisSTdwSf
CL60SPz44H7yVuavRquzJlwbPrNc12f22c9pJfdq/uB2xl/air7dvgofvrhI
fnSzKvkR7Y35OuP35lHNpz5VRWepu9RRxibMgX5eNhyB6+1RZT/5Tr7b3uCr
3dvgQ8E/VeGqN7nGGP81ePZ2ckjmJ78DD2knB2/9wj7gazj/Ls4/jPNf4V59
ZBvTRnWtyrkb+31IP3zlpHZyNuZu7qzCDazBmJXr9XuxfX4zv5059FM496F2
cusjq/DHHxt9vzn4X+Bzi9Q7XAa+DFwPiv00p2a86cgiubZxetEVj5fJp3R6
iYfsj/x08C5V5uKaInz1NfBAO2vS/aiOVdeqU409q1PVrepcY89vleG75vwv
anS0ulodbazcfKbvJyefo8npPN7EAOT35jOPaiVHZ37H/NiU7fib5kPfLWN7
b3WPNWvate0aft5YWJXctvzuRGRn96On1FdnVMl5m7s4vUwuXA4kF5IjGRuX
A8mF5EjGxg+rogvViSe7ttQBDb87vh/9LXczP31dFY4l15KTGLvXhmnLtHHG
HuUIcgVtnLFLOaBcUA5h7FNOJ7eTkxmLP4T2pN+eYyf0YwO1heYTjV3KCV1b
rjFjndpQbak201ioNlBbeFcruQPXgGvBmORozP0FVdarHP73KvUq1nc4B9Z/
nOL9yqyBUzy/iu82tLE38jXXmpxxXvqfVokX7tP4L59U8eV+bvhL3Us81e+p
rdE/0Paoz9TN6tOlGv1lbYr5sGWL5NiKXnJi5sb+oJ3gXkC+X5E1bLxy7Spr
yTl37l3Trm11uvHU25rnM4agP2oOWd/jpMZ/kE+5t8xZm5/9uEou+l7aOHKJ
KrnATWlvVrGJ2kb3oLmuB6rEt4Y19vZWWtGOT/Mw/ZsbbA7yhyo5R+2jOkxd
Nhx8rbrLa/YTY3Ht64O/U8Wn/MFYdju+pnvUvaoO0dfcqsqzaWPOr+IvndGO
zyUfvLCKL+yxv+nfUoVPWGPzehUf9nt9kXZ8W30ifSN9JnN1/TqxkWtpo9fR
X+bO3PPeXx9BLrlqGd/B+Ij++PZN7YH+qrpRfaZeM567AvKdOqmfWaXKXDln
1pPs0Ilu9P30Nyfjeq+1c03jLfJzbYU1PNby6JPrm8/a8KO1OqkdUGfqe1sD
ZC2Q/Nj8qPVB5kq1D9oJ64/UXdYkWZt0Bc+3vPNRpn5nzDq1D7M187dSlfzn
nkXy8ctXGb9jkfqM1bXRreQTrL9bo0q9ifG4ncDH9ONrPNjs5yOb/Xpns5/X
rFLPdhLHdka2Gngz8GFF8q3H0p6jP9L9UUUnqZseb/b7clVyEcbnzH+vDF4d
vFeReoKzuMfC4Bl5vy3AK1aJdRrfMh+tzlH3qPN6yFaomvkqkg9eq4puPRm8
Sz82U9tpTMJ4lTbLuR7SrH9jAMYCpmz4puvJ3L97wL1Q16mFkFNZj7ZFJ7Vu
6ihr7OSrnjtvJ7Ukcgq5hTGGY5r9bCxghqZ+YZo6tYHWxMgHjdMYrzHGZ/3Y
ep3UlsnBrO+yZsbamQmb/TZdndo9OZjxT2NCxoaObKUexhiEsYgJmv0kv7PW
xPqEF81x1ImdGjM1dur+c+xvZeKdxl2Mv1jDYH5Hzih3nL3Zj8Y8jX263813
GtMxtmPNl/Hz7arUq2lrrQ9QR6mrrMkz3qkPoC8gZ5VfGqMzVuf+Nh+nH6Q/
pE813ByV/nM7OVbjhe5x97o5Qusz9H+tJbBm6Zdu5sfaIzmv9Yjyz2naqem0
dmrVKvWn+pvWhxylvW/s0Z/Go8BPgO8G/9UNx5Pr+U7Wxskp5ZZyQGsXrAk0
N2BNhLUR+qzWihmT0JfdqEo9nTEL9Y/6yNiFNW1L1Klf9d19R9/1vW50tzUy
5luHcv7c4HWK1HNYI6PvZ87W3O3hjf3VvuqbyXHlunJgayfk1HJrc6jmUuXQ
cmk5+IvmbqrUv6xdpD7E+IexFjnbz93we/mNOV1zu9YUGUs15nYN/b07qdXR
J3uhDOeUe8phv+rGZmg75KRfd8Np72z4wZfdcFD5gjEl41HW17q21Kn/6NZu
9rM+nvZMji3XNsbzT61cJ7U55gCthTUf7LfzG2oHd65S62cO21y2nFRuKme3
Ntca2afL8Avr1RatUq+0VpH6sUWq1BetWaT+bj/OmUxdxjmrgdu95Fs+LlLf
MXuVeqt5i9QLtHrJz35UpN5jlir1q0OK1CsMqXK9+YvUK+zI9cdw/sFLg+ev
Ur+3YpF61/mq5GL0160Pm7tKfc+SRfIjc1WpfxtWpF5jzir1g0OL1D/MUSUX
bjzE+o55qnCZpYvkQ2aukvs2/mM9y2xV6ovmLlIvMWuV+uo5i9SfLFClfnCl
IvXWy4KXAG9dpJ5qmSr1YlsVqf8aVqVecMMi9YiLV8k9GZ+y3m/hKrkn4zPW
6y1VJRdmTsx6L2vXjM3dwrEH/EZV6s+2LFL/tUSV+qCNitQzLlilfm7lIvVR
C4FnBa9SpB5ODi33kwOaWz+mG/lEzO8G7tcq9mjjIvV3cvh3Gv5h7cB+VXSH
NlJbaXzP3I81uEPqxGSNzRrTtXbIetxTGvuhb+Z+tvbNGJrxHG2uXPrwMrZ4
oJd85QdF6ne02dpuc7bmbs1xvlAkhmjuU5vrtzmijC3Wpmvbzbk92I1Ocy8e
VEbXGW8wX7JumXj5Sp3oMnWUOuv5KrEGa+gfrLLmVy3yjdwLY/ai2+dr8hET
dxILksNZW/tslViGHFQuqr9q7bKcUy4qB5ALmLMz//hblVyE/EjfUs4id5Ez
WGs6KcfeaKWW1v8DqLPVNQeW0eVyErmJnOb+bvxnc1VybLn2+1VyD8ZojPds
0/Bx+bq5eG2CtsGYpPnV+evk+s3pGa/Vvhur+bPxh7f2mVuJuR1fJccwvLmf
voc64eNmfVkLpo6TO+5SRvfN5Hptp4bZ+JYxBmO71iwae3DPu/fd89a+y8HU
nQeUWW9yHrmPHM/auLpZj8eX4V7WtL1XJCdurZvxKnMXxujM28iR5Epyuoe6
zZ4vEvM19iunk9tpM62tk6PJ1eSY1oKO2cn/GYzfmb+Uo8nVzEmav5ajaUtP
KMPd1FnqLmOO5qbVGeoOdZz/3ZBzW7tujEwurr0xFrlTmdpW16O5NHOwxr/k
iDsX4YByx/WrcD25vLEK69GHNevPXL86RF1i/tr8tvEEY3vmAPUn3fObFNnz
6gLXr7FK94jxOHWMukadZO2p8cD1m/WsL6WOU9epk6x9HbeXen+5vLEfbbi2
XJtrraY2V9urzbFWU52l7lJHWputTlQ3GsM3/65N0jZpk6x1VoeqS9Wh1nrr
b8kFN+Oeb1XJ0VlDb4zTWKc6TF2mjrS2WB2trlZHWws7uOELxuSMrxm/XbfZ
z8Z61cnqZmPo1jaoU9Wt2gBrUbUh2hJtkrn2KTvJpeoDG1cxfnVocz19PXWw
ulgdvW9jj+XV6sezkW9YhSv5Dr6LPo//XdAn0xcyx2iu0f84GN/SBmoLtYHW
Dmiztd3aFGvpp2LMUe3k+MzvaiO1ldpIax21wdpibbi1hNpIbaU5BPNH21RZ
e8awjWVr47X12khrBbWR2kptpLWG+zfrX46pftJmajvlANZy/sMBithcaxm1
0dpqbbS1i86hc+ka0r+3hvDyhs9ZG6qPp6+nj2Qt9ti9xKMHN/UDrmnX9rVl
YiejN/ZDH/Alv18v9UHGLIxdWBN4fGNfXujG51y1k/p7fVFjssZm5bTPdpOz
kLPLsa0d1L/VtzdnZn28NlVf7bwytnaMxh6pn+Vv5gRvb/iftXTaVH3H08rY
WmMk1p49UCZ2YkzFWrD7yjyv+SVzt9qMincZ1Ess6f7mfUdr9Pmmjb3UxzHv
bsxB38cci7kWa9Se68YGmjs2Bq9tNL4zbSsxH2M//rfCWLj/2fD/ANZwWstp
zaG1uOZkzc3q71qLY07Q3KA5W2v1zKGaSzVnaO2SNcvGDo8sU8ssR5Qryimt
FbYm+MMiHNJaYXOK5hb1z62lPYB2Tys+i/bcGlJrSeUM1iIv0PAVY5DWMu/b
8At9Bn0H/wNgvGKfTv4bYMxi9U5yjMYy5BxyD2usrCU+qEq8Uh9ffmH+Rp9R
HfhKlRyl8YORDT8y56z//0TDr8xxmus0p2wtlvXz/vdBndXtJcdvrt8alBHd
PLPPflmZ/9aY0za3bQ7dWl1z6ObSzYFby3tgs358BvmT+X9rBeRXY/SSkzY3
bY7cWmJjsP7XY8Uy8bl/Vfm/3cgm36L+Mj6tzlB3mJM1Vm/MXn/LnK65XXPC
1rIuoy5rJyZ4Z5l4kbUJ1uT4P5e56/DX4c33tgbWWl1zxNbGmrM+p/FP9NfM
aejLbVMm16FPsFARn0FfQR/L3MVuje9lTtrctPkRa2/1z4w/mJP1/xT6XMbT
dy3ji+mTmTvZvYyvZjxb/mgOXJ/PeKO1StbAnCZ/KrNen2586hFl9qPxWPfc
BlVyadbYWGsjP9i18c+s1VR3Wyv5l/uxTM7d3Lv+nLW72hxtzw5l8iFjdxIb
lU9Z+zlKL2vRPeHesEbJWiVrmEZ2U8NkLZM5hofB/wcLEZtX
             "]], Polygon3DBox[CompressedData["
1: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
             "]], 
            Polygon3DBox[{{3120, 2158, 1647, 1648, 2159, 3121}, {2910, 1873, 
             2178, 3357, 2767, 2768}, {2909, 1872, 2054, 3343, 2765, 2766}}]},
           Annotation[#, "Charting`Private`Tag$652213#2"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rkvZmEUB+CXD2M3ERFbrB8RCQ2JhlJFpRydjmJUklGTUCsoRUFDxFqK
wu6zM/Zl/AuMSiSeG8n93eec3OQ9501uVe9A9++kEMKwrCiietDrlSPpIfzk
OCs4zSYusp0b7OIxe/jEZ+lXv3OInxxjakYIk8zjLEu5xgZu8YRV5ibkQr/E
ZtlOCeFSv8O/3OUV93jNfd7wgLdM8I6HvOcRH6Id+RjN4RNP+cwz/uNcagg1
5h3Ki36ZLdJhr3N9KzdZz1UWc4Y5nGCMo/xw3z9846v0qe/5K9qJnVxnGxfY
yCmWR3d2xn+umpvHWdZKgx1zo9nMYR2zGWcWq5nJSjoilNORoYw/WMI0FtE1
QyE9ocArxnwmc97HeNL3f/AFs05Dew==
         "]]}, 
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rsvnWEcB/AHCenBcUrRpUMXjRykEU4aRERoOqu/QAdbhaSjhIZVib0V
e5XRNdG1NjSN69GqS+tal0Ek+nlj+Obz+y3v93mevE87utreZoQQBmU2K4QH
mSH08oadsRAe8x2fcYApjrKV42znFN9wkV+lx/yD/UxzmAf8xH+cYEZuCPNM
cImTLNe7LOv2adbLYXYIG/Y/3ORfbvGI2zxmmifc4Sl/8ozn8ivq5C4v+JuX
3OMV93nNAx7mhJDUuRL12mfYIElnW7M/4TfGOcc7d/kcdfEj9/iBW+zjd65K
t3mBHfzC1xxjC0dYy/cs45Bv33JObyknWCmvnLHE/pLFbOEjNrOITSxkIx+y
nnWSML9gAVOMs4b5rGYenzOXVYxFb+0dKrLu/4f/xiZNbw==
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{2180, 2480, 1234, 2179, 3358, 2374, 2181, 3359, 2375, 2182,
          3360, 2376, 2183, 3361, 2377, 2184, 3362, 2378, 2185, 3363, 2379, 
         2186, 3142, 3440, 2187, 3364, 2380, 2188, 3365, 2381, 2189, 3366, 
         2382, 2190, 3367, 2383, 2191, 3368, 2384, 2192, 1416, 2385, 2481}], 
        Line3DBox[{2194, 3143, 3441, 2193, 1248, 2195, 3369, 2386, 2196, 3370,
          2387, 2197, 3371, 2388, 2198, 3372, 2389, 2199, 3373, 2390, 2200, 
         3144, 3442, 2201, 3145, 3443, 2202, 3374, 2391, 2203, 3375, 2392, 
         2204, 3376, 2393, 2205, 3377, 2394, 2206, 3378, 2395, 2207}], 
        Line3DBox[{2209, 3146, 3444, 2208, 3147, 3445, 2210, 1263, 2211, 3379,
          2396, 2212, 3380, 2397, 2213, 3381, 2398, 2214, 3382, 2399, 2215, 
         3148, 3446, 2216, 3149, 3447, 2217, 3150, 3448, 2218, 3383, 2400, 
         2219, 3384, 2401, 2220, 3385, 2402, 2221, 3386, 2403, 2222}], 
        Line3DBox[{2224, 3151, 3449, 2223, 3152, 3450, 2225, 3153, 3451, 2226,
          1278, 2227, 3387, 2404, 2228, 3388, 2405, 2229, 3389, 2406, 2230, 
         3154, 3452, 2231, 3155, 3453, 2232, 3156, 3454, 2233, 3157, 3455, 
         2234, 3390, 2407, 2235, 3391, 2408, 2236, 3392, 2409, 2237}], 
        Line3DBox[{2239, 3158, 3456, 2238, 3159, 3457, 2240, 3160, 3458, 2241,
          3161, 3459, 2242, 1293, 2243, 3393, 2410, 2244, 3522, 2482, 2483, 
         2245, 2637, 2638, 3551, 2246, 2648, 2649, 3554, 2247, 3162, 3460, 
         2248, 3163, 3461, 2249, 3164, 3462, 2250, 3394, 2411, 2251, 3395, 
         2412, 2252}], 
        Line3DBox[{2254, 3165, 3463, 2253, 3166, 3464, 2255, 3167, 3465, 2256,
          3168, 3466, 2257, 3226, 3467, 2485, 2258, 1423, 2487, 2259, 3520, 
         2475, 2484, 2570, 2569, 2260, 2640, 2641, 2639, 2647, 2646, 3536, 
         2261, 2651, 2652, 2650, 1477, 2262, 2653, 3468, 3240, 2263, 3169, 
         3469, 2264, 3170, 3470, 2265, 3171, 3471, 2266, 3396, 2413, 2267}], 
        Line3DBox[{2271, 3397, 2414, 2269, 3398, 2415, 2273, 3399, 2416, 2275,
          3228, 3400, 2417, 2490, 2574, 3540, 3235, 2491, 2528, 2418, 2625, 
         3234, 3539, 2573, 2562, 2635, 2419, 2559, 3233, 3538, 2632, 2572, 
         2515, 2549, 2612, 2420, 2626, 2575, 2633, 2576, 2516, 2529, 2613, 
         3546, 2421, 2627, 2579, 2606, 2580, 2517, 2558, 3529, 2422, 2557, 
         2550, 2587, 3543, 2423, 2283, 2660, 2661, 3555, 2424, 2285, 3401, 
         2425, 2287, 3402, 2426, 2289, 3403, 2427, 2291}], 
        Line3DBox[{2290, 3480, 3177, 2288, 3479, 3176, 2286, 3478, 3175, 2284,
          3241, 3477, 2659, 2282, 3231, 3476, 2654, 2656, 2655, 2281, 3232, 
         3537, 2566, 2563, 2565, 2564, 2280, 1478, 2610, 2546, 2514, 2578, 
         2605, 2577, 2279, 2544, 2609, 2545, 2513, 2571, 2604, 1502, 2278, 
         2560, 2608, 2561, 2488, 2535, 2624, 3549, 3230, 2277, 2547, 2548, 
         2486, 3523, 3224, 2276, 2489, 3475, 3227, 2274, 3474, 3174, 2272, 
         3473, 3173, 2268, 3472, 3172, 2270}], 
        Line3DBox[{2293, 3404, 2428, 2292, 3405, 2429, 2294, 3406, 2430, 2295,
          3229, 3407, 2431, 2494, 2582, 3541, 3236, 2495, 2581, 2432, 2518, 
         3237, 3545, 2607, 2519, 2551, 2552, 2433, 2496, 3524, 2492, 2614, 
         2434, 2611, 2493, 2497, 2585, 3178, 3542, 2586, 2539, 2540, 2525, 
         2530, 3530, 2435, 2543, 2541, 2542, 2526, 3238, 3531, 2436, 2620, 
         2619, 3408, 2437, 2296, 3409, 2438, 2297, 3410, 2439, 2298, 3411, 
         2440, 2299}], 
        Line3DBox[{2301, 3179, 3481, 2300, 3412, 2441, 2302, 3413, 2442, 2303,
          3239, 3414, 2443, 2642, 3225, 3415, 2622, 2634, 2444, 2527, 3532, 
         2583, 2584, 2568, 2588, 2445, 2589, 3544, 2536, 2628, 2537, 2499, 
         2553, 2615, 2446, 2498, 2590, 2630, 2591, 2500, 2531, 2616, 3180, 
         3533, 2629, 2592, 2596, 2593, 2501, 2532, 2554, 3181, 3534, 2631, 
         2594, 2595, 2567, 3550, 2636, 2447, 2520, 2502, 3416, 2448, 2304, 
         3417, 2449, 2305, 3418, 2450, 2306, 3419, 2451, 2307}], 
        Line3DBox[{2309, 3182, 3482, 2308, 3183, 3483, 2310, 3420, 2452, 2311,
          3421, 2453, 2312, 3547, 2621, 2454, 2623, 3548, 2476, 2644, 2657, 
         2658, 2503, 3525, 2538, 2597, 2477, 2521, 2555, 2599, 2556, 2504, 
         2598, 2600, 2478, 2522, 2533, 2601, 2534, 3535, 2506, 2602, 2603, 
         2479, 2524, 3184, 3521, 2523, 2508, 3185, 3527, 2313, 3422, 2455, 
         2314, 3423, 2456, 2315, 3424, 2457, 2316, 3425, 2458, 2317}], 
        Line3DBox[{2319, 3186, 3484, 2318, 3187, 3485, 2320, 3188, 3486, 2321,
          3426, 2459, 2322, 3427, 2460, 2323, 3552, 2643, 2461, 2645, 3553, 
         2505, 2462, 2617, 2507, 3189, 3526, 2618, 2509, 3190, 3528, 2324, 
         3191, 3487, 2325, 3192, 3488, 2326, 3428, 2463, 2327, 3429, 2464, 
         2328, 3430, 2465, 2329}], 
        Line3DBox[{2331, 3193, 3489, 2330, 3194, 3490, 2332, 3195, 3491, 2333,
          3196, 3492, 2334, 3431, 2466, 2335, 3432, 2467, 2336, 3433, 2468, 
         2337, 3197, 3493, 2338, 3198, 3494, 2339, 3199, 3495, 2340, 3200, 
         3496, 2341, 3201, 3497, 2342, 3434, 2469, 2343, 3435, 2470, 2344}], 
        Line3DBox[{2346, 3202, 3498, 2345, 3203, 3499, 2347, 3204, 3500, 2348,
          3205, 3501, 2349, 3206, 3502, 2350, 3436, 2471, 2351, 3437, 2472, 
         2352, 3207, 3503, 2353, 3208, 3504, 2354, 3209, 3505, 2355, 3210, 
         3506, 2356, 3211, 3507, 2357, 3212, 3508, 2358, 3438, 2473, 2359}], 
        Line3DBox[{2373, 2512, 1449, 2372, 3519, 3223, 2371, 3518, 3222, 2370,
          3517, 3221, 2369, 3516, 3220, 2368, 3515, 3219, 2367, 3514, 3218, 
         2366, 2474, 3439, 2365, 3513, 3217, 2364, 3512, 3216, 2363, 3511, 
         3215, 2362, 3510, 3214, 2361, 3509, 3213, 2360, 1448, 2510, 2511}], 
        Line3DBox[{2663, 2957, 3242, 3556, 2662, 3649, 2860, 2664, 3650, 2861,
          2665, 3651, 2862, 2666, 3652, 2863, 2667, 3653, 2864, 2668, 3654, 
         2865, 2669, 3655, 3243, 3557, 2670, 3656, 2866, 2671, 3657, 2867, 
         2672, 3658, 2868, 2673, 3659, 2869, 2674, 3660, 2870, 2675, 3334, 
         3732, 2871, 2958}], 
        Line3DBox[{2677, 3244, 3558, 2676, 3245, 3559, 2678, 3661, 2872, 2679,
          3662, 2873, 2680, 3663, 2874, 2681, 3664, 2875, 2682, 3665, 2876, 
         2683, 3666, 3246, 3560, 2684, 3247, 3561, 2685, 3667, 2877, 2686, 
         3668, 2878, 2687, 3669, 2879, 2688, 3670, 2880, 2689, 3671, 2881, 
         2690}], Line3DBox[{2692, 3248, 3562, 2691, 3249, 3563, 2693, 3250, 
         3564, 2694, 3672, 2882, 2695, 3673, 2883, 2696, 3674, 2884, 2697, 
         3675, 2885, 2698, 3676, 3251, 3565, 2699, 3252, 3566, 2700, 3253, 
         3567, 2701, 3677, 2886, 2702, 3678, 2887, 2703, 3679, 2888, 2704, 
         3680, 2889, 2705}], 
        Line3DBox[{2707, 3254, 3568, 2706, 3255, 3569, 2708, 3256, 3570, 2709,
          3257, 3571, 2710, 3681, 2890, 2711, 3682, 2891, 2712, 3683, 2892, 
         2713, 3684, 3258, 3572, 2714, 3259, 3573, 2715, 3260, 3574, 2716, 
         3261, 3575, 2717, 3685, 2893, 2718, 3686, 2894, 2719, 3687, 2895, 
         2720}], Line3DBox[{2722, 3262, 3576, 2721, 3263, 3577, 2723, 3264, 
         3578, 2724, 3265, 3579, 2725, 3266, 3580, 2726, 3688, 2896, 2727, 
         3689, 2959, 2960, 2728, 3690, 3120, 3121, 3581, 2729, 3129, 3130, 
         3582, 2730, 3267, 3583, 2731, 3268, 3584, 2732, 3269, 3585, 2733, 
         3691, 2897, 2734, 3692, 2898, 2735}], 
        Line3DBox[{2737, 3270, 3586, 2736, 3271, 3587, 2738, 3272, 3588, 2739,
          3273, 3589, 2740, 3335, 3733, 2962, 2741, 3336, 3734, 2964, 2742, 
         3735, 2948, 2961, 894, 2743, 3736, 1021, 3122, 1029, 3775, 2744, 
         1032, 3131, 3030, 3590, 2745, 3132, 3776, 3356, 2746, 3274, 3591, 
         2747, 3275, 3592, 2748, 3276, 3593, 2749, 3693, 2899, 2750}], 
        Line3DBox[{2754, 3694, 2900, 2752, 3695, 2901, 2756, 3696, 2902, 2758,
          2967, 3738, 2903, 2968, 3057, 3739, 3348, 2969, 3012, 2904, 3106, 
         3056, 3754, 3347, 3048, 3116, 2905, 3045, 3346, 3769, 3112, 3055, 
         2996, 3035, 3096, 2906, 3107, 3349, 3770, 3113, 3058, 2997, 3013, 
         3097, 3749, 2907, 3108, 3061, 3090, 3062, 2998, 3044, 3753, 2908, 
         3043, 3036, 3069, 3752, 2909, 2766, 3140, 3141, 3779, 2910, 2768, 
         3697, 2911, 2770, 3698, 2912, 2772, 3699, 2913, 2774}], 
        Line3DBox[{2773, 3599, 3282, 2771, 3598, 3281, 2769, 3597, 3280, 2767,
          3357, 3778, 3139, 2765, 3343, 3777, 3133, 3135, 3134, 2764, 3344, 
         3755, 3052, 3049, 3051, 3050, 2763, 3751, 3031, 3094, 3032, 2995, 
         3060, 3089, 3059, 3740, 2762, 3028, 3093, 3029, 2994, 3054, 3088, 
         3756, 3345, 2761, 3046, 3092, 3047, 2965, 3341, 3766, 3105, 3021, 
         2760, 3033, 3034, 2963, 3731, 3332, 2759, 3337, 3737, 2966, 2757, 
         3596, 3279, 2755, 3595, 3278, 2751, 3594, 3277, 2753}], 
        Line3DBox[{2776, 3283, 3600, 2775, 3700, 2914, 2777, 3701, 2915, 2778,
          2971, 3741, 2916, 2972, 3064, 3065, 3767, 2973, 3063, 2917, 2999, 
         3091, 3747, 3350, 3000, 3037, 3038, 2918, 2974, 3338, 3761, 3098, 
         2919, 3095, 3702, 2970, 2975, 3067, 3284, 3758, 3068, 3023, 3024, 
         3009, 3014, 3750, 2920, 3027, 3025, 3026, 3010, 3352, 3763, 2921, 
         3101, 3100, 3762, 2922, 2779, 3703, 2923, 2780, 3704, 2924, 2781, 
         3705, 2925, 2782}], Line3DBox[CompressedData["
1:eJwVzztOQmEUReGD+Io8Eh2AxEJNMEiBw6ByCA4AFDrQ0scoUNCWYGNhopWF
QmGnLYhK5wQs0I9iZ62z9y3+u3FQ3a8kIqIso5WIt3TEajZiyN/5Gv/gDayk
Isa8pH90V917fCETcede53nZkSfbr6RsXdsPn0rY/vBKevpX3NSd4hwOcQtH
2JZb3yTc23LmXsRnnMcXbNk7mJy9Q875MvZxIJf2a1zS5eSCF/FBX8Bdudfd
zN6kO8RP/9jkR/yLH/Ma/+YnvM4n/B98liuK
         "]], 
        Line3DBox[{2792, 3287, 3603, 2791, 3288, 3604, 2793, 3289, 3605, 2794,
          3710, 2932, 2795, 3353, 3764, 2933, 3104, 3711, 2953, 3127, 3136, 
         3137, 2981, 3342, 3712, 3081, 2954, 3002, 3041, 3083, 3042, 2982, 
         3768, 3082, 3084, 2955, 3004, 3019, 3085, 3020, 3745, 2985, 3086, 
         3087, 2956, 3007, 3290, 3748, 3006, 2988, 3291, 3606, 2796, 3713, 
         2934, 2797, 3714, 2935, 2798, 3715, 2936, 2799, 3716, 2937, 2800}], 
        Line3DBox[{2802, 3292, 3607, 2801, 3293, 3608, 2803, 3294, 3609, 2804,
          3295, 3610, 2805, 3717, 2938, 2806, 3718, 3125, 3128, 3126, 3138, 
         2807, 3355, 3774, 2983, 3003, 2984, 3099, 2808, 3354, 3771, 2986, 
         3005, 2987, 3611, 3351, 2809, 2989, 3008, 2990, 3612, 2810, 3296, 
         3613, 2811, 3297, 3614, 2812, 3719, 2939, 2813, 3720, 2940, 2814, 
         3721, 2941, 2815}], 
        Line3DBox[{2817, 3298, 3615, 2816, 3299, 3616, 2818, 3300, 3617, 2819,
          3301, 3618, 2820, 3302, 3619, 2821, 3722, 2942, 2822, 3723, 2943, 
         2823, 3724, 3303, 3620, 2824, 3304, 3621, 2825, 3305, 3622, 2826, 
         3306, 3623, 2827, 3307, 3624, 2828, 3725, 2944, 2829, 3726, 2945, 
         2830}], Line3DBox[{2832, 3308, 3625, 2831, 3309, 3626, 2833, 3310, 
         3627, 2834, 3311, 3628, 2835, 3312, 3629, 2836, 3313, 3630, 2837, 
         3727, 2946, 2838, 3728, 3314, 3631, 2839, 3315, 3632, 2840, 3316, 
         3633, 2841, 3317, 3634, 2842, 3318, 3635, 2843, 3319, 3636, 2844, 
         3729, 2947, 2845}], 
        Line3DBox[{2859, 2993, 3746, 3340, 2858, 3648, 3331, 2857, 3647, 3330,
          2856, 3646, 3329, 2855, 3645, 3328, 2854, 3644, 3327, 2853, 3643, 
         3326, 3730, 2852, 3642, 3325, 2851, 3641, 3324, 2850, 3640, 3323, 
         2849, 3639, 3322, 2848, 3638, 3321, 2847, 3637, 3320, 2846, 2022, 
         2991, 2992}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1042, 1235, 3358, 1043, 1248, 1069, 3445, 1262, 1083, 3450,
          1276, 1097, 3457, 1290, 1111, 3464, 1303, 1124, 3473, 1314, 3398, 
         1135, 1324, 3405, 1146, 1333, 3412, 1157, 3483, 1342, 1168, 3485, 
         1353, 1180, 3490, 1365, 1194, 3499, 1379, 1208, 3509, 1393, 1222}], 
        Line3DBox[{1044, 1236, 3359, 1045, 1249, 3369, 1070, 1263, 1084, 3451,
          1277, 1098, 3458, 1291, 1112, 3465, 1304, 1125, 3474, 1315, 3399, 
         1136, 1325, 3406, 1147, 1334, 3413, 1158, 1343, 3420, 1169, 3486, 
         1354, 1181, 3491, 1366, 1195, 3500, 1380, 1209, 3510, 1394, 1223}], 
        Line3DBox[{1046, 1237, 3360, 1047, 1250, 3370, 1071, 1264, 3379, 1085,
          1278, 1099, 3459, 1292, 1113, 3466, 1305, 1126, 3475, 1425, 1426, 
         3400, 1137, 1432, 1433, 3407, 1148, 1566, 1567, 3414, 1159, 1344, 
         3421, 1170, 1355, 3426, 1182, 3492, 1367, 1196, 3501, 1381, 1210, 
         3511, 1395, 1224}], 
        Line3DBox[{1048, 1238, 3361, 1049, 1251, 3371, 1072, 1265, 3380, 1086,
          1279, 3387, 1100, 1293, 1114, 3467, 1420, 1421, 1422, 3523, 1406, 
         1427, 1407, 1554, 1508, 3540, 1429, 1509, 1510, 1408, 1434, 1409, 
         1556, 1513, 3541, 1435, 1569, 1410, 1568, 1411, 3415, 1545, 1543, 
         3547, 1544, 1171, 1356, 3427, 1183, 1368, 3431, 1197, 3502, 1382, 
         1211, 3512, 1396, 1225}], 
        Line3DBox[{1050, 1239, 3362, 1051, 1252, 3372, 1073, 1266, 3381, 1087,
          1280, 3388, 1101, 1294, 3393, 1115, 1423, 1549, 1551, 1550, 1552, 
         3549, 1467, 1480, 1468, 1428, 1507, 1553, 1506, 3539, 1498, 1511, 
         1512, 1453, 1525, 1524, 3545, 1454, 1526, 1527, 1459, 1515, 3532, 
         1514, 1501, 1547, 1548, 1546, 3548, 1413, 1572, 1570, 3552, 1571, 
         1184, 1369, 3432, 1198, 1383, 3436, 1212, 3513, 1397, 1226}], 
        Line3DBox[{1052, 1240, 3363, 1053, 1253, 3373, 1074, 1267, 3382, 1088,
          1281, 3389, 1102, 1417, 3522, 1418, 1419, 1405, 3520, 1424, 1466, 
         1465, 1521, 1502, 1503, 1497, 1505, 1504, 3538, 1560, 1522, 1523, 
         1436, 3524, 1430, 1530, 1531, 1533, 1532, 1439, 1470, 1518, 3544, 
         1469, 1557, 1519, 1520, 1443, 1473, 3525, 1472, 1457, 1574, 1575, 
         1573, 3553, 1444, 1185, 1370, 3433, 1199, 1384, 3437, 1213, 1398, 
         3439, 1227}], 
        Line3DBox[{8, 2186, 23, 2200, 38, 2215, 53, 2230, 68, 2245, 83, 2260, 
         252, 98, 2279, 259, 474, 2626, 113, 440, 2611, 128, 274, 2498, 143, 
         282, 2504, 486, 158, 453, 2617, 173, 2337, 188, 2352, 203, 2366, 
         218}], Line3DBox[{1054, 3440, 1241, 1055, 3442, 1254, 1075, 3446, 
         1268, 1089, 3452, 1282, 1103, 1565, 3551, 1295, 1116, 1576, 3536, 
         1577, 1493, 1494, 1306, 1127, 1478, 1528, 1479, 1431, 1460, 1555, 
         1316, 3546, 1138, 1481, 1484, 1482, 1437, 1516, 1517, 3542, 1326, 
         1149, 1487, 1534, 1488, 1440, 1462, 1558, 3533, 1335, 1160, 1489, 
         1490, 1445, 1464, 3535, 1345, 1172, 1537, 1538, 1536, 3526, 1357, 
         1186, 3493, 1371, 1200, 3503, 1385, 1214, 3514, 1399, 1228}], 
        Line3DBox[{1056, 1242, 3364, 1057, 3443, 1255, 1076, 3447, 1269, 1090,
          3453, 1283, 1104, 1578, 3554, 1296, 1117, 1477, 1307, 1128, 3537, 
         1499, 1500, 1495, 1496, 1317, 3529, 1139, 1485, 1529, 1486, 1455, 
         1461, 1476, 1327, 3530, 1150, 1491, 1535, 1492, 1441, 1463, 1559, 
         3534, 1336, 1161, 1474, 1475, 1458, 3521, 1346, 1173, 1447, 3528, 
         1358, 1187, 3494, 1372, 1201, 3504, 1386, 1215, 3515, 1400, 1229}], 
        Line3DBox[{1058, 1243, 3365, 1059, 1256, 3374, 1077, 3448, 1270, 1091,
          3454, 1284, 1105, 3460, 1297, 1118, 3468, 1579, 1308, 1129, 3476, 
         1483, 1318, 3543, 1140, 1561, 1438, 1540, 1541, 1542, 3531, 1151, 
         1471, 1412, 1456, 1562, 1564, 3550, 1563, 1162, 1446, 3527, 1347, 
         1174, 3487, 1359, 1188, 3495, 1373, 1202, 3505, 1387, 1216, 3516, 
         1401, 1230}], 
        Line3DBox[{1060, 1244, 3366, 1061, 1257, 3375, 1078, 1271, 3383, 1092,
          3455, 1285, 1106, 3461, 1298, 1119, 3469, 1309, 1130, 3477, 1580, 
         1319, 3555, 1141, 1539, 1328, 3408, 1152, 1442, 1337, 3416, 1163, 
         1348, 3422, 1175, 3488, 1360, 1189, 3496, 1374, 1203, 3506, 1388, 
         1217, 3517, 1402, 1231}], 
        Line3DBox[{1062, 1245, 3367, 1063, 1258, 3376, 1079, 1272, 3384, 1093,
          1286, 3390, 1107, 3462, 1299, 1120, 3470, 1310, 1131, 3478, 1320, 
         3401, 1142, 1329, 3409, 1153, 1338, 3417, 1164, 1349, 3423, 1176, 
         1361, 3428, 1190, 3497, 1375, 1204, 3507, 1389, 1218, 3518, 1403, 
         1232}], Line3DBox[{1064, 1246, 3368, 1065, 1259, 3377, 1080, 1273, 
         3385, 1094, 1287, 3391, 1108, 1300, 3394, 1121, 3471, 1311, 1132, 
         3479, 1321, 3402, 1143, 1330, 3410, 1154, 1339, 3418, 1165, 1350, 
         3424, 1177, 1362, 3429, 1191, 1376, 3434, 1205, 3508, 1390, 1219, 
         3519, 1404, 1233}], 
        Line3DBox[{1066, 1415, 1416, 1067, 1260, 3378, 1081, 1274, 3386, 1095,
          1288, 3392, 1109, 1301, 3395, 1122, 1312, 3396, 1133, 3480, 1322, 
         3403, 1144, 1331, 3411, 1155, 1340, 3419, 1166, 1351, 3425, 1178, 
         1363, 3430, 1192, 1377, 3435, 1206, 1391, 3438, 1220, 1449, 1450, 
         1451}], Line3DBox[{1221, 1392, 1448, 1207, 1378, 3498, 1193, 1364, 
         3489, 1179, 1352, 3484, 1167, 1341, 3482, 1156, 1332, 3481, 1145, 
         3404, 1323, 1134, 3397, 1313, 3472, 1123, 1302, 3463, 1110, 1289, 
         3456, 1096, 1275, 3449, 1082, 1261, 3444, 1068, 1247, 3441, 1041, 
         1234, 1414, 1452}], 
        Line3DBox[{1582, 1784, 3649, 1583, 3559, 1798, 1611, 3563, 1813, 1626,
          3569, 1828, 1641, 3577, 1843, 1656, 3587, 1856, 1669, 3595, 1867, 
         3695, 1680, 1878, 3700, 1691, 3602, 1888, 1702, 3604, 1898, 1713, 
         3608, 1909, 1725, 3616, 1921, 1740, 3626, 1936, 1755, 3637, 1951, 
         1770}], Line3DBox[{1584, 1785, 3650, 1585, 1799, 3661, 1612, 3564, 
         1814, 1627, 3570, 1829, 1642, 3578, 1844, 1657, 3588, 1857, 1670, 
         3596, 1868, 3696, 1681, 1879, 3701, 1692, 1889, 3706, 1703, 3605, 
         1899, 1714, 3609, 1910, 1726, 3617, 1922, 1741, 3627, 1937, 1756, 
         3638, 1952, 1771}], 
        Line3DBox[{1586, 1786, 3651, 1587, 1800, 3662, 1613, 1815, 3672, 1628,
          3571, 1830, 1643, 3579, 1845, 1658, 3589, 1858, 1671, 3737, 1990, 
         1991, 1869, 3738, 1682, 1998, 1999, 1880, 3741, 1693, 2164, 2165, 
         1890, 3773, 1704, 1900, 3710, 1715, 3610, 1911, 1727, 3618, 1923, 
         1742, 3628, 1938, 1757, 3639, 1953, 1772}], 
        Line3DBox[{1588, 1787, 3652, 1589, 1801, 3663, 1614, 1816, 3673, 1629,
          1831, 3681, 1644, 3580, 1846, 1659, 3733, 1982, 1983, 1984, 3731, 
         1965, 1992, 1966, 2137, 2081, 3739, 1993, 2082, 2083, 1969, 2000, 
         1970, 2140, 3767, 2089, 2003, 2167, 1971, 2166, 1972, 3765, 2132, 
         2130, 2131, 3764, 1716, 1912, 3717, 1728, 3619, 1924, 1743, 3629, 
         1939, 1758, 3640, 1954, 1773}], 
        Line3DBox[{1590, 1788, 3653, 1591, 1802, 3664, 1615, 1817, 3674, 1630,
          1832, 3682, 1645, 1847, 3688, 1660, 3734, 1985, 2135, 1986, 2136, 
         1988, 3766, 2040, 1967, 2080, 1968, 2154, 2079, 3754, 2069, 2088, 
         2001, 2109, 2002, 2110, 2108, 3747, 2027, 2111, 2112, 2005, 2032, 
         2006, 3757, 2090, 2072, 2134, 1974, 2133, 3711, 1975, 2170, 2168, 
         3718, 2169, 1729, 1925, 3722, 1744, 3630, 1940, 1759, 3641, 1955, 
         1774}], Line3DBox[{1592, 1789, 3654, 1593, 1803, 3665, 1616, 1818, 
         3675, 1631, 1833, 3683, 1646, 1979, 3689, 1980, 1981, 1964, 3735, 
         1987, 2039, 2038, 2104, 3756, 2075, 2076, 2068, 2078, 2077, 3769, 
         2146, 2106, 2107, 2004, 1995, 3761, 2116, 2117, 2119, 2118, 2010, 
         2042, 3759, 2093, 2041, 2141, 2098, 2099, 2015, 3712, 2045, 2044, 
         2030, 2172, 2173, 3774, 2171, 2017, 1730, 1926, 3723, 1745, 1941, 
         3727, 1760, 3642, 1956, 1775}], 
        Line3DBox[{1594, 1790, 3655, 1596, 1804, 3666, 1617, 1819, 3676, 1632,
          1834, 3684, 1647, 2158, 3690, 2160, 2161, 2162, 3736, 2163, 1989, 
         2074, 2073, 2105, 2086, 3740, 2087, 1994, 2085, 2138, 2084, 3770, 
         2149, 2147, 2148, 2113, 3702, 1997, 2008, 2096, 2097, 2011, 2095, 
         3760, 2094, 2143, 2100, 2101, 2016, 2103, 3768, 2145, 2102, 2152, 
         2150, 2151, 3771, 2122, 2019, 1731, 1927, 3724, 1746, 1942, 3728, 
         1761, 1957, 3730, 1776}], 
        Line3DBox[{1598, 1792, 3656, 1599, 3561, 1806, 1619, 3566, 1821, 1634,
          3573, 1836, 1649, 2176, 3582, 1849, 1662, 2049, 3590, 1860, 1673, 
         3755, 2070, 2071, 2066, 2067, 1871, 3753, 1684, 2056, 2115, 2057, 
         2028, 2034, 2048, 1882, 3750, 1695, 2062, 2121, 2063, 2013, 2036, 
         3743, 2144, 1892, 1706, 2046, 2047, 2031, 3748, 1902, 1718, 2021, 
         3612, 1914, 1733, 3621, 1929, 1748, 3632, 1944, 1763, 3644, 1959, 
         1778}], Line3DBox[{1600, 1793, 3657, 1601, 1807, 3667, 1620, 3567, 
         1822, 1635, 3574, 1837, 1650, 3583, 1850, 1663, 3776, 2177, 1861, 
         1674, 3777, 2054, 1872, 3752, 1685, 2153, 2009, 2127, 2128, 2129, 
         3763, 1696, 2043, 1973, 2029, 2155, 3772, 2157, 2156, 1707, 2020, 
         3606, 1903, 1719, 3613, 1915, 1734, 3622, 1930, 1749, 3633, 1945, 
         1764, 3645, 1960, 1779}], 
        Line3DBox[{1602, 1794, 3658, 1603, 1808, 3668, 1621, 1823, 3677, 1636,
          3575, 1838, 1651, 3584, 1851, 1664, 3591, 1862, 1675, 3778, 2178, 
         1873, 3779, 1686, 2126, 1883, 3762, 1697, 2014, 1893, 3744, 1708, 
         1904, 3713, 1720, 3614, 1916, 1735, 3623, 1931, 1750, 3634, 1946, 
         1765, 3646, 1961, 1780}], 
        Line3DBox[{1604, 1795, 3659, 1605, 1809, 3669, 1622, 1824, 3678, 1637,
          1839, 3685, 1652, 3585, 1852, 1665, 3592, 1863, 1676, 3597, 1874, 
         3697, 1687, 1884, 3703, 1698, 1894, 3707, 1709, 1905, 3714, 1721, 
         1917, 3719, 1736, 3624, 1932, 1751, 3635, 1947, 1766, 3647, 1962, 
         1781}], Line3DBox[{1606, 1796, 3660, 1607, 1810, 3670, 1623, 1825, 
         3679, 1638, 1840, 3686, 1653, 1853, 3691, 1666, 3593, 1864, 1677, 
         3598, 1875, 3698, 1688, 1885, 3704, 1699, 1895, 3708, 1710, 1906, 
         3715, 1722, 1918, 3720, 1737, 1933, 3725, 1752, 3636, 1948, 1767, 
         3648, 1963, 1782}], 
        Line3DBox[{1608, 1977, 1978, 3732, 1609, 1811, 3671, 1624, 1826, 3680,
          1639, 1841, 3687, 1654, 1854, 3692, 1667, 1865, 3693, 1678, 3599, 
         1876, 3699, 1689, 1886, 3705, 1700, 1896, 3709, 1711, 1907, 3716, 
         1723, 1919, 3721, 1738, 1934, 3726, 1753, 1949, 3729, 1768, 3746, 
         2023, 2024, 2025}], 
        Line3DBox[{1769, 1950, 2022, 1754, 1935, 3625, 1739, 1920, 3615, 1724,
          1908, 3607, 1712, 1897, 3603, 1701, 1887, 3601, 1690, 1877, 3600, 
         1679, 3694, 1866, 3594, 1668, 1855, 3586, 1655, 1842, 3576, 1640, 
         1827, 3568, 1625, 1812, 3562, 1610, 1797, 3558, 1581, 1783, 3556, 
         1976, 2026}], 
        Line3DBox[{1777, 1958, 3643, 1762, 1943, 3631, 1747, 1928, 3620, 1732,
          1913, 2123, 3611, 2125, 2124, 1717, 1901, 3745, 2037, 2018, 2061, 
         2060, 1705, 1891, 2142, 3742, 2035, 2012, 2059, 2120, 2058, 1694, 
         1881, 3758, 2092, 2091, 2007, 2053, 2055, 2052, 1683, 3749, 1870, 
         2139, 2033, 1996, 2051, 2114, 3751, 2050, 1672, 1859, 2065, 2064, 
         2175, 3775, 2174, 1661, 1848, 3581, 2159, 1648, 1835, 3572, 1633, 
         1820, 3565, 1618, 1805, 3560, 1597, 1791, 3557, 
         1595}]}, {}, {}, {}, {}, {}}},
     VertexNormals->CompressedData["
1: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
NaGfl0ZNfeX7QNulfK8I0QWvC9WWSL8KMZUN94ME/lRh9LtoecGr4CO8/GY3
0bP7YTeOxgUi33V/G/0ocSPHWXUl959e6NSOGGNJPxwd/CqXfimPkme5XjEo
uR4NuyPWr9hxdqK6TvULLGzDcE/zeuK+gjrEnG1gN5szjFytN0Lz0Tpo7grw
0xooRXkkvalGkwakGL/oLJ40Aj8+S5kUBvchQ96uIr/9nYjH4JzLyv1WkP9V
8lJ01zfEyKkU/fZIEnq/3unoDcq4/eNZOf1Ypx1d+KnoGPiyFQV13dXnTOiH
cOmgWvubfijEXk44T/IF8jqRf7aHUn6lyMd0lv+SkI1G7N8THb5o8VLabdsR
ih9et2MsXa4cSb0z0WO8k4KOamoWldKPg/Nm5wm+3Fgw3nZb/G1KITpwOipe
03Ac3g22/JQlZSKjw9U4tHYjtzm7Yy96BgB7L5hkFJcFIVPvsmaYRtHtCslz
hZGN0NS0J7DKqw8WL7qcWnDpQopNQenXFZug+/dl6ynPJvDb51xp0NmP1n/j
jvoR0wGLXtsat9kPI7egPcLPjtSiV66CSd5MjWB0jlXcL7YWNWmFzxxVLUCz
/Fqav96NgpvIvJDYjkEkNHT607Pr3uja9fZy3eJu+P7dLjvR5yfS7ltISNl4
D31xv/VepXLVj5HoIhn6kJosz3Ctdye0NjPnfb3WBsVnyLmRjh9BsC2ePXLp
OnxOKQq0oORlqh3xZKXaLHievHuPku4DeOXmRPyg5Mtq7lW3H+XGgQFiT9nu
44F2vq5Z7JgZh/siMjbpt6rB9+T+wkKeJDT7L+X2XUre9L7I1iGppgvlPr0Z
efZSLwhd2KfvtL8VUozfhT+Lb0aItOdvb043lI60nhhl7gV2/QSnleQOdCZM
JcbcoQXqdTnLRDX7YX++Ib2pZjJ8KDp8nKfuL/y1Hpr3fzoG5c/+jiZYP4cS
+oMBB4oDoH/js0/PKf0edNulzju/GiUw+06snx+GUX+NemlSA3xp++YmJomj
wM/hemrX6uCyT2pv8u9RYN0hLGda3gsPLr16/jy4GxQFNi68DG+EzJJRcc7i
fFh46Ot27VAR1EqYjt/sHYONmsZeJ5j7YOMHrwuyL1rBdWZA/cNQJ+T+er/3
YTeCRtbpf21Wo8DAzre9pakeJFMfu4TvyQcJyz0ht3waoH3+i2fihlFAg/Ib
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
Zvyxkwn1lZDzZpkFf6zsTgYkyPqh7y3v2vyiuoOqNzSP1d1kZkC/X5bS3qxg
QjOfRKh6Rfy3x77f6ZHp83c575ZZkb3YIOl3manbFHxgQEFWEsp17JyIYSqZ
qruIWxmDNwMyi3OxUPjBhpaNyfwb30sdrXapf1g0B1OS0utpvFaB3DdG52D0
DK/JCua78VWI3jl6JGZP5l2rXl6Y7LjOALxzj9F3vbVxWyH33fLufVclK8gE
P9zb3ugZ8CE3K+7/9qm4y8e8gw6yVOXPDp/iR8GZpH78zL0z3j9nMNWDi2Oq
z3mRhJsnVe/ZGlpP87MJExXg2Wb+hQulL5P7oYkO1/VQiPmjlVXom40Ayq4Q
IZ+Xkc+7CTsKbmcl/PXGXV4UVUb6D+1qWxImM+iQhP2JYRFuLrSNJZWq0296
7qjnS482V7JdKKplRUnqI1TdWC36YZIRHUp+tNMvKYMZafOKUf/3xMZPjM+e
rOK9h4aK5svo0bMaM/J6TF/aGyk/RPzS7zzVbr5FLe5Nn43W/CXB0D70q8Ef
vXkrxsPy+TVKxaqn7qzpxfrTpnarQWimxMe+MPINmvpUf7JueS1+rLmaq2n1
GzG47ypMxsLRrODV+PEz41BiVmToxFyKNs88ZTf+9gH5O18XsNy7Fk8lK90Q
pMtG1zPmi4KtIyFuS+rpe2lr32lwQLnsk2y0rWosg2UqGj49tjgsnDgOBb5n
zkycDAcV87sX+nc4w72f+3cPLaz5gdry8cEqsWj0iVSri1cq8DSGnvhROQ5n
DS8EpL6oxlQMjoXuVWnHchpJf9tt22MPaZ9CvMKm9RLHhmqsbT9Zt0DbOWj0
0qYDf90w/af4ygD25jG5r1Sz9Neb6D0dinayPPASE0OnDjZR/fNqsTHri72H
UejubD1bqwto5aHxA6KOCDf7dpShWRvJQcqy1RVzVJywy47wz0XCTqo0HdyH
GFz1fjnRKKPEz57J1Pgu5aCMooAqCjoVI3YyTQ0xbq6/TeiywBzi2G6OuDoN
rnBwmqMDth8OTKzpP1QCvtulXEf6ErN6Q9q26F3sDouGNf2lfttEwRdvtE3p
+pMrj2OQjcnFj/+m1uLolBgGol+boOSFqEuue1DoW7JfmzVX2h1Cvyq6Z5zQ
nweQuuC+xg21jgGolWY+xeTyG8T7yfnn8bXnPpZ3lI/oE0GPRryC3FuRhX7W
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
      "]], {}}, {{{
      {RGBColor[1, 1, 0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], 
       Point3DBox[{{0.2, 0., 1.}, {0.5, 0.5, 1.}, {0.5, -0.5, 1.}, {-0.5, 0.5,
         1.}, {-0.5, -0.5, 1.}, {0., 0.6, 1.}, {0.6, 0., 1.}, {-0.6, 0., 
        1.}, {0., -0.6, 1.}, {-0.3, 0.3, 1.}}]}, 
      {RGBColor[0, 0, 1], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], 
       Point3DBox[{{1.5, 0., 1.}, {1.2, 1.2, 1.}, {1.2, -1.2, 1.}, {-1.2, 1.2,
         1.}, {-1.2, -1.2, 1.}, {0., 1.5, 1.}, {1.5, 0., 1.}, {-1.5, 0., 
        1.}, {0., -1.5, 1.}, {-1., 1., 1.}}]}}, {}, {}}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{381.27183284375576`, 266.95044501278903`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-4, 4}, {-5, 4}, {0., 0.9999933079885635}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.359054638433535, 2.7068012866014044`, 1.5087071566759584`},
  ViewVertical->{-0.200061917089878, -0.3984592225099969, 
   0.8951008196438274}]], "Output",
 CellChangeTimes->{3.8895267183798575`*^9},
 CellLabel->
  "Out[2036]=",ExpressionUUID->"0f0f4b7e-e41c-4ef9-8a7a-4f6e879b7a81"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.889526609560859*^9, 3.8895270784876966`*^9, {3.889527223582241*^9, 
   3.889527226571706*^9}},ExpressionUUID->"ba071af4-74a2-4d75-a4ee-\
71e2aea219a2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8894379426522517`*^9, 3.8894379882996836`*^9}, 
   3.889440248305505*^9, {3.889441305568922*^9, 3.88944134181739*^9}, 
   3.889446674810646*^9, {3.889506578090123*^9, 3.8895066018710403`*^9}, {
   3.889527164070824*^9, 
   3.8895271661558294`*^9}},ExpressionUUID->"fa27f326-e652-42aa-871e-\
c55a17d799f9"],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.85254576614517*^9, 3.852545790012186*^9}, {
   3.8525460008623343`*^9, 3.852546014833911*^9}, {3.852546549904499*^9, 
   3.8525465758266425`*^9}, {3.8525507687490416`*^9, 3.852550791571227*^9}, {
   3.8525508857264333`*^9, 3.8525509392734184`*^9}, {3.85255116602444*^9, 
   3.852551171419835*^9}, {3.852614838856386*^9, 3.8526148406626186`*^9}, {
   3.852614895066202*^9, 3.852614916027214*^9}, {3.8526149747999096`*^9, 
   3.852614986630224*^9}, {3.889509140326677*^9, 3.889509145199727*^9}, {
   3.889509275179809*^9, 3.889509305683621*^9}, 
   3.8895288539453616`*^9},ExpressionUUID->"d5f624c2-eab0-464e-870b-\
0473fcde3615"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ratnz", 
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 1594, 178, 21735998353566959007, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.889506633644575*^9, {3.8895092764497423`*^9, 3.8895092837010946`*^9}, 
   3.889510521118442*^9},
 CellLabel->
  "During evaluation of \
In[1593]:=",ExpressionUUID->"4494c306-0f07-480b-bf57-18fd91a9f5e3"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ratnz", 
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 1595, 179, 21735998353566959007, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.889506633644575*^9, {3.8895092764497423`*^9, 3.8895092837010946`*^9}, 
   3.889510521130441*^9},
 CellLabel->
  "During evaluation of \
In[1593]:=",ExpressionUUID->"0de0722d-e63c-4faf-89b0-ab86125716c3"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
nXOuFP7KS7f9fw7ZckjMWmcuhf8AeArMww==
        "]]},
      Annotation[#, "Charting`Private`Tag$124035#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
xLO79ZKrGgO5dtlMzHiVov8BUUvQgA==
        "]], LineBox[CompressedData["
1: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
7xWrkI6y3lq9Kgbcwpq5V6lfkUcDuSHxDAaPrT71lsFXZN1yVk5LA4MLjLv8
r1YqUNxFCZvbVzDA574nyTiXodr5FoW22xgIhYvkjwuXoQSPHQ9v22Ggd+Rq
XURHKdr2TNR0+Q4GpY/yGSsypeiHqavk7vsYBC65yLQxilGSq1XlXncMZDau
FDiYFqJfI8y7N4IxsEiVadjPWYg0nXXcM0MxiNAwJfWVFiCpmhbl1XAMVl5U
LqnuLkCjoRf7QqIxaOPyPr21Jw/5Gr984p2AwZAMe6hxSDY6wu62GJWDgflV
ocLRW2koVfwlOagTg5mfv5Vd61OR4qfqfbrdGHi+6ULcB1MRNbRLc2svBvGj
vm1qzGTEWfvQxHMAg8K23oYrPQmIZmvvc2gMg5xfjmL4SBQK+Lm81oBj0Kks
cnhvfCQS7Xr+68IUBnNefSq65hHILOD3UN00BkY7XNLsURhSqRW6kzeHwTVV
7o0bWgIQH8n0s+kvDHz6pfr31l1GLuY3ymf+YSDLQ77LJncMYuonXsmy4EBa
8E3kXTKCpDMGF+034OAReaHV4ZgzOM4uhfVtwqFOJPC/97y+0FL7XN2dHQf/
N6LOJ0L9Iba9xTeGA4cLWyuNerj+gznukpwCThya/8xJs20Jhj+Ox3vJW3Gw
s5OxLf4XARHJWic2bMdBS/SJid/pKJBgu0hZJyxFrtPV84yGFxvF3FZ24DCl
b35iavktRLmRHGi7cHA8E84u/DsePlz7ZusvgMPl5bG1KcUEoO9+9MhaEAf5
QumFkoeJIBAW4HBqDw5LUZQZqaUkOOvsso++F4cyTo+BWtdUWBe75rtxPw5J
cnx9OaJpcLm2qrGL8Au9nO74rjRY7a5UjRHBweANre2xdDrs7+Eu3iOKg2rZ
s5ZbpHRgK84o7ycsOsbfpOf3Eda+288FiuEwf0CnVob8Ce7PVlAY4jgMajAR
/6vPoMP3PCn4IA5Vdj5fWU9kgJ9RS7C8BA5BWYWl4+GZIGIvNnNLEgcJ5X05
ERrZYBwnUBYljcNWs5Iv3gvZwHVOYnCXDA4/va5mOCbkgMbCN+FwwlbUWn0x
z1zCj6TdDuHQ/zOs511vLjiviE7TCWuymevxSudBlLtxv44s8ftI/bn8dyAP
Vn5s3csth0OKcn37I9l8+Gtm8sSOMN+l15emfPNhQKB7qYLwSzOLVqvhfFAr
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
xuqmxM9S+B8Eh4aa
        "]]},
      Annotation[#, "Charting`Private`Tag$124035#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
DfoP90TkPQ==
        "]], LineBox[CompressedData["
1:eJwV13c41V8cB3CFjIQKpRRZSRKJIvk0VEZKWlZWtEjyQ8qeiYgGKsksKyNl
RSd77703FxnXve73S8Pv9Nd9Xs9z77n3nuecz/v93WVxT89qLRMTk/saJqZ/
r4zhzoa7ciTyNCr0k+iqRGVyZzMu7ydRi2z87s7QMpRdELaxfw+JfqXtM3r8
4TuKU+/8z1KcRMdKvNfNGuWh0AahjpmdJJpWLpEcssxGHvoWh/8TJNFvHf3l
t7rpyHbk45uVzSQaI09Qzeo+IGOb2d9e3CQK7M8PG6K+R9qMA6YcHCRqjb5k
1GHwAklxfhfb+pdAH+5OFz2Ks4YtL5n935MEiuryCRTsCYJ1OzUpkjQCnS50
ZS0aj4BR+bY0RQqB1I7wGJ3RToSWb4I8RSME+ihK/eGcnQw/TpneV+8n0Km1
7f1x9E8QbTCteLGFQFfvkhny7Nmg78WE7AoJNNcw9cjctQDOrD+9i8zB67EH
i99XLQSlV0E+HlkECrz7LvnhYhFsThbQCPlAIJ34rZ8fxP6AhiaZ5tRQAtV0
G3fVFpdCoaG9gkIQgbbknQrb6FUGqWO5rwr8CPRGU15a+mg5BJAnDKsfEWjS
ZFbkTloFnBQxGJ2wJJCvoVNA6p1qyLvnt7RLmUD6vztY2Fwb4ONyzdVkBQL1
jJXkx/M3QrgPb4GcLIFitGO3hXxqhP8i3rqDGIHqzI1cj9k0gSzKYru2gUBM
rMHGW0KaIZ57QDBymIGEYtg35Ge1wnMjYFPuY6AS0UNFZxdbwTspht7dwUBr
ttTM6B9oA4sT1xu31zHQrUm7kYnMNhB1ovi+z2GgYwsqg7uT2iGuf3H+QxAD
ZWk1JVl6dUJMGlvFV0UG8g5KqND82QOhy7eyr8gxUFpExbKySC94nq6JIaQZ
qC2lTWHwYi+YDT11URZhoM50G2mdgl4Q5tskX8TJQMLTGq/bfPog2kUoqmxw
CWnQVhJucQ5AlJa8feuTJcSxqnwjyXEIxNdr1TT5LiGdTwYiFwKHILXWQrTB
Ywl5/L53dCx6CArOvmypclxCybcfe9dUDkH3OeLAd/MlxL537/53W4dB4GIR
LUl5CZWlCFY9zhmGZ0aaju5TdHRDXHRz+tgIeNuYO+/RpKOzs0yyuzaNw0CI
SVTBSTqa+mTvyC0+DipZRj+01egoS6i8/6fiOCwuXWa3VaCjMPunnm4G42Du
oRX5eQcd6W/rXEd9Pw7HnivkHVmkIUl0N++Q9AT8zWUldd7S0KnZ/ljKwUlw
YU55YD+7iIxIasy+3VNg7tko3pFERXo/OunqFj/hVdF4ZNSdBeQWPEsqScxD
waAUV5roHOL4JjH+bXQBxHiPnbgUPYOiyB8PmFao8Fk64M7IKAV93LrW8jMr
DQbLs0SUlCYQ695fr47O0WBc5tUBlDOKXj8WSKxPp8NG92Ql2TXDqLUBpg1v
LoGM0rxMIq0PvU98m2f8dwl81Geb8p070Yj4JF32KQNKNH6eP3i9E3GItyvK
hTCASWemIV2nE3Fe45eWC2WA6+WpunjRTnQg5t4+mZcMcLoxXhVc14Fe2n9O
5ItiwK2A/h/mIh1Izrr26cdUBpytq8/kqGpDo7MPUjqqGcB/KT3UYEsLCjwk
tmK5loDPkkEFp5hbkOnjpTyCmQDd5Ztj8vPN6FnKoNkTVgICo3cd5qxsRlGt
njbJ7AT8pbwcLHBqRqtLz536uAmYcHORFepoQt31mvbc2wmwPR8WWbSnEbmX
1w7HHcDrM8p5qsRr0PXkxvEXJgSEpMSVqC1XI9P/xil/TAmwNvFw/FpfjZS1
bNJumBMgXnG4N86pGplZnXA8aElA+KvUD25VVSjDXXlj8W0CHh0MO6pgU4lI
2dnAaAcCTtgbW0dnl6GRlyZg/YSAnZLKO/kDylCq+gO/T4EE/Ormbw4yLkMa
qqefzQUR8OV4o9JD1jI0us5iziaEAMmNJ9ZeulqK8qhr+w1fEMCZufs1x69i
9IOvJeRXFAGJvePBU77fkdobv2bdDAJ6XAXev1P4jh4bXvytn0kA984zmRdG
ilDUnmf8ZlkEOJklteRDERpK8N9snU3A6fE7WwJXvqHerDE1h1wCKHPzMdJ2
+Yg53NTkIiJAeu1KtrXRF3TYroz3VAMBJvHS5cKcX1Bw6CuRvY0EPFc36mjN
y0Y15kdEeJsIWPEvJI8IZCM3dan5jmYCatd7HOVqzkIpmo51V9sJ6JJmDzEI
TkdvAjuCJPsIuHZB6Evv9QSUy7HpHEkh4CdtSdmxLB699It+ljdFgGt4I+KW
iEe+POZ1D6YJiOr1rj0+EYuaTCIP0WbwftW2lJ9vjkavtyu3988RkEG3EaP0
vETRtsJy3nQCPNuk2raX6qC7Sc8d2FYJkOHpv8O67yBsv6wo+hG7g+r9npfU
h0r187WnmEhweXG6xvqgHey1ovB4riGhVOTJ43e83lD4OcGCwkzCzZvSN3L+
Poerfzz3BbCTkM/p0l7iGA+Znzu0WTaSELOPvzVDNAHYE1+IhmD762Y0RTUm
wAy/eYXAJhIuhY/WOu35AAUPtziKbyZhYdfZEun+JFg1Omcrz0+CpPKOjOfq
6bD9zr6ajYIkcBnnpnlQ0+Gm3qptADbN/UKKTXQG1Pc7DP3BNhsp0RNzzYTH
unv2jG8jQVaK0PnTngWyb0t0E4VIqM42Vc968gU+P3FcmBEmQbVcpnT30Bfo
jDtgdF6EhMyO5ePRSl+hioMMy8IOX34BQaNf4aO/7XX7XSRYQpWK1dFc2GRc
+nJclIQu3Vf5vS9y4Ym2mwmIkaBtYXFYbzoXDukM0SKwD/j9VoSIPGC5Y+t1
SpyE1Ro5eUFqPviPq0g+lyDBvu9PxrMzBTD2tEF7BHtitkZ2XXQBJB6NUZWX
JKGO10qGpvUNsrLKPGqx31x5vbs+oRC8lJwDqbtJUBxZs9NLH0HJG+EEZmn8
fwuuUuWSEaiMrt5TxZZ8/qlsaBmB9hMJWQfs9bFpijE6P4Ayxe41hP1bV79v
de4H2HS/90jbSwKpylxxdUsxdE9v7+vDpkulZ2RAMSSG35bmkiHhJxOLj2lo
MewVORp1E7s/M2MPki8Bzwi+1o37SOiJMty8xbAEfLfZFipjdwSw/rH1LoHv
KkIRZtgNZkZNO1tLwG+Tokgqds3ZdQVOv0ogt869oQG74nBWfINYKZzf03uX
iv2dl+2Bu0MpNCgEeCjIklDwO8usI6oUhPNzqHrYORRjLdnyUgh+ln3pPnb6
j887BvjLwO54y88U7JS0a2xKamUQW9m0qwL7QyQ7NfhGGWjTr5wZwn5vZ1J2
NLcMjIms6xv3kxBlzJH+arAM9LQsDKWwIzW+RMyylUOV6oXjatihIpzW7/TL
YbN+zOAN7KdcXy8teZZDcX1P+EPsANJUTSe5HB67sqsFYXs2fd34Z7kc4lwW
jFKxXQvNfl0SrQCPSZ+WfGznpPXjaVoVcL+08HAltsPLnAaW/yrg5tHHIa3Y
dp7mecZvK2DKuLF1ANvGhivuS2kFrGX2Yp/CvqWfG8T1swKUpx/LLGJbqls4
WvJVgtuHRljBNpfbYFqoWgmCiSdPrJEjwUQoT4PPqhKSZRoV2LAN2a8fsAmu
BNZr1/i4sK/QNwiVfa0E1f3dozzYekN5rEIDleDluC9uE/a5uuvz/62rAv5e
9fN82Fp53N21slVwZoxj5p9PJ+SXiF2tAuO5G47/fCLUMs3Fowo89p+e+/d5
NVee8NaPVZCfE3aZF1vlVoHH3qYq6LJWSP33/UqXrG77kFVwj4d//t/vO3CM
92KvSDXkqIjsWostK/NNVUGzGrxM1Y7/wv9PeusNyaD71XCoSv88DVuSZSPv
6OtqKIjQ157GFlv4tqxSUg0G1ZKKQ//2v/6kL322Gizk63jbsDtSarnTBWug
21kspQJbLuDi65unaqAwm3tNHnagVa/Yrvs1wIfu8Sdhj524nt4TVQODx6Qm
w7GPiswcfllVA3MfBZ18sRd6VnTYRGqhrm5vrdH+f/vj3fVDuxbeXuQOO4Wd
8Irz+qMHteB24dNmWeyrutucZxtqgXs49twvfB4z98Wt/bhSC4Huuev+nU/O
9dLBZpJ14JPC4VKK/b1cOa7VrQ5irw1H+GNvjS+WCU6uAyE5iWM3sO09NXNP
t9dByG7RBHVsiSMGdfky9eCUURz9B98n963DV/7TrwfrShHFLuyupVvDMr71
sH3zZ/8s7KeZzoz3vfVgODps+O++TgQzeRmwNQCf1JF+Rexj1gHrNys0QLyI
6jZObJpEpIh/YANYHkoqTcfzwPBtrpaNciPwJB9vouD58cUZ2iWsGqG1ZlHs
Czb3lUrTwdBGKO7cK++OXczb6aBHaYR5j9gH3Nh8J13OR2k3wUKbZ6Ywnk/F
8ojvoXkTvPusXze0hwRbEeaeyw+aQEM4MCYGu+pPoCVPfBOICJjcF8J2yXvz
0HulCbr9XTNZpEiQ+jigZsrbDCGP2wK/4XnZ9kqURVWyGUQoGkL3sWX/SwlZ
utAM5wtHr3fh+TqyryD+VnIzOAqYekXgeawZ311/Tr8FBG8/a+rE837BL/1G
+d0W+NmrV+KCHXnLZ/WITwvcPxTosBObsm+f/J70FpjoTBU0w3kRkOf5kpml
FdAxXos2nDdV9buN8jJaIS1Ao9wT55Fd5m+abHkrtF1jT+HF3vqi+WliTyuU
7HQ/+377v/vt8v05axsczG+tzsN5xj7asOuuURv0GfDF9m0l4QzpSNnF1g5n
/AMjJ/lImOvR8ooUaodvzgknrmOHFwlv4znQDkf7Hn7sx/k64V2t/du4HYLa
n8U04Pz137Ajo+NzO7A1UrRiefH8FS1zDDLpgEw+j4scXCSc0tnEvPS1E97p
3/4xgvM/xJyDulzdCTd8H248jt3lyDT4t78T6jW/H4/GfeFO9FwB+7ouGDfe
A5dxnwiZr7EXutIFVM1LSV9/474T5jNyktEFOTllHMcIAu500IufK/WAZqZa
2kPcX7KnZzIitHrA2hD5ZuN+8/vvyLsoE/wcVbdX6SfuPyG7mx9+8O+B55YL
ooa4H2U7f5Iv6OgBj7NKO6XG8fu33YgdduqFbY+srJ8OEPDMtNNTLrcPok5/
anbAfcz/pypM1PWBWeaFO464r7k/jPvzdqQPpA85v3fAfc72xd1HbNz9IEHd
OGBbR8C5SmaHAct+GNjVHK9XhfvjfrmbTzcNwBYR0fWduA+G/A3QodwdBBPk
yNz8Ca8fNLc+2mcQBrLLgxPS8PpbL9VcfD0IDyKEUpxS8foHhM+gskF4R3WK
EEgmYHe2oUjthiGYiplTOZVAANvkgmCc5RBweUhcuvaGgMpzOzbobhqG+hKb
g05+BPDJDgvYCw2DUaLbrQO+BJhtSBR5KTkMjXPyF2e9cd+slTnYpTIMbiyK
2qaeuN9pqhqZXR+G2FjLQgUXAkJPGiXbfRmGb7oa+tF2BBgefn0q7MoItDv0
czobEjC7i9+95c0oDN5yapCSJuCwS+z94oRR4FuMmIuQIsC7bZ9VZvooOGhc
+sa6mwCBx6fPhpSMAlMgq0G/GAFqPx9s05oeBcPNG9647sD7n9OTU6w8Bvzr
7nU+4iVAXjtmPrNrDIRq7p3/b4kBjg57zZ8JTADTp6tw5BsDBDjnC6/smoBc
eeG7UvkMyHv/eetOmQm4Fy49tTmXAb9rlJvSjk+AeZ919fhnBnjv0oAamwlY
tlm31TGFASENljtYSydghvPpleOvGfBBKrr70b1JkLT/4xTkyIDOPl69G1UU
0Cpyv18oxQCtIKsuhxYKXLNnlFhIMqBQucDEp48CoBFuxybOgJjw69YxCxQI
fWTfry2Mn9d0c3x7tk6B4h2bqR/8DFgpNco9d3sKOi5ISxqtZYBQ6gehQ5zT
8Ojy0KhWzxKYPVSdZDs7A3uiTKlTvktQuvdQYCnrHKTP1K2WZdFBkqOQkqCx
AI2kmxRXFQ0WK2XvxOksgMx13kKpMhp894+dea+3AHXPVytO/KDBFZbHc2+M
FyAjZu+Re3k08Fu9QA+1W4Cg7GdWyUk0GFuaXHWNXAA3SubfmAAaxI1s3nKZ
sgCb2STsQ07TYEeh9SnWACrYCe21HcxfBD7BlRXbYCp8fHQxauzLInA5BWR2
PaeCi9fabRMZi/B7f+L2tHdUGMr9RO9PXISe+AGqXjYVLiqFFcSELUJ40IXo
mAEqLMREst+7tQjcRoeII4qLULlmeoR38yIwraxNth9ZBPTOr9/AiApmo900
j8lFuBbx7UzOZSr8qMtUC/65CC7CchbculTwfG/S9pGxCId6VsKy1Kmwql6w
2sdJA/sEOF66jwp/n92/ckaBBlJEXgv36gL8lhhiFvKlQYgQl9726AUw5sk9
t+cJDRK+hO0ciViAQjL4tVIIDV73/mmMD1sA19oj+y9E0mCg6UXpFr8F+GUX
YeifRgMBE7ctxdYLsPLtXNZCGw2EXfMebjq8AMSFIpNyCTpoTS6vm4ycB+/u
jH61vXRYo3765NiTeeA2jzPOk6NDeBY53PJoHiTtHhumHqFDXU9vl4/xPFwK
uXAl7AId8tbNRMgLz0NmzbjONTc63Ju8fycudg5un+Q+utRGh0S2ezaLr2eB
XsNUaNtDh85tHO0DAbPgqUdToQzSgdfu3dW8B7MQad51uHeaDhydp3/LX56F
Co+4g8VMS0AzetKhwjMLooVKMsEySzByunrA2eMn9B403S6Bzx3XZHXM7vMz
cGNZkcfvyRJ4HgpJzjgyAwtFXMzjIUuwR6Y0bKfUDLCcKZhOeL0EYRdO9GUw
zYCsAX+BeMYSHLFXZY/MnAZPt1p9cXyuGcdKG5XWT4NkxaFwMTkGnKwrP78u
mQKZgdyBPooMmOwaWVsQRgGV8+NuoyoMsA9ge3PmEQXOdz23ij/FgNUTJP+c
FgWcp2cPihnhe/NyueTK9CTUcie0ivoz4HLJjPQvkUmwu8q7UbSPAQY5qvSb
N8fBImn/G4lhBrhz+FMrtMfh8vI5sT0TDPgYcPLF1P5xUHkbrCi3wIAAvSf6
DsQYsA5yGqqxEDAg1Tbl5DMGb26wxhvKEOD74jIlM3gUnuaKy5jIE6DZoDvv
d3cUPNjVv5orEbBJNqmfSWcULFO8K28dIyAipiKmn3MU9s+tzjhdwnN9yrdl
wGsEyhxXDr5wJcBSvnlHscEw5FQIfg/3ImDuexSX7oFhSN6ifOaNPwG8Gs8y
jnMOQ0j+A4PYUAKiDWltcnlDYPCH7paB5z41x/Lr1fVDcPYcH1s2zgUVKxb6
/sJBUHuvEJqTTgBHO8Ns2HQQxI/bxxXlEVBtM/z5VuwAzPnOV9TinFp3tGTs
Ikc/DLdz6zY2E2ARunU+M6oP2iRlu1s6cK6MrW/9I9MH+VU2M91DBKx/MHzl
4sleSBN86tCPc3OLxIHinKoeiL6T+mcI566T30OrAs0e8OWa5qHQ8Vz/ttHs
nWo3OF3jeD2zTMDrp+ZBip+64Ha6lOj8XwJOBnQ/rxfoAuPVM6mLzCR8TDVW
03HuhHO6Nw8y2EkQCNO4rNXUAcdj/YuWN5BQevu+04hQBxxcTDz9B/cQlkbx
x4+M2kHyZHkjE+41WlYVipoBbSD4ckyfZQfu6UnXLlu/a4XDPsICDrhnFU7Y
JvM4t8AVe8PWUdzjyHPPKi/xNIOD+avQi7iXvu3UrlPlbgCW7gP31uPnhuJD
omy6H6rhf4hyZHM=
        "]]},
      Annotation[#, "Charting`Private`Tag$124035#3"]& ]}, {}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0, 0.6, 0.4], AbsoluteThickness[1.6], Opacity[1.], FaceForm[
        Opacity[0.3]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBWIQPQpGwSgYBcMFAACjfwH7
         "]]},
       Annotation[#, "Charting`Private`Tag$83597#1"]& ]}, {}}, {
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.2, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.5, 0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.5, -0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.5, 0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.5, -0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0., 0.6}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.6, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.6, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0., -0.6}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.3, 0.3}]}, 
     {RGBColor[1, 0, 0], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.2, 1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.2, -1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.2, 1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.2, -1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {0., 1.5}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {0., -1.5}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1., 1.}]}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-1.5117386210316153`, 1.5117386990734916`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.8895066340050745`*^9, {3.889509276818391*^9, 3.8895092839311304`*^9}, 
   3.88951052137147*^9},
 CellLabel->
  "During evaluation of \
In[1593]:=",ExpressionUUID->"9ade6817-0a8a-46f7-84f2-cbda9a6e784a"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.889503754176126*^9, 3.889503774919359*^9}, {
  3.889506042333119*^9, 
  3.8895060426681185`*^9}},ExpressionUUID->"c3db3ab9-9fae-4f26-b1f7-\
a5a88ea0de08"],

Cell[BoxData[
 RowBox[{"\n", "\n", "\n", "\n"}]], "Input",
 CellChangeTimes->{{3.889503742234506*^9, 3.889503750320815*^9}, {
   3.889503783300269*^9, 3.8895037935608826`*^9}, 3.889504273015833*^9, {
   3.8895043385419216`*^9, 3.8895043658866673`*^9}, {3.889504398414524*^9, 
   3.8895044102738485`*^9}, 3.8895056018444853`*^9, 3.889505935083838*^9, {
   3.8895060223953743`*^9, 
   3.8895060378911886`*^9}},ExpressionUUID->"fcff361b-074c-47c1-979d-\
7625a20784fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "find\[Alpha]bKernelNoSlack", ",", "find\[Alpha]bKernelWithSlack", ",", 
     "f", ",", "linearClass"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"find\[Alpha]bKernelNoSlack", "[", 
     RowBox[{"xs_", ",", "ys_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "len", ",", "\[Alpha]s", ",", "\[Alpha]", ",", "lag", ",", 
        "constraints", ",", "maxval", ",", "\[Alpha]Num", ",", 
        "\[Alpha]sVals", ",", "w", ",", "b", ",", "ele"}], "}"}], ",", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"No", " ", "slack", " ", "variables"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", "xs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]s", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "i", "]"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lag", " ", "=", " ", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Plus", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[Alpha]", "[", "i", "]"}], " ", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"Plus", "@@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "[", "i", "]"}], " ", 
                RowBox[{"\[Alpha]", "[", "j", "]"}], " ", 
                RowBox[{"ys", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", 
                RowBox[{"ys", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], " ", 
                RowBox[{"k", "[", 
                 RowBox[{
                  RowBox[{"xs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"xs", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "len"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "len"}], "}"}]}], "]"}], 
             "]"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"constraints", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "[", "i", "]"}], " ", "\[GreaterEqual]", "  ", 
           "0"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "len"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"constraints", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
        RowBox[{
         RowBox[{"Plus", "@@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]", "[", "i", "]"}], " ", 
             RowBox[{"ys", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], " ", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], 
         "\[Equal]", "0"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"maxval", ",", "\[Alpha]Num"}], "}"}], " ", "=", " ", 
        RowBox[{"NMaximize", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lag", ",", "constraints"}], "}"}], ",", "\[Alpha]s"}], 
         " ", "]"}]}], ";", "                   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "this", " ", "is", " ", "an", " ", "important", " ", "line", " ", 
         "of", " ", 
         RowBox[{"code", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]sVals", " ", "=", " ", 
        RowBox[{"\[Alpha]s", "/.", "\[Alpha]Num"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ele", " ", "=", " ", 
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"\[Alpha]sVals", ",", 
           RowBox[{"Max", "[", "\[Alpha]sVals", "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", " ", "=", " ", 
        RowBox[{
         RowBox[{"ys", "[", 
          RowBox[{"[", "ele", "]"}], "]"}], "-", 
         RowBox[{"Plus", "@@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]sVals", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"ys", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "  ", 
             RowBox[{"k", "[", 
              RowBox[{
               RowBox[{"xs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"xs", "[", 
                RowBox[{"[", "ele", "]"}], "]"}]}], "]"}]}], " ", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ys", "*", "\[Alpha]sVals"}], ",", "b"}], "}"}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"find\[Alpha]bKernelWithSlack", "[", 
     RowBox[{"xs_", ",", "ys_", ",", "c_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "len", ",", "\[Alpha]s", ",", "\[Alpha]", ",", "lag", ",", 
        "constraints", ",", "maxval", ",", "\[Alpha]Num", ",", 
        "\[Alpha]sVals", ",", "w", ",", "b", ",", "ele"}], "}"}], ",", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"No", " ", "slack", " ", "variables"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", "xs", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]s", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "i", "]"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lag", " ", "=", " ", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Plus", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[Alpha]", "[", "i", "]"}], " ", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], "-", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"Plus", "@@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Alpha]", "[", "i", "]"}], " ", 
                RowBox[{"\[Alpha]", "[", "j", "]"}], " ", 
                RowBox[{"ys", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", 
                RowBox[{"ys", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], " ", 
                RowBox[{"k", "[", 
                 RowBox[{
                  RowBox[{"xs", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"xs", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "len"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "len"}], "}"}]}], "]"}], 
             "]"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"constraints", " ", "=", " ", 
        RowBox[{"Table", "[", "   ", 
         RowBox[{
          RowBox[{"c", " ", "\[GreaterEqual]", " ", 
           RowBox[{"\[Alpha]", "[", "i", "]"}], " ", "\[GreaterEqual]", "  ", 
           "0"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "len"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"constraints", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
        RowBox[{
         RowBox[{"Plus", "@@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]", "[", "i", "]"}], " ", 
             RowBox[{"ys", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], " ", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], 
         "\[Equal]", "0"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"maxval", ",", "\[Alpha]Num"}], "}"}], " ", "=", " ", 
        RowBox[{"NMaximize", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"lag", ",", "constraints"}], "}"}], ",", "\[Alpha]s"}], 
         " ", "]"}]}], ";", "                   ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "this", " ", "is", " ", "an", " ", "important", " ", "line", " ", 
         "of", " ", 
         RowBox[{"code", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]sVals", " ", "=", " ", 
        RowBox[{"\[Alpha]s", "/.", "\[Alpha]Num"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ele", " ", "=", " ", 
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"\[Alpha]sVals", ",", 
           RowBox[{"Max", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "<", "0.0001"}], ")"}], "||", " ", 
                  RowBox[{"#", ">", 
                   RowBox[{"0.999", " ", "c"}]}]}], ",", "0", ",", "#"}], 
                "]"}], "&"}], ",", " ", "\[Alpha]sVals"}], "]"}], "]"}]}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "  ", 
       RowBox[{"(*", "  ", 
        RowBox[{"max", 
         RowBox[{"(", "\[Alpha]sVals", ")"}], " ", "thats", " ", "not", " ", 
         "c"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"b", " ", "=", " ", 
        RowBox[{
         RowBox[{"ys", "[", 
          RowBox[{"[", "ele", "]"}], "]"}], "-", 
         RowBox[{"Plus", "@@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]sVals", "[", 
              RowBox[{"[", "i", "]"}], "]"}], " ", 
             RowBox[{"ys", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "  ", 
             RowBox[{"k", "[", 
              RowBox[{
               RowBox[{"xs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"xs", "[", 
                RowBox[{"[", "ele", "]"}], "]"}]}], "]"}]}], " ", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ys", "*", "\[Alpha]sVals"}], ",", "b"}], "}"}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"c", "==", "0"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y\[Alpha]s", ",", "b"}], "}"}], " ", "=", 
       RowBox[{"find\[Alpha]bKernelNoSlack", "[", 
        RowBox[{"xs", ",", "ys"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y\[Alpha]s", ",", "b"}], "}"}], " ", "=", " ", 
       RowBox[{"find\[Alpha]bKernelWithSlack", "[", 
        RowBox[{"xs", ",", "ys", ",", "c"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", "   ", 
   RowBox[{
    RowBox[{"Plus", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"y\[Alpha]s", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "  ", 
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"xs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], "+", "b"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"linearClass", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Plus", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"y\[Alpha]s", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "  ", 
            RowBox[{"k", "[", 
             RowBox[{
              RowBox[{"xs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}], " ", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], "+", "b"}],
        ">", "0"}], ",", "1", ",", 
      RowBox[{"-", "1"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fX", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "#", "]"}], "&"}], ",", "xs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"classX", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"linearClass", "[", "#", "]"}], "&"}], ",", "xs"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"ids", ",", "xs", ",", "ys", ",", "fX", ",", "classX", ",", 
       RowBox[{"classX", "-", "ys"}]}], "}"}], "]"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.889527633798566*^9},
 CellLabel->
  "In[2047]:=",ExpressionUUID->"419172e6-17b6-4204-9fea-9bd266523839"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.3`"}], ",", "0.3`"}], "}"}], "1", 
      "1.4267895474788979`", "1", "0"},
     {"2", 
      RowBox[{"{", 
       RowBox[{"0.6`", ",", "0.`"}], "}"}], "1", "1.2401424350547414`", "1", 
      "0"},
     {"3", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "2.1742481969440117`"}], 
      RowBox[{"-", "1"}], "0"},
     {"4", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2`"}], ",", 
        RowBox[{"-", "1.2`"}]}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1.3194623042186213`"}], 
      RowBox[{"-", "1"}], "0"},
     {"5", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", 
        RowBox[{"-", "1.5`"}]}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1.0000472379879726`"}], 
      RowBox[{"-", "1"}], "0"},
     {"6", 
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "0.`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1.000143174731533`"}], 
      RowBox[{"-", "1"}], "0"},
     {"7", 
      RowBox[{"{", 
       RowBox[{"0.5`", ",", 
        RowBox[{"-", "0.5`"}]}], "}"}], "1", "0.9999988094352964`", "1", "0"},
     {"8", 
      RowBox[{"{", 
       RowBox[{"1.2`", ",", "1.2`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1.319402787401024`"}], 
      RowBox[{"-", "1"}], "0"},
     {"9", 
      RowBox[{"{", 
       RowBox[{"1.2`", ",", 
        RowBox[{"-", "1.2`"}]}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "2.1742510542993`"}], 
      RowBox[{"-", "1"}], "0"},
     {"10", 
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "0.`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1.000143174731533`"}], 
      RowBox[{"-", "1"}], "0"},
     {"11", 
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "0.5`"}], "}"}], "1", "1.1484175470775353`", "1", 
      "0"},
     {"12", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.6`"}], ",", "0.`"}], "}"}], "1", 
      "1.2401282701891643`", "1", "0"},
     {"13", 
      RowBox[{"{", 
       RowBox[{"0.2`", ",", "0.`"}], "}"}], "1", "1.6194471286177214`", "1", 
      "0"},
     {"14", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5`"}], ",", "0.5`"}], "}"}], "1", "1.`", "1", "0"},
     {"15", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.5`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1.0000082541299185`"}], 
      RowBox[{"-", "1"}], "0"},
     {"16", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5`"}], ",", "0.`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1.0001785868954765`"}], 
      RowBox[{"-", "1"}], "0"},
     {"17", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5`"}], ",", 
        RowBox[{"-", "0.5`"}]}], "}"}], "1", "1.1483927484035363`", "1", "0"},
     {"18", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.6`"}], "}"}], "1", "1.240164450954293`", "1", 
      "0"},
     {"19", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1.000576524679394`"}], 
      RowBox[{"-", "1"}], "0"},
     {"20", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", 
        RowBox[{"-", "0.6`"}]}], "}"}], "1", "1.2401488574110713`", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.889527648241544*^9},
 CellLabel->
  "During evaluation of \
In[2047]:=",ExpressionUUID->"c0d10fd5-d9f8-4081-867c-a3917b420935"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bound", "[", "x1_", "]"}], " ", "=", " ", 
   RowBox[{"x2", "/.", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"f", "[", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}], "]"}], "]"}], "\[Equal]", "0"}], 
       "}"}], ",", 
      RowBox[{"{", "x2", "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bound1", "[", "x1_", "]"}], " ", "=", " ", 
   RowBox[{"x2", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"f", "[", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}], "]"}], "]"}], "\[Equal]", "1"}], 
       "}"}], ",", 
      RowBox[{"{", "x2", "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bound2", "[", "x1_", "]"}], " ", "=", " ", 
    RowBox[{"x2", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"f", "[", 
           RowBox[{"{", 
            RowBox[{"x1", ",", "x2"}], "}"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", "x2", "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"picbound", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bound", "[", "x1", "]"}], ",", 
        RowBox[{"bound1", "[", "x1", "]"}], ",", 
        RowBox[{"bound2", "[", "x1", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{"picbound", ",", "picpts"}], "}"}], "]"}], "]"}], 
  ";"}]}], "Input",
 CellLabel->
  "In[2057]:=",ExpressionUUID->"1381fc02-d4f8-4287-88b9-9cf27e22a5c9"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ratnz", 
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 2058, 207, 21735998353566959007, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8895288651187377`*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"fad4dd39-8058-4874-8606-bb87ea6816cc"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ratnz", 
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 2059, 208, 21735998353566959007, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.889528865136736*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"3ceeb88a-b77d-4957-9b01-fe8f7b47f436"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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

        "]], LineBox[CompressedData["
1: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
1/97fvf6QPtfDxL8D6ky65Y=
        "]]},
      Annotation[#, "Charting`Private`Tag$800486#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
jxYH8exNyfc6XYb+Byhp3d0=
        "]], LineBox[CompressedData["
1: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
Pb8WHrNibeaJOSsq7mB5iVQ5/A900Vyq
        "]]},
      Annotation[#, "Charting`Private`Tag$800486#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
6lY=
        "]], LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$800486#3"]& ]}, {}}, {{{{}, {}, 
      TagBox[
       {RGBColor[0, 0.6, 0.4], AbsoluteThickness[1.6], Opacity[1.], FaceForm[
        Opacity[0.3]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBWIQPQpGwSgYBcMFAACjfwH7
         "]]},
       Annotation[#, "Charting`Private`Tag$643031#1"]& ]}, {}}, {
     {RGBColor[0, 0, 1], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.2, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.5, 0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.5, -0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.5, 0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.5, -0.5}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0., 0.6}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0.6, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.6, 0.}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {0., -0.6}], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->Large], {-0.3, 0.3}]}, 
     {RGBColor[1, 0, 0], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.2, 1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.2, -1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.2, 1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.2, -1.2}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {0., 1.5}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1.5, 0.}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {0., -1.5}], InsetBox[
       StyleBox["\<\"-\"\>",
        StripOnInput->False,
        FontSize->Large], {-1., 1.}]}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-1.5118829651853656`, 1.5118953653057952`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.8895288653562527`*^9},
 CellLabel->
  "During evaluation of \
In[2057]:=",ExpressionUUID->"a23d3759-8fd5-433f-a38f-c2c8e4b0ca1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", 
    RowBox[{"{", 
     RowBox[{"x1_", ",", "x2_"}], "}"}], "]"}], " ", "=", " ", 
   RowBox[{"Expand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2"}], "}"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f3", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f2", "[", "x", "]"}], "<", "0"}], ",", 
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"f2", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
       RowBox[{"f3", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"f3", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"f2", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"xs", ",", "ys"}], "}"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l2", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"l", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "!=", "0"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l3", " ", "=", " ", 
    RowBox[{"Select", "[", 
     RowBox[{"l", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "<", "0.9999"}], "&"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Misclassified (and uses slack): \>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l2", "==", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"l2", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*OverscriptBox[\(x\), \(-\)]\)\>\"", ",", "\"\<y\>\"", 
           ",", "\"\<f2[\!\(\*OverscriptBox[\(x\), \(-\)]\)]\>\"", ",", 
           "\"\<f[\!\(\*OverscriptBox[\(x\), \(-\)]\)]\>\"", ",", 
           "\"\<f[\!\(\*OverscriptBox[\(x\), \(-\)]\)]-y\>\"", ",", 
           "\"\<\[Xi]\>\""}], "}"}]}], "]"}]}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Not misclassified but uses slack: \>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"Prepend", "[", 
      RowBox[{"l3", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*OverscriptBox[\(x\), \(-\)]\)\>\"", ",", "\"\<y\>\"", ",", 
         "\"\<f2[\!\(\*OverscriptBox[\(x\), \(-\)]\)]\>\"", ",", 
         "\"\<f[\!\(\*OverscriptBox[\(x\), \(-\)]\)]\>\"", ",", 
         "\"\<f[\!\(\*OverscriptBox[\(x\), \(-\)]\)]-y\>\"", ",", 
         "\"\<\[Xi]\>\""}], "}"}]}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{3.889529414370776*^9},
 CellLabel->
  "In[2062]:=",ExpressionUUID->"8ee5e146-1ee8-45de-9128-345d47814e62"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Misclassified (and uses slack): \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"{", "}"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Misclassified (and uses slack): ", 
   MatrixForm[{}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8895294179832993`*^9},
 CellLabel->
  "During evaluation of \
In[2062]:=",ExpressionUUID->"4f8c1e48-4b0b-44f1-ba33-941c3349b5d8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Not misclassified but uses slack: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"\\!\\(\\*OverscriptBox[\\(x\\), \\(-\\)]\\)\"\>", "\<\"y\"\>", "\
\<\"f2[\\!\\(\\*OverscriptBox[\\(x\\), \\(-\\)]\\)]\"\>", \
"\<\"f[\\!\\(\\*OverscriptBox[\\(x\\), \\(-\\)]\\)]\"\>", \
"\<\"f[\\!\\(\\*OverscriptBox[\\(x\\), \\(-\\)]\\)]-y\"\>", "\<\"\[Xi]\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Not misclassified but uses slack: ", 
   MatrixForm[{{
     "\!\(\*OverscriptBox[\(x\), \(-\)]\)", "y", 
      "f2[\!\(\*OverscriptBox[\(x\), \(-\)]\)]", 
      "f[\!\(\*OverscriptBox[\(x\), \(-\)]\)]", 
      "f[\!\(\*OverscriptBox[\(x\), \(-\)]\)]-y", "\[Xi]"}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8895294180873036`*^9},
 CellLabel->
  "During evaluation of \
In[2062]:=",ExpressionUUID->"6ab55a22-5fc0-4eed-8feb-e3802185c58d"]
}, Open  ]]
}, Open  ]],

Cell[BoxData["\n"], "Input",
 CellChangeTimes->{
  3.8895301871970043`*^9},ExpressionUUID->"e53b434e-01b6-4277-ba27-\
d00847af95be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Attempt", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "trainingSetOriginal", ",", "len", ",", "\[Alpha]s", ",", "trainingSet", 
     ",", "x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "linearly", " ", "separable", " ", "dataset"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"diabetesData", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"80", ",", "190"}], "}"}], "]"}], ",", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{"20", ",", "40"}], "}"}], "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "25"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"diabetesData", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"diabetesData", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"210", ",", "350"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"50", ",", "80"}], "}"}], "]"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "25"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"diabetesData", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x_", ",", "y_", ",", "0"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Cases", "[", 
        RowBox[{"diabetesData", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x_", ",", "y_", ",", "1"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Blood Sugar\>\"", ",", "\"\<Age\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Class 0\>\"", ",", "\"\<Class 1\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"trainingSetOriginal", "=", "diabetesData"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"len", " ", "=", " ", 
     RowBox[{"Length", "[", "trainingSetOriginal", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]s", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "i", "]"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainingSet", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], ",", 
       "trainingSetOriginal"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainingSet", " ", "=", " ", 
     RowBox[{"Transpose", "[", "trainingSet", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], " ", "=", " ", "trainingSet"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrependTo", "[", 
     RowBox[{"trainingSet", ",", 
      RowBox[{"Range", "[", "len", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"trainingSet", ",", "\[Alpha]s"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainingSet", " ", "=", " ", 
     RowBox[{"Transpose", "[", "trainingSet", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Training Set = \>\"", ",", 
      RowBox[{"MatrixForm", "[", 
       RowBox[{"Prepend", "[", 
        RowBox[{"trainingSetOriginal", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(x\), \(2\)]\)\>\"", ",", "\"\<y\>\""}], 
          "}"}]}], "]"}], "]"}], ",", "\"\<  \[Rule]  \>\"", ",", 
      RowBox[{"MatrixForm", "[", 
       RowBox[{"Prepend", "[", 
        RowBox[{"trainingSet", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<i\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[OverscriptBox[\(x\), \(-\)], \(i\)]\)\>\"",
            ",", "\"\<\!\(\*SubscriptBox[\(y\), \(i\)]\)\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(i\)]\)\>\""}], "}"}]}], 
        "]"}], "]"}], ",", "\"\<\>\""}], "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8895112653935304`*^9, 3.8895112931636343`*^9}, 
   3.8895116911485724`*^9, {3.889512450115263*^9, 3.889512470351468*^9}, {
   3.8895163747838297`*^9, 3.8895163784614377`*^9}, {3.889522870111602*^9, 
   3.8895228709305916`*^9}, {3.8895483074812183`*^9, 3.8895483220350823`*^9}},
 CellLabel->
  "In[2069]:=",ExpressionUUID->"879d862c-ddda-4d48-9cfe-acb096c6514a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAATyH0dkNdZkCzAEDSU183QDOYw7jA
nGRABYiDE8WSNkDGqYf95VZhQPnwABb+pD5AV36LXsN9WEB3ZuKmpjxBQBlj
gB6MYGRAmty2CRMRQEA3nF42bN9mQIr24xNaNzhA/3nUILuhZkBoaesyF3g5
QBsgob5c2mZARFC7r27hQUAS/1ps341hQJpzTnhvEzdAYlMUDJ3gWEDliFoU
CMs9QIoIQubPklxApRu2rEosOUDUT83jVrlVQFAw4UHd1jpAcuyY0XmbXkDA
3FCiORBAQBSB1o4EcmFAncHkFzB6QUBWfoh8E4ZWQEGkeolf/kBAukyxgr8m
XECRBBk4jahBQKKEOsXfGGZA0Hpbdq+iQkBikr/UNxBeQMsPkfs+dzVAyB9d
wnx2W0CKg3KPLypDQNjBJCObVFtANIyEJID7OEB09Pn5UslkQKcv3KbuI0BA
wAxHh2JgYkBYI29eT6VDQObxxe73TF5AHp2jM2AKPkBoA9iOLwpjQJASTO41
Iz9AbgwIeF/8XUCI+KXmiIxDQOzTsTc=
         "]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAYqYB27RLcEBNvMZ+kdZOQK6HrxBt
tG5Ajr80hWanUEDmMY3CT2ZxQA6otkLCJ1BA/bEBwW//cUCkZPjJUvZPQH0H
MiddwW5AktMJszktUkCreN8zefx0QMYNfO+sOlFADZgbSt5wcEA4+KCPeSVQ
QOQjPjuLpHFAPh4ap07sUUAVfsrGElZ1QMe8CgB1fVNAC2C0PTF1bkDCa1BK
fvZOQNnllvOG8GpATekh6tulSkCy3ATP025uQPRnsjfKh0xAee10qDMtbUDn
i2KnUkxSQMztCy8gOnJAr+5ChEHQU0CsjWbZ6DdxQCYUn0lv+VFAhpPajH5m
c0DLZG4UHi5KQPCBiOLaS3NAdhyPAdFmUkA+RhdXldVxQD7hGqCXiVJA9YaB
VbdjbkBWCwToxmBQQATJRTQTt25AHi89LxXEUkA+Wy6F3QB1QJNKXYQoCVBA
f/gxNHBcbkCodFg+dUFQQNmkPgY1Q3FA5gpkd4f6T0AGDwwirZZuQEywxEgw
f01AAJ71zjvUcUCXMr1mdIZSQMQqsLk=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Blood Sugar\"", TraditionalForm], 
       FormBox["\"Age\"", TraditionalForm]}, 
     AxesOrigin -> {81.5941855069698, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{81.5941855069698, 341.379584113108}, {
       0, 79.25399881874431}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Class 0\"", "\"Class 1\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8895228764576597`*^9, 3.889549881178763*^9},
 CellLabel->
  "Out[2072]=",ExpressionUUID->"04b14427-c958-4646-b8c1-e463fdbcf92f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Training Set = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\)\"\>", "\<\"y\"\>"},
       {"178.91448543244994`", "23.372372761369387`", "0"},
       {"164.8985256023603`", "22.573319644558087`", "0"},
       {"138.71557499405588`", "30.644502043943223`", "0"},
       {"97.96504939672865`", "34.47383581213665`", "0"},
       {"163.01710438800436`", "32.13339349201961`", "0"},
       {"182.9819595191818`", "24.216218226580658`", "0"},
       {"181.05409280299497`", "25.469103987191744`", "0"},
       {"182.82382136792953`", "35.761190382444084`", "0"},
       {"140.43352334759453`", "23.07591964640924`", "0"},
       {"99.509585399484`", "29.79309203348466`", "0"},
       {"114.2939391751153`", "25.173014444789846`", "0"},
       {"86.8959283356665`", "26.839313619115558`", "0"},
       {"122.4293102258105`", "32.12675885151248`", "0"},
       {"139.5630563916717`", "34.954592692086614`", "0"},
       {"90.09493935899204`", "33.987290558704`", "0"},
       {"112.60543887438226`", "35.31680966588568`", "0"},
       {"176.77731572560612`", "37.270979685466614`", "0"},
       {"120.25340765674767`", "21.46580478946252`", "0"},
       {"109.85136469930796`", "38.329576426424936`", "0"},
       {"109.32196882810183`", "24.98242405162837`", "0"},
       {"166.29137896365467`", "32.28072057486798`", "0"},
       {"147.01202739598193`", "39.291484646097786`", "0"},
       {"121.20263261156614`", "30.040530421681176`", "0"},
       {"152.3183054179201`", "31.13754166943778`", "0"},
       {"119.94332695756904`", "39.097927886047785`", "0"},
       {"260.7316541733218`", "61.67631516174206`", "1"},
       {"245.63831362040713`", "66.61563234473417`", "1"},
       {"278.39447264818443`", "64.62123172605081`", "1"},
       {"287.9647836748334`", "63.92440151814051`", "1"},
       {"246.0426212288984`", "72.7066466899835`", "1"},
       {"335.7795904855108`", "68.91680514444951`", "1"},
       {"263.0542698934449`", "64.58554449767769`", "1"},
       {"282.28399204514994`", "71.69230058241462`", "1"},
       {"341.379584113108`", "77.96026612328124`", "1"},
       {"243.66226086835408`", "61.92572907378009`", "1"},
       {"215.51647357437358`", "53.295773760374324`", "1"},
       {"243.4633555502856`", "57.060858690368974`", "1"},
       {"233.41255591237476`", "73.19254479049378`", "1"},
       {"291.63285736713146`", "79.25399881874431`", "1"},
       {"275.49434795436787`", "71.89741745505361`", "1"},
       {"310.40589604741433`", "52.360292962935624`", "1"},
       {"308.7409386951758`", "73.6065067193575`", "1"},
       {"285.34896000949436`", "74.14987948060022`", "1"},
       {"243.1161296396091`", "65.51214027781438`", "1"},
       {"245.72109426145482`", "75.06379300093656`", "1"},
       {"336.0540820895002`", "64.14309796438674`", "1"},
       {"242.8886967636099`", "65.02278097761393`", "1"},
       {"276.20044540853775`", "63.957259105538284`", "1"},
       {"244.70863439898693`", "58.99366101840914`", "1"},
       {"285.2646016687795`", "74.10085457302408`", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  \[Rule]  \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\<\"i\"\>", "\<\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(x\\), \
\\(-\\)], \\(i\\)]\\)\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(y\\), \\(i\\)]\\)\"\
\>", "\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(i\\)]\\)\"\>"},
       {"1", 
        RowBox[{"{", 
         RowBox[{"178.91448543244994`", ",", "23.372372761369387`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "1", "]"}]},
       {"2", 
        RowBox[{"{", 
         RowBox[{"164.8985256023603`", ",", "22.573319644558087`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "2", "]"}]},
       {"3", 
        RowBox[{"{", 
         RowBox[{"138.71557499405588`", ",", "30.644502043943223`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "3", "]"}]},
       {"4", 
        RowBox[{"{", 
         RowBox[{"97.96504939672865`", ",", "34.47383581213665`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "4", "]"}]},
       {"5", 
        RowBox[{"{", 
         RowBox[{"163.01710438800436`", ",", "32.13339349201961`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "5", "]"}]},
       {"6", 
        RowBox[{"{", 
         RowBox[{"182.9819595191818`", ",", "24.216218226580658`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "6", "]"}]},
       {"7", 
        RowBox[{"{", 
         RowBox[{"181.05409280299497`", ",", "25.469103987191744`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "7", "]"}]},
       {"8", 
        RowBox[{"{", 
         RowBox[{"182.82382136792953`", ",", "35.761190382444084`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "8", "]"}]},
       {"9", 
        RowBox[{"{", 
         RowBox[{"140.43352334759453`", ",", "23.07591964640924`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "9", "]"}]},
       {"10", 
        RowBox[{"{", 
         RowBox[{"99.509585399484`", ",", "29.79309203348466`"}], "}"}], "0", 
        RowBox[{"\[Alpha]", "[", "10", "]"}]},
       {"11", 
        RowBox[{"{", 
         RowBox[{"114.2939391751153`", ",", "25.173014444789846`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "11", "]"}]},
       {"12", 
        RowBox[{"{", 
         RowBox[{"86.8959283356665`", ",", "26.839313619115558`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "12", "]"}]},
       {"13", 
        RowBox[{"{", 
         RowBox[{"122.4293102258105`", ",", "32.12675885151248`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "13", "]"}]},
       {"14", 
        RowBox[{"{", 
         RowBox[{"139.5630563916717`", ",", "34.954592692086614`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "14", "]"}]},
       {"15", 
        RowBox[{"{", 
         RowBox[{"90.09493935899204`", ",", "33.987290558704`"}], "}"}], "0", 
        RowBox[{"\[Alpha]", "[", "15", "]"}]},
       {"16", 
        RowBox[{"{", 
         RowBox[{"112.60543887438226`", ",", "35.31680966588568`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "16", "]"}]},
       {"17", 
        RowBox[{"{", 
         RowBox[{"176.77731572560612`", ",", "37.270979685466614`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "17", "]"}]},
       {"18", 
        RowBox[{"{", 
         RowBox[{"120.25340765674767`", ",", "21.46580478946252`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "18", "]"}]},
       {"19", 
        RowBox[{"{", 
         RowBox[{"109.85136469930796`", ",", "38.329576426424936`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "19", "]"}]},
       {"20", 
        RowBox[{"{", 
         RowBox[{"109.32196882810183`", ",", "24.98242405162837`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "20", "]"}]},
       {"21", 
        RowBox[{"{", 
         RowBox[{"166.29137896365467`", ",", "32.28072057486798`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "21", "]"}]},
       {"22", 
        RowBox[{"{", 
         RowBox[{"147.01202739598193`", ",", "39.291484646097786`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "22", "]"}]},
       {"23", 
        RowBox[{"{", 
         RowBox[{"121.20263261156614`", ",", "30.040530421681176`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "23", "]"}]},
       {"24", 
        RowBox[{"{", 
         RowBox[{"152.3183054179201`", ",", "31.13754166943778`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "24", "]"}]},
       {"25", 
        RowBox[{"{", 
         RowBox[{"119.94332695756904`", ",", "39.097927886047785`"}], "}"}], 
        "0", 
        RowBox[{"\[Alpha]", "[", "25", "]"}]},
       {"26", 
        RowBox[{"{", 
         RowBox[{"260.7316541733218`", ",", "61.67631516174206`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "26", "]"}]},
       {"27", 
        RowBox[{"{", 
         RowBox[{"245.63831362040713`", ",", "66.61563234473417`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "27", "]"}]},
       {"28", 
        RowBox[{"{", 
         RowBox[{"278.39447264818443`", ",", "64.62123172605081`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "28", "]"}]},
       {"29", 
        RowBox[{"{", 
         RowBox[{"287.9647836748334`", ",", "63.92440151814051`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "29", "]"}]},
       {"30", 
        RowBox[{"{", 
         RowBox[{"246.0426212288984`", ",", "72.7066466899835`"}], "}"}], "1", 
        RowBox[{"\[Alpha]", "[", "30", "]"}]},
       {"31", 
        RowBox[{"{", 
         RowBox[{"335.7795904855108`", ",", "68.91680514444951`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "31", "]"}]},
       {"32", 
        RowBox[{"{", 
         RowBox[{"263.0542698934449`", ",", "64.58554449767769`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "32", "]"}]},
       {"33", 
        RowBox[{"{", 
         RowBox[{"282.28399204514994`", ",", "71.69230058241462`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "33", "]"}]},
       {"34", 
        RowBox[{"{", 
         RowBox[{"341.379584113108`", ",", "77.96026612328124`"}], "}"}], "1", 
        RowBox[{"\[Alpha]", "[", "34", "]"}]},
       {"35", 
        RowBox[{"{", 
         RowBox[{"243.66226086835408`", ",", "61.92572907378009`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "35", "]"}]},
       {"36", 
        RowBox[{"{", 
         RowBox[{"215.51647357437358`", ",", "53.295773760374324`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "36", "]"}]},
       {"37", 
        RowBox[{"{", 
         RowBox[{"243.4633555502856`", ",", "57.060858690368974`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "37", "]"}]},
       {"38", 
        RowBox[{"{", 
         RowBox[{"233.41255591237476`", ",", "73.19254479049378`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "38", "]"}]},
       {"39", 
        RowBox[{"{", 
         RowBox[{"291.63285736713146`", ",", "79.25399881874431`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "39", "]"}]},
       {"40", 
        RowBox[{"{", 
         RowBox[{"275.49434795436787`", ",", "71.89741745505361`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "40", "]"}]},
       {"41", 
        RowBox[{"{", 
         RowBox[{"310.40589604741433`", ",", "52.360292962935624`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "41", "]"}]},
       {"42", 
        RowBox[{"{", 
         RowBox[{"308.7409386951758`", ",", "73.6065067193575`"}], "}"}], "1", 
        RowBox[{"\[Alpha]", "[", "42", "]"}]},
       {"43", 
        RowBox[{"{", 
         RowBox[{"285.34896000949436`", ",", "74.14987948060022`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "43", "]"}]},
       {"44", 
        RowBox[{"{", 
         RowBox[{"243.1161296396091`", ",", "65.51214027781438`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "44", "]"}]},
       {"45", 
        RowBox[{"{", 
         RowBox[{"245.72109426145482`", ",", "75.06379300093656`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "45", "]"}]},
       {"46", 
        RowBox[{"{", 
         RowBox[{"336.0540820895002`", ",", "64.14309796438674`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "46", "]"}]},
       {"47", 
        RowBox[{"{", 
         RowBox[{"242.8886967636099`", ",", "65.02278097761393`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "47", "]"}]},
       {"48", 
        RowBox[{"{", 
         RowBox[{"276.20044540853775`", ",", "63.957259105538284`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "48", "]"}]},
       {"49", 
        RowBox[{"{", 
         RowBox[{"244.70863439898693`", ",", "58.99366101840914`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "49", "]"}]},
       {"50", 
        RowBox[{"{", 
         RowBox[{"285.2646016687795`", ",", "74.10085457302408`"}], "}"}], 
        "1", 
        RowBox[{"\[Alpha]", "[", "50", "]"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["Training Set = ", 
   MatrixForm[{{
     "\!\(\*SubscriptBox[\(x\), \(1\)]\)", 
      "\!\(\*SubscriptBox[\(x\), \(2\)]\)", "y"}, {
     178.91448543244994`, 23.372372761369387`, 0}, {
     164.8985256023603, 22.573319644558087`, 0}, {
     138.71557499405588`, 30.644502043943223`, 0}, {
     97.96504939672865, 34.47383581213665, 0}, {
     163.01710438800436`, 32.13339349201961, 0}, {
     182.9819595191818, 24.216218226580658`, 0}, {
     181.05409280299497`, 25.469103987191744`, 0}, {
     182.82382136792953`, 35.761190382444084`, 0}, {
     140.43352334759453`, 23.07591964640924, 0}, {
     99.509585399484, 29.79309203348466, 0}, {
     114.2939391751153, 25.173014444789846`, 0}, {
     86.8959283356665, 26.839313619115558`, 0}, {
     122.4293102258105, 32.12675885151248, 0}, {
     139.5630563916717, 34.954592692086614`, 0}, {
     90.09493935899204, 33.987290558704, 0}, {
     112.60543887438226`, 35.31680966588568, 0}, {
     176.77731572560612`, 37.270979685466614`, 0}, {
     120.25340765674767`, 21.46580478946252, 0}, {
     109.85136469930796`, 38.329576426424936`, 0}, {
     109.32196882810183`, 24.98242405162837, 0}, {
     166.29137896365467`, 32.28072057486798, 0}, {
     147.01202739598193`, 39.291484646097786`, 0}, {
     121.20263261156614`, 30.040530421681176`, 0}, {
     152.3183054179201, 31.13754166943778, 0}, {
     119.94332695756904`, 39.097927886047785`, 0}, {
     260.7316541733218, 61.67631516174206, 1}, {
     245.63831362040713`, 66.61563234473417, 1}, {
     278.39447264818443`, 64.62123172605081, 1}, {
     287.9647836748334, 63.92440151814051, 1}, {
     246.0426212288984, 72.7066466899835, 1}, {
     335.7795904855108, 68.91680514444951, 1}, {
     263.0542698934449, 64.58554449767769, 1}, {
     282.28399204514994`, 71.69230058241462, 1}, {
     341.379584113108, 77.96026612328124, 1}, {
     243.66226086835408`, 61.92572907378009, 1}, {
     215.51647357437358`, 53.295773760374324`, 1}, {
     243.4633555502856, 57.060858690368974`, 1}, {
     233.41255591237476`, 73.19254479049378, 1}, {
     291.63285736713146`, 79.25399881874431, 1}, {
     275.49434795436787`, 71.89741745505361, 1}, {
     310.40589604741433`, 52.360292962935624`, 1}, {
     308.7409386951758, 73.6065067193575, 1}, {
     285.34896000949436`, 74.14987948060022, 1}, {
     243.1161296396091, 65.51214027781438, 1}, {
     245.72109426145482`, 75.06379300093656, 1}, {
     336.0540820895002, 64.14309796438674, 1}, {
     242.8886967636099, 65.02278097761393, 1}, {
     276.20044540853775`, 63.957259105538284`, 1}, {
     244.70863439898693`, 58.99366101840914, 1}, {
     285.2646016687795, 74.10085457302408, 1}}], "  \[Rule]  ", 
   MatrixForm[{{
     "i", "\!\(\*SubscriptBox[OverscriptBox[\(x\), \(-\)], \(i\)]\)", 
      "\!\(\*SubscriptBox[\(y\), \(i\)]\)", 
      "\!\(\*SubscriptBox[\(\[Alpha]\), \(i\)]\)"}, {
     1, {178.91448543244994`, 23.372372761369387`}, 0, 
      $CellContext`\[Alpha][1]}, {
     2, {164.8985256023603, 22.573319644558087`}, 0, 
      $CellContext`\[Alpha][2]}, {
     3, {138.71557499405588`, 30.644502043943223`}, 0, 
      $CellContext`\[Alpha][3]}, {
     4, {97.96504939672865, 34.47383581213665}, 0, 
      $CellContext`\[Alpha][4]}, {
     5, {163.01710438800436`, 32.13339349201961}, 0, 
      $CellContext`\[Alpha][5]}, {
     6, {182.9819595191818, 24.216218226580658`}, 0, 
      $CellContext`\[Alpha][6]}, {
     7, {181.05409280299497`, 25.469103987191744`}, 0, 
      $CellContext`\[Alpha][7]}, {
     8, {182.82382136792953`, 35.761190382444084`}, 0, 
      $CellContext`\[Alpha][8]}, {
     9, {140.43352334759453`, 23.07591964640924}, 0, 
      $CellContext`\[Alpha][9]}, {10, {99.509585399484, 29.79309203348466}, 0, 
      $CellContext`\[Alpha][10]}, {
     11, {114.2939391751153, 25.173014444789846`}, 0, 
      $CellContext`\[Alpha][11]}, {
     12, {86.8959283356665, 26.839313619115558`}, 0, 
      $CellContext`\[Alpha][12]}, {
     13, {122.4293102258105, 32.12675885151248}, 0, 
      $CellContext`\[Alpha][13]}, {
     14, {139.5630563916717, 34.954592692086614`}, 0, 
      $CellContext`\[Alpha][14]}, {
     15, {90.09493935899204, 33.987290558704}, 0, 
      $CellContext`\[Alpha][15]}, {
     16, {112.60543887438226`, 35.31680966588568}, 0, 
      $CellContext`\[Alpha][16]}, {
     17, {176.77731572560612`, 37.270979685466614`}, 0, 
      $CellContext`\[Alpha][17]}, {
     18, {120.25340765674767`, 21.46580478946252}, 0, 
      $CellContext`\[Alpha][18]}, {
     19, {109.85136469930796`, 38.329576426424936`}, 0, 
      $CellContext`\[Alpha][19]}, {
     20, {109.32196882810183`, 24.98242405162837}, 0, 
      $CellContext`\[Alpha][20]}, {
     21, {166.29137896365467`, 32.28072057486798}, 0, 
      $CellContext`\[Alpha][21]}, {
     22, {147.01202739598193`, 39.291484646097786`}, 0, 
      $CellContext`\[Alpha][22]}, {
     23, {121.20263261156614`, 30.040530421681176`}, 0, 
      $CellContext`\[Alpha][23]}, {
     24, {152.3183054179201, 31.13754166943778}, 0, 
      $CellContext`\[Alpha][24]}, {
     25, {119.94332695756904`, 39.097927886047785`}, 0, 
      $CellContext`\[Alpha][25]}, {
     26, {260.7316541733218, 61.67631516174206}, 1, 
      $CellContext`\[Alpha][26]}, {
     27, {245.63831362040713`, 66.61563234473417}, 1, 
      $CellContext`\[Alpha][27]}, {
     28, {278.39447264818443`, 64.62123172605081}, 1, 
      $CellContext`\[Alpha][28]}, {
     29, {287.9647836748334, 63.92440151814051}, 1, 
      $CellContext`\[Alpha][29]}, {
     30, {246.0426212288984, 72.7066466899835}, 1, 
      $CellContext`\[Alpha][30]}, {
     31, {335.7795904855108, 68.91680514444951}, 1, 
      $CellContext`\[Alpha][31]}, {
     32, {263.0542698934449, 64.58554449767769}, 1, 
      $CellContext`\[Alpha][32]}, {
     33, {282.28399204514994`, 71.69230058241462}, 1, 
      $CellContext`\[Alpha][33]}, {
     34, {341.379584113108, 77.96026612328124}, 1, 
      $CellContext`\[Alpha][34]}, {
     35, {243.66226086835408`, 61.92572907378009}, 1, 
      $CellContext`\[Alpha][35]}, {
     36, {215.51647357437358`, 53.295773760374324`}, 1, 
      $CellContext`\[Alpha][36]}, {
     37, {243.4633555502856, 57.060858690368974`}, 1, 
      $CellContext`\[Alpha][37]}, {
     38, {233.41255591237476`, 73.19254479049378}, 1, 
      $CellContext`\[Alpha][38]}, {
     39, {291.63285736713146`, 79.25399881874431}, 1, 
      $CellContext`\[Alpha][39]}, {
     40, {275.49434795436787`, 71.89741745505361}, 1, 
      $CellContext`\[Alpha][40]}, {
     41, {310.40589604741433`, 52.360292962935624`}, 1, 
      $CellContext`\[Alpha][41]}, {
     42, {308.7409386951758, 73.6065067193575}, 1, 
      $CellContext`\[Alpha][42]}, {
     43, {285.34896000949436`, 74.14987948060022}, 1, 
      $CellContext`\[Alpha][43]}, {
     44, {243.1161296396091, 65.51214027781438}, 1, 
      $CellContext`\[Alpha][44]}, {
     45, {245.72109426145482`, 75.06379300093656}, 1, 
      $CellContext`\[Alpha][45]}, {
     46, {336.0540820895002, 64.14309796438674}, 1, 
      $CellContext`\[Alpha][46]}, {
     47, {242.8886967636099, 65.02278097761393}, 1, 
      $CellContext`\[Alpha][47]}, {
     48, {276.20044540853775`, 63.957259105538284`}, 1, 
      $CellContext`\[Alpha][48]}, {
     49, {244.70863439898693`, 58.99366101840914}, 1, 
      $CellContext`\[Alpha][49]}, {
     50, {285.2646016687795, 74.10085457302408}, 1, 
      $CellContext`\[Alpha][50]}}], ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8895112974583654`*^9, 3.889511697986478*^9, 
  3.8895119044236345`*^9, 3.889512465386176*^9, 3.8895163950670743`*^9, 
  3.8895164431895127`*^9, 3.88952287653069*^9, 3.8895498812147636`*^9},
 CellLabel->
  "During evaluation of \
In[2069]:=",ExpressionUUID->"8e04bb31-f414-4ddf-88d9-913dc2add790"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"x", "[", 
  RowBox[{"[", "i", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"y", "[", 
  RowBox[{"[", "i", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Alpha]s", "[", 
  RowBox[{"[", "i", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.884168337261839*^9, 3.8841683506017866`*^9}, {
  3.8895113485991893`*^9, 3.8895113490764236`*^9}},
 CellLabel->
  "In[1806]:=",ExpressionUUID->"b8d3b87b-6b74-4cc8-a2c8-9d4a3193e515"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"233.25623984138247`", ",", "60.566937998477506`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.889511352101014*^9, 3.8895119047206345`*^9, 
  3.889516395450883*^9, 3.8895164497921667`*^9},
 CellLabel->
  "Out[1807]=",ExpressionUUID->"04c65cc9-e2e4-463a-b40d-0b40d4998dd6"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.889511352101014*^9, 3.8895119047206345`*^9, 
  3.889516395450883*^9, 3.8895164497981653`*^9},
 CellLabel->
  "Out[1808]=",ExpressionUUID->"b86db499-b90a-49d3-b38a-48a239c93acb"],

Cell[BoxData[
 RowBox[{"\[Alpha]", "[", "50", "]"}]], "Output",
 CellChangeTimes->{3.889511352101014*^9, 3.8895119047206345`*^9, 
  3.889516395450883*^9, 3.889516449802165*^9},
 CellLabel->
  "Out[1809]=",ExpressionUUID->"40972740-01c1-4926-bdfc-de222ce9d45f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "\[Alpha]s", "]"}]], "Input",
 CellChangeTimes->{
  3.884144986063052*^9, {3.8841682322679205`*^9, 3.88416823351272*^9}},
 CellLabel->
  "In[1810]:=",ExpressionUUID->"efe17b23-261b-42f0-97fd-8779c4e3f2c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]", "[", "1", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "2", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "3", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "4", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "5", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "6", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "7", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "8", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "9", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "10", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "11", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "12", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "13", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "14", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "15", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "16", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "17", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "18", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "19", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "20", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "21", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "22", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "23", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "24", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "25", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "26", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "27", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "28", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "29", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "30", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "31", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "32", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "33", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "34", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "35", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "36", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "37", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "38", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "39", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "40", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "41", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "42", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "43", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "44", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "45", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "46", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "47", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "48", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "49", "]"}], "+", 
  RowBox[{"\[Alpha]", "[", "50", "]"}]}]], "Output",
 CellChangeTimes->{3.8895113819837246`*^9, 3.889511904938633*^9, 
  3.88951639555488*^9, 3.8895164546866436`*^9},
 CellLabel->
  "Out[1810]=",ExpressionUUID->"861a9c75-5a59-4ca0-9d7d-809d889817c6"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"f567a28c-23cf-472b-91bc-f4223631cc7e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "lag", ",", "constraints", ",", "maxval", ",", "\[Alpha]Num", ",", 
     "\[Alpha]NumRounded", ",", "\[Alpha]Values", ",", "wDual", ",", "bDual", 
     ",", "svLabels"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lag", " ", "=", " ", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"Table", "[", "       ", 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "i", "]"}], "         ", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}], "]"}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"Total", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "[", "i", "]"}], " ", 
          RowBox[{"\[Alpha]", "[", "j", "]"}], " ", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", 
          RowBox[{"y", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", 
           RowBox[{"x", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "            ", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "len"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "len"}], "}"}]}], "]"}], "]"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"constraints", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Alpha]", "[", "i", "]"}], "\[GreaterEqual]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"constraints", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "[", "i", "]"}], " ", 
         RowBox[{"y", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}], "]"}], 
     "\[Equal]", "0"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"maxval", ",", "\[Alpha]Num"}], "}"}], "=", 
    RowBox[{"NMaximize", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lag", ",", "constraints"}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], "]"}]}], 
   ";"}], "\n", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"maxval", ",", "\[Alpha]Num"}], "}"}], " ", "=", " ", 
   RowBox[{"NMaximize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lag", ",", "constraints"}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}]}], "]"}]}], ";", 
  "                                                 ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "the", " ", "important", " ", "line", " ", "of", 
    " ", 
    RowBox[{"code", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"\[Alpha]NumRounded", " ", "=", " ", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{
      SuperscriptBox["10", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", "i", "]"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}], "/.", 
        "\[Alpha]Num"}], ")"}]}], "]"}], " ", "1.0", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "3"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"svLabels", " ", "=", " ", 
    RowBox[{"Complement", "[", 
     RowBox[{
      RowBox[{"Range", "[", "len", "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"\[Alpha]NumRounded", ",", "0.0"}], "]"}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Values", " ", "=", " ", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", "[", "i", "]"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}], " ", "/.", 
    "\[Alpha]Num"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wDual", " ", "=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"\[Alpha]Values", " ", "y", " ", "x"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sv1", " ", "=", " ", 
   RowBox[{"svLabels", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bDual", " ", "=", " ", 
    RowBox[{
     RowBox[{"y", "[", 
      RowBox[{"[", "sv1", "]"}], "]"}], "-", " ", 
     RowBox[{"wDual", ".", 
      RowBox[{"x", "[", 
       RowBox[{"[", "sv1", "]"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<For this problem we have the following DUAL PROBLEM\>\"",
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Maximize Q(\[Alpha]) = \>\"", ",", "lag"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Subject to the following constraints: \>\"", ",", 
    RowBox[{"MatrixForm", "[", "constraints", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<The Numerical Analysis Programme comes back with the following \
information:\n\nMax found: \>\"", ",", "maxval", ",", " ", 
     "\"\< \[Alpha]s found: \>\"", ",", 
     RowBox[{"MatrixForm", "[", "\[Alpha]Num", "]"}], ",", "\"\< i.e. \>\"", 
     ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Subscript", "[", 
         RowBox[{"\[Alpha]", ",", "i"}], "]"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}], "]"}], ",", 
     "\"\<=\>\"", ",", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{
         SuperscriptBox["10", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[Alpha]", "[", "i", "]"}], " ", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "len"}], "}"}]}], "]"}], "/.", 
           "\[Alpha]Num"}], ")"}]}], "]"}], " ", "1.0", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}], " ", "]"}], ",", "\"\< to 3 d.p.\>\""}], "]"}],
    ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<As a result we find the non-zero \!\(\*SubscriptBox[\(\[Alpha]\), \
\(i\)]\)s have labels: \>\"", ",", "svLabels"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Using the \!\(\*SubscriptBox[\(\[Alpha]\), \(i\)]\)s we can then find \
w and b:\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<\!\(\*OverscriptBox[\(w\), \(-\)]\) = \[CapitalSigma] \
\!\(\*SubscriptBox[\(\[Alpha]\), \(i\)]\) \!\(\*SubscriptBox[\(y\), \(i\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(x\), \(-\)], \(i\)]\) = \>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Times", "@@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\<\[Alpha]\>\"", ",", "#"}], "]"}], ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\< y\>\"", ",", "#"}], "]"}], ",", 
           RowBox[{"Subscript", "[", 
            RowBox[{"\"\< x\>\"", ",", "#"}], "]"}]}], "}"}]}], "&"}], "/@", 
       "svLabels"}], "]"}], ",", "\"\< = \>\"", ",", 
     RowBox[{"MatrixForm", "[", "wDual", "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Since \>\"", ",", 
    RowBox[{"Subscript", "[", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "sv1"}], "]"}], ",", 
    "\"\< is non-zero \nwe can find  b = y[[\>\"", ",", "sv1", ",", 
    "\"\<]] - \!\(\*OverscriptBox[\(w\), \(-\)]\). x[[\>\"", ",", "sv1", ",", 
    "\"\<]] = \>\"", ",", 
    RowBox[{"y", "[", 
     RowBox[{"[", "sv1", "]"}], "]"}], ",", "\"\< - \>\"", ",", 
    RowBox[{"MatrixForm", "[", "wDual", "]"}], ",", "\"\<.\>\"", ",", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"x", "[", 
      RowBox[{"[", "sv1", "]"}], "]"}], "]"}], ",", "\"\< = \>\"", ",", 
    "bDual"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8841444897523413`*^9, 3.884144524455551*^9}, {
   3.884144625251348*^9, 3.88414463153589*^9}, {3.88414466339388*^9, 
   3.884144679017273*^9}, {3.8841450239255714`*^9, 3.884145034499688*^9}, {
   3.8841683918915815`*^9, 3.8841684089003983`*^9}, {3.8841684445865736`*^9, 
   3.88416846957629*^9}, {3.884168516914505*^9, 3.8841685506396904`*^9}, {
   3.8841687118638763`*^9, 3.88416872934013*^9}, {3.8841687596630325`*^9, 
   3.884168795120415*^9}, {3.8841689523748646`*^9, 3.8841690048024054`*^9}, 
   3.8841690782912865`*^9, {3.884169204397375*^9, 3.8841692742593474`*^9}, {
   3.8841694710083923`*^9, 3.8841694864044223`*^9}, {3.8841695684197364`*^9, 
   3.88416957412994*^9}, {3.884169730604642*^9, 3.8841699609103737`*^9}, {
   3.8841700681126986`*^9, 3.884170070164343*^9}, {3.88417011124835*^9, 
   3.8841702097305913`*^9}, {3.88417038786744*^9, 3.8841703979228344`*^9}, 
   3.8895246016218505`*^9, 3.889524656512765*^9, {3.889524735961115*^9, 
   3.8895247362046747`*^9}},
 CellLabel->
  "In[2083]:=",ExpressionUUID->"6ee2cb86-3df5-4156-99b8-0def0df81d14"],

Cell[BoxData[
 TemplateBox[{
  "NMaximize", "dinfeas", 
   "\"The dual is infeasible, which implies that the primal optimization is \
either unbounded or infeasible.\"", 2, 2087, 209, 21735998353566959007, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8895247431004086`*^9, 3.8895498903788295`*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"bada0012-2132-4604-ae50-2e85c0401fd6"],

Cell[BoxData[
 TemplateBox[{
  "NMaximize", "dinfeas", 
   "\"The dual is infeasible, which implies that the primal optimization is \
either unbounded or infeasible.\"", 2, 2088, 210, 21735998353566959007, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8895247431004086`*^9, 3.889549890505829*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"44163ea6-aab5-4c57-b8f4-24fe32177df6"],

Cell[CellGroupData[{

Cell[BoxData["\<\"For this problem we have the following DUAL PROBLEM\"\>"], \
"Print",
 CellChangeTimes->{3.88952474323641*^9, 3.8895498905188274`*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"8fdcac2c-a12a-477c-a099-573a91c5d27e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"\<\"Maximize Q(\[Alpha]) = \"\>", "\[InvisibleSpace]", 
    RowBox[{"\[Alpha]", "[", "1", "]"}]}], "+", 
   RowBox[{"\[Alpha]", "[", "2", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "3", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "4", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "5", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "6", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "7", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "8", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "9", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "10", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "11", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "12", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "13", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "14", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "15", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "16", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "17", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "18", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "19", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "20", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "21", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "22", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "23", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "24", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "25", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "26", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "27", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "28", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "29", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "30", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "31", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "32", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "33", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "34", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "35", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "36", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "37", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "38", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "39", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "40", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "41", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "42", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "43", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "44", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "45", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "46", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "47", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "48", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "49", "]"}], "+", 
   RowBox[{"\[Alpha]", "[", "50", "]"}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"71784.9633398872`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "26", "]"}], "2"]}], "-", 
      RowBox[{"136308.58114757302`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}]}], "-", 
      RowBox[{"64775.82359096628`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "27", "]"}], "2"]}], "-", 
      RowBox[{"153143.70164069315`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}]}], "-", 
      RowBox[{"145378.2659937381`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}]}], "-", 
      RowBox[{"81679.38599085266`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "28", "]"}], "2"]}], "-", 
      RowBox[{"158048.31185152134`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}]}], "-", 
      RowBox[{"149987.0965466821`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}]}], "-", 
      RowBox[{"168597.35531171327`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}]}], "-", 
      RowBox[{"87010.04574634606`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "29", "]"}], "2"]}], "-", 
      RowBox[{"137270.7553715112`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}]}], "-", 
      RowBox[{"130561.78760465923`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}]}], "-", 
      RowBox[{"146390.5976995474`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}]}], "-", 
      RowBox[{"150998.6781460336`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}]}], "-", 
      RowBox[{"65823.22793408926`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "30", "]"}], "2"]}], "-", 
      RowBox[{"183597.8053179145`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}]}], "-", 
      RowBox[{"174142.53781777623`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}]}], "-", 
      RowBox[{"195865.34170859135`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}]}], "-", 
      RowBox[{"202196.32531997105`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}]}], "-", 
      RowBox[{"175253.60080172218`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}]}], "-", 
      RowBox[{"117497.45941793537`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "31", "]"}], "2"]}], "-", 
      RowBox[{"145139.94664800962`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}]}], "-", 
      RowBox[{"137837.22826863`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}]}], "-", 
      RowBox[{"154812.90436395272`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}]}], "-", 
      RowBox[{"159757.91640668878`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}]}], "-", 
      RowBox[{"138836.72091022026`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}]}], "-", 
      RowBox[{"185558.56881116115`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}]}], "-", 
      RowBox[{"73368.84146723486`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "32", "]"}], "2"]}], "-", 
      RowBox[{"156044.1782359442`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}]}], "-", 
      RowBox[{"148231.1834111067`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}]}], "-", 
      RowBox[{"166438.29574268742`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}]}], "-", 
      RowBox[{"171741.472224679`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}]}], "-", 
      RowBox[{"149332.80020516782`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}]}], "-", 
      RowBox[{"199452.01511826244`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}]}], "-", 
      RowBox[{"157772.5913989007`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}]}], "-", 
      RowBox[{"84824.03812774556`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "33", "]"}], "2"]}], "-", 
      RowBox[{"187633.53122064815`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}]}], "-", 
      RowBox[{"178098.55554309185`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}]}], "-", 
      RowBox[{"200152.15542920475`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}]}], "-", 
      RowBox[{"206577.72288852293`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}]}], "-", 
      RowBox[{"179324.3144682056`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}]}], "-", 
      RowBox[{"240002.138846082`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}]}], "-", 
      RowBox[{"189672.92698431492`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}]}], "-", 
      RowBox[{"203910.285277113`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}]}], "-", 
      RowBox[{"122617.82354325143`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "34", "]"}], "2"]}], "-", 
      RowBox[{"134699.63023758505`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"127956.01690659353`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"143671.88701398234`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"148249.43082058465`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"128907.4269267929`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"172169.07515031064`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"136191.8101279135`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"146443.10738241667`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"176018.13519553692`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}]}], "-", 
      RowBox[{"63206.09329279705`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "35", "]"}], "2"]}], "-", 
      RowBox[{"118958.10719176232`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"112978.86959315077`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"126885.26710784488`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"130936.11026457118`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"113802.39013822464`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"152078.0153899019`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"120269.33034771113`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"129315.49428853672`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"155455.75364789652`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"111627.22170433834`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}]}], "-", 
      RowBox[{"49287.789882650664`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "36", "]"}], "2"]}], "-", 
      RowBox[{"133995.81385440074`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"127210.14653906038`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"142932.39089899394`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"147512.90751136016`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"128102.13173080653`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"171364.9558092847`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"135458.76373622217`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"145633.26430832592`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"175123.7975865247`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"125712.73385591114`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"111022.93289623209`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}]}], "-", 
      RowBox[{"62530.34709028703`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "37", "]"}], "2"]}], "-", 
      RowBox[{"130744.57653568969`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"124421.6685325675`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"139421.11562043257`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"143786.77158323795`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"125502.04315768143`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"166838.7375715729`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"132254.69967591466`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"142271.93999583766`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"170776.7830685023`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"122812.66557517395`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"108410.20849263307`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"122007.66709094855`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}]}], "-", 
      RowBox[{"59838.56987045591`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "38", "]"}], "2"]}], "-", 
      RowBox[{"161852.0238431956`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"153831.51705424473`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"172620.93311297597`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"178092.5142532144`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"155032.8103079306`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"206772.58762472926`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"163667.86207795364`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"176010.37738959887`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"211472.33280190444`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"151935.56605687345`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"134151.17637766243`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"151048.4305411254`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"147743.14496891573`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}]}], "-", 
      RowBox[{"91330.91982487917`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "39", "]"}], "2"]}], "-", 
      RowBox[{"152528.9296716325`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"144922.91794237262`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"162684.4067803586`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"167857.33938766608`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"146021.54326653143`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"194920.6392926591`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"154226.99683043675`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"165844.27117944317`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"199306.57545709322`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"143159.7513468808`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"126410.79771087306`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"142350.61353142728`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"139132.3896856839`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"172082.72344096127`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}]}], "-", 
      RowBox[{"81066.37439150855`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "40", "]"}], "2"]}], "-", 
      RowBox[{"168324.06534467533`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"159471.18973679948`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"179597.74472361768`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"185466.13419531332`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"160360.04325890192`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"215672.9375330435`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"170070.6287728845`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"182752.89070459604`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"220096.51614521275`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"157753.30346805355`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"139376.33284122372`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"157120.36862408204`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"152570.03330926187`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"189348.64200909165`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"178559.2795479976`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}]}], "-", 
      RowBox[{"99093.42058016264`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "41", "]"}], "2"]}], "-", 
      RowBox[{"170076.6275267906`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"161483.89503292282`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"181416.62788041128`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"187223.53902559445`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"162630.22423071982`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"217483.26248423985`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"171939.07705943595`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"184859.28897437366`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"222272.4722053918`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"159573.3034765095`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"140923.348170065`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"158734.31081815495`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"154902.9183111103`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"191745.2242689447`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"180697.0026673136`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"199378.13195599942`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}]}], "-", 
      RowBox[{"100738.88505780514`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "42", "]"}], "2"]}], "-", 
      RowBox[{"157945.5953919264`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"150064.3568799104`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"168462.45957385132`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"173820.8764188247`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"151198.3903503539`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"201849.0594662067`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"159702.54536168618`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"171730.83801056983`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"206386.1072649318`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"148241.1161598321`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"130898.55360103653`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"147406.14220329234`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"144062.4969156953`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"178187.6140301474`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"167886.42103306254`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"184913.01806143098`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"187113.63874250365`", " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}]}], "-", 
      RowBox[{"86922.23360548755`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "43", "]"}], "2"]}], "-", 
      RowBox[{"134857.2360956915`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"128165.53749891478`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"143831.3238020976`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"148393.41607792908`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"129160.1956732756`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"172296.64371386459`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"136367.7464654367`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"146649.01531565888`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"176204.4542358447`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"126590.22570287687`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"111774.1022715662`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"125856.09537870694`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"123082.7149286209`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"152185.50129405697`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"143374.54662036346`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"157789.82984387502`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"159764.04374085882`", " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"148461.30412062397`", " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}]}], "-", 
      RowBox[{"63397.293014723255`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "44", "]"}], "2"]}], "-", 
      RowBox[{"137393.85105285875`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"130717.87450459297`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"146516.21843440473`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"151114.85959321927`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"131830.99760050146`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"175362.5704008235`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"138972.0379827836`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"149489.2548570107`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"179472.31649073836`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"129042.67495883667`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"113915.05329487694`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"128214.57324714273`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"125696.99736903427`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"155218.901193346`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"146183.33100668265`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"160407.27726883246`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"162778.68976678248`", " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"151364.45980855447`", " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"129312.70228903327`", " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}]}], "-", 
      RowBox[{"66013.42918473422`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "45", "]"}], "2"]}], "-", 
      RowBox[{"183152.09328078933`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"173641.3820823331`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"195401.209923519`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"201744.10040168103`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"174694.5135865394`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"234521.27889753916`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"185086.35623312613`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"198922.50818968544`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"239445.23154100226`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"171711.61104492523`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"151687.49347920323`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"170953.82944157842`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"166268.0775921133`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"206176.01839989919`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"194385.44662771278`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"215343.43974469643`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"216950.004255948`", " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"201297.77162951147`", " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"171804.63883777455`", " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"174780.80202019657`", " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}]}], "-", 
      RowBox[{"117046.68310548544`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "46", "]"}], "2"]}], "-", 
      RowBox[{"134678.2744388932`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"127988.60708421696`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"143641.4456894732`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"148199.86675926848`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"128977.11996385838`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"172076.45891885756`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"136184.88101342833`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"146450.4474072546`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"175972.8711920531`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"126418.78422246546`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"111623.90964364371`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"125689.50571264539`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"122904.9086458528`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"151975.28013228314`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"143178.86633682583`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"157597.3908398994`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"159551.56800436976`", " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"148258.93678508213`", " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"126619.88287807305`", " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"129127.4658482835`", " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"171589.00130194763`", " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}]}], "-", 
      RowBox[{"63222.881061587585`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "47", "]"}], "2"]}], "-", 
      RowBox[{"151917.69416850136`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"144211.92977941997`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"162051.34841185118`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"167248.86204804876`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"145214.39882790396`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"194300.4048290879`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"153572.84183019484`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"165104.41475758434`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"198550.63625161047`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"142520.44976152366`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"125868.79521148349`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"141788.286735381`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"138299.69291740493`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"171235.98727633344`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"161380.046739446`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"178166.13513920893`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"179964.1104111222`", " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"167111.86581214113`", " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"142677.52044553278`", " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"145338.300279385`", " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"193841.40778163495`", " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"142489.29016311246`", " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}]}], "-", 
      RowBox[{"80377.2170361676`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "48", "]"}], "2"]}], "-", 
      RowBox[{"134883.59733371774`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"128079.43263038424`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"143875.54853000407`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"148477.2068840681`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"128995.9702269701`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"172467.63937584765`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"136363.57775446563`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"146613.442968504`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"176275.38670518916`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"126558.96916192213`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"111765.70949960733`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"125887.62843580876`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"122871.92797067905`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"152081.12362570336`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"143314.6750919904`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"158095.85661007336`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"159787.7815946177`", " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"148403.45437145783`", " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"126714.83416123134`", " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"129116.72275759728`", " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"172038.74338061656`", " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"126545.78639088047`", " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"142723.4133593078`", " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}]}], "-", 
      RowBox[{"63362.567789772016`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "49", "]"}], "2"]}], "-", 
      RowBox[{"157895.5582611897`", " ", 
       RowBox[{"\[Alpha]", "[", "26", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"150016.3819483667`", " ", 
       RowBox[{"\[Alpha]", "[", "27", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"168409.1536824721`", " ", 
       RowBox[{"\[Alpha]", "[", "28", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"173766.0241804019`", " ", 
       RowBox[{"\[Alpha]", "[", "29", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"151149.74998254163`", " ", 
       RowBox[{"\[Alpha]", "[", "30", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"201785.6505680029`", " ", 
       RowBox[{"\[Alpha]", "[", "31", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"159651.83111753434`", " ", 
       RowBox[{"\[Alpha]", "[", "32", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"171676.1825753913`", " ", 
       RowBox[{"\[Alpha]", "[", "33", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"206320.8668447098`", " ", 
       RowBox[{"\[Alpha]", "[", "34", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"148193.9344654999`", " ", 
       RowBox[{"\[Alpha]", "[", "35", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"130856.96673605603`", " ", 
       RowBox[{"\[Alpha]", "[", "36", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"147359.47106724713`", " ", 
       RowBox[{"\[Alpha]", "[", "37", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"144015.9398083705`", " ", 
       RowBox[{"\[Alpha]", "[", "38", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"178130.63986232228`", " ", 
       RowBox[{"\[Alpha]", "[", "39", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"167832.89101243165`", " ", 
       RowBox[{"\[Alpha]", "[", "40", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"184855.5134917073`", " ", 
       RowBox[{"\[Alpha]", "[", "41", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"187054.33189152766`", " ", 
       RowBox[{"\[Alpha]", "[", "42", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"173789.05369941625`", " ", 
       RowBox[{"\[Alpha]", "[", "43", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"148413.86292078468`", " ", 
       RowBox[{"\[Alpha]", "[", "44", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"151315.64256994502`", " ", 
       RowBox[{"\[Alpha]", "[", "45", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"201234.78448110173`", " ", 
       RowBox[{"\[Alpha]", "[", "46", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"148211.58193855183`", " ", 
       RowBox[{"\[Alpha]", "[", "47", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"167058.99519214942`", " ", 
       RowBox[{"\[Alpha]", "[", "48", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"148356.38362518683`", " ", 
       RowBox[{"\[Alpha]", "[", "49", "]"}], " ", 
       RowBox[{"\[Alpha]", "[", "50", "]"}]}], "-", 
      RowBox[{"86866.8296136999`", " ", 
       SuperscriptBox[
        RowBox[{"\[Alpha]", "[", "50", "]"}], "2"]}]}], ")"}]}]}],
  SequenceForm[
  "Maximize Q(\[Alpha]) = ", $CellContext`\[Alpha][1] + $CellContext`\[Alpha][
    2] + $CellContext`\[Alpha][3] + $CellContext`\[Alpha][
    4] + $CellContext`\[Alpha][5] + $CellContext`\[Alpha][
    6] + $CellContext`\[Alpha][7] + $CellContext`\[Alpha][
    8] + $CellContext`\[Alpha][9] + $CellContext`\[Alpha][
    10] + $CellContext`\[Alpha][11] + $CellContext`\[Alpha][
    12] + $CellContext`\[Alpha][13] + $CellContext`\[Alpha][
    14] + $CellContext`\[Alpha][15] + $CellContext`\[Alpha][
    16] + $CellContext`\[Alpha][17] + $CellContext`\[Alpha][
    18] + $CellContext`\[Alpha][19] + $CellContext`\[Alpha][
    20] + $CellContext`\[Alpha][21] + $CellContext`\[Alpha][
    22] + $CellContext`\[Alpha][23] + $CellContext`\[Alpha][
    24] + $CellContext`\[Alpha][25] + $CellContext`\[Alpha][
    26] + $CellContext`\[Alpha][27] + $CellContext`\[Alpha][
    28] + $CellContext`\[Alpha][29] + $CellContext`\[Alpha][
    30] + $CellContext`\[Alpha][31] + $CellContext`\[Alpha][
    32] + $CellContext`\[Alpha][33] + $CellContext`\[Alpha][
    34] + $CellContext`\[Alpha][35] + $CellContext`\[Alpha][
    36] + $CellContext`\[Alpha][37] + $CellContext`\[Alpha][
    38] + $CellContext`\[Alpha][39] + $CellContext`\[Alpha][
    40] + $CellContext`\[Alpha][41] + $CellContext`\[Alpha][
    42] + $CellContext`\[Alpha][43] + $CellContext`\[Alpha][
    44] + $CellContext`\[Alpha][45] + $CellContext`\[Alpha][
    46] + $CellContext`\[Alpha][47] + $CellContext`\[Alpha][
    48] + $CellContext`\[Alpha][49] + $CellContext`\[Alpha][50] + 
   Rational[1, 2] (0. - 71784.9633398872 $CellContext`\[Alpha][26]^2 - 
     136308.58114757302` $CellContext`\[Alpha][26] $CellContext`\[Alpha][27] - 
     64775.82359096628 $CellContext`\[Alpha][27]^2 - 
     153143.70164069315` $CellContext`\[Alpha][26] $CellContext`\[Alpha][28] - 
     145378.2659937381 $CellContext`\[Alpha][27] $CellContext`\[Alpha][28] - 
     81679.38599085266 $CellContext`\[Alpha][28]^2 - 
     158048.31185152134` $CellContext`\[Alpha][26] $CellContext`\[Alpha][29] - 
     149987.0965466821 $CellContext`\[Alpha][27] $CellContext`\[Alpha][29] - 
     168597.35531171327` $CellContext`\[Alpha][28] $CellContext`\[Alpha][29] - 
     87010.04574634606 $CellContext`\[Alpha][29]^2 - 
     137270.7553715112 $CellContext`\[Alpha][26] $CellContext`\[Alpha][30] - 
     130561.78760465923` $CellContext`\[Alpha][27] $CellContext`\[Alpha][30] - 
     146390.5976995474 $CellContext`\[Alpha][28] $CellContext`\[Alpha][30] - 
     150998.6781460336 $CellContext`\[Alpha][29] $CellContext`\[Alpha][30] - 
     65823.22793408926 $CellContext`\[Alpha][30]^2 - 
     183597.8053179145 $CellContext`\[Alpha][26] $CellContext`\[Alpha][31] - 
     174142.53781777623` $CellContext`\[Alpha][27] $CellContext`\[Alpha][31] - 
     195865.34170859135` $CellContext`\[Alpha][28] $CellContext`\[Alpha][31] - 
     202196.32531997105` $CellContext`\[Alpha][29] $CellContext`\[Alpha][31] - 
     175253.60080172218` $CellContext`\[Alpha][30] $CellContext`\[Alpha][31] - 
     117497.45941793537` $CellContext`\[Alpha][31]^2 - 
     145139.94664800962` $CellContext`\[Alpha][26] $CellContext`\[Alpha][32] - 
     137837.22826863 $CellContext`\[Alpha][27] $CellContext`\[Alpha][32] - 
     154812.90436395272` $CellContext`\[Alpha][28] $CellContext`\[Alpha][32] - 
     159757.91640668878` $CellContext`\[Alpha][29] $CellContext`\[Alpha][32] - 
     138836.72091022026` $CellContext`\[Alpha][30] $CellContext`\[Alpha][32] - 
     185558.56881116115` $CellContext`\[Alpha][31] $CellContext`\[Alpha][32] - 
     73368.84146723486 $CellContext`\[Alpha][32]^2 - 
     156044.1782359442 $CellContext`\[Alpha][26] $CellContext`\[Alpha][33] - 
     148231.1834111067 $CellContext`\[Alpha][27] $CellContext`\[Alpha][33] - 
     166438.29574268742` $CellContext`\[Alpha][28] $CellContext`\[Alpha][33] - 
     171741.472224679 $CellContext`\[Alpha][29] $CellContext`\[Alpha][33] - 
     149332.80020516782` $CellContext`\[Alpha][30] $CellContext`\[Alpha][33] - 
     199452.01511826244` $CellContext`\[Alpha][31] $CellContext`\[Alpha][33] - 
     157772.5913989007 $CellContext`\[Alpha][32] $CellContext`\[Alpha][33] - 
     84824.03812774556 $CellContext`\[Alpha][33]^2 - 
     187633.53122064815` $CellContext`\[Alpha][26] $CellContext`\[Alpha][34] - 
     178098.55554309185` $CellContext`\[Alpha][27] $CellContext`\[Alpha][34] - 
     200152.15542920475` $CellContext`\[Alpha][28] $CellContext`\[Alpha][34] - 
     206577.72288852293` $CellContext`\[Alpha][29] $CellContext`\[Alpha][34] - 
     179324.3144682056 $CellContext`\[Alpha][30] $CellContext`\[Alpha][34] - 
     240002.138846082 $CellContext`\[Alpha][31] $CellContext`\[Alpha][34] - 
     189672.92698431492` $CellContext`\[Alpha][32] $CellContext`\[Alpha][34] - 
     203910.285277113 $CellContext`\[Alpha][33] $CellContext`\[Alpha][34] - 
     122617.82354325143` $CellContext`\[Alpha][34]^2 - 
     134699.63023758505` $CellContext`\[Alpha][26] $CellContext`\[Alpha][35] - 
     127956.01690659353` $CellContext`\[Alpha][27] $CellContext`\[Alpha][35] - 
     143671.88701398234` $CellContext`\[Alpha][28] $CellContext`\[Alpha][35] - 
     148249.43082058465` $CellContext`\[Alpha][29] $CellContext`\[Alpha][35] - 
     128907.4269267929 $CellContext`\[Alpha][30] $CellContext`\[Alpha][35] - 
     172169.07515031064` $CellContext`\[Alpha][31] $CellContext`\[Alpha][35] - 
     136191.8101279135 $CellContext`\[Alpha][32] $CellContext`\[Alpha][35] - 
     146443.10738241667` $CellContext`\[Alpha][33] $CellContext`\[Alpha][35] - 
     176018.13519553692` $CellContext`\[Alpha][34] $CellContext`\[Alpha][35] - 
     63206.09329279705 $CellContext`\[Alpha][35]^2 - 
     118958.10719176232` $CellContext`\[Alpha][26] $CellContext`\[Alpha][36] - 
     112978.86959315077` $CellContext`\[Alpha][27] $CellContext`\[Alpha][36] - 
     126885.26710784488` $CellContext`\[Alpha][28] $CellContext`\[Alpha][36] - 
     130936.11026457118` $CellContext`\[Alpha][29] $CellContext`\[Alpha][36] - 
     113802.39013822464` $CellContext`\[Alpha][30] $CellContext`\[Alpha][36] - 
     152078.0153899019 $CellContext`\[Alpha][31] $CellContext`\[Alpha][36] - 
     120269.33034771113` $CellContext`\[Alpha][32] $CellContext`\[Alpha][36] - 
     129315.49428853672` $CellContext`\[Alpha][33] $CellContext`\[Alpha][36] - 
     155455.75364789652` $CellContext`\[Alpha][34] $CellContext`\[Alpha][36] - 
     111627.22170433834` $CellContext`\[Alpha][35] $CellContext`\[Alpha][36] - 
     49287.789882650664` $CellContext`\[Alpha][36]^2 - 
     133995.81385440074` $CellContext`\[Alpha][26] $CellContext`\[Alpha][37] - 
     127210.14653906038` $CellContext`\[Alpha][27] $CellContext`\[Alpha][37] - 
     142932.39089899394` $CellContext`\[Alpha][28] $CellContext`\[Alpha][37] - 
     147512.90751136016` $CellContext`\[Alpha][29] $CellContext`\[Alpha][37] - 
     128102.13173080653` $CellContext`\[Alpha][30] $CellContext`\[Alpha][37] - 
     171364.9558092847 $CellContext`\[Alpha][31] $CellContext`\[Alpha][37] - 
     135458.76373622217` $CellContext`\[Alpha][32] $CellContext`\[Alpha][37] - 
     145633.26430832592` $CellContext`\[Alpha][33] $CellContext`\[Alpha][37] - 
     175123.7975865247 $CellContext`\[Alpha][34] $CellContext`\[Alpha][37] - 
     125712.73385591114` $CellContext`\[Alpha][35] $CellContext`\[Alpha][37] - 
     111022.93289623209` $CellContext`\[Alpha][36] $CellContext`\[Alpha][37] - 
     62530.34709028703 $CellContext`\[Alpha][37]^2 - 
     130744.57653568969` $CellContext`\[Alpha][26] $CellContext`\[Alpha][38] - 
     124421.6685325675 $CellContext`\[Alpha][27] $CellContext`\[Alpha][38] - 
     139421.11562043257` $CellContext`\[Alpha][28] $CellContext`\[Alpha][38] - 
     143786.77158323795` $CellContext`\[Alpha][29] $CellContext`\[Alpha][38] - 
     125502.04315768143` $CellContext`\[Alpha][30] $CellContext`\[Alpha][38] - 
     166838.7375715729 $CellContext`\[Alpha][31] $CellContext`\[Alpha][38] - 
     132254.69967591466` $CellContext`\[Alpha][32] $CellContext`\[Alpha][38] - 
     142271.93999583766` $CellContext`\[Alpha][33] $CellContext`\[Alpha][38] - 
     170776.7830685023 $CellContext`\[Alpha][34] $CellContext`\[Alpha][38] - 
     122812.66557517395` $CellContext`\[Alpha][35] $CellContext`\[Alpha][38] - 
     108410.20849263307` $CellContext`\[Alpha][36] $CellContext`\[Alpha][38] - 
     122007.66709094855` $CellContext`\[Alpha][37] $CellContext`\[Alpha][38] - 
     59838.56987045591 $CellContext`\[Alpha][38]^2 - 
     161852.0238431956 $CellContext`\[Alpha][26] $CellContext`\[Alpha][39] - 
     153831.51705424473` $CellContext`\[Alpha][27] $CellContext`\[Alpha][39] - 
     172620.93311297597` $CellContext`\[Alpha][28] $CellContext`\[Alpha][39] - 
     178092.5142532144 $CellContext`\[Alpha][29] $CellContext`\[Alpha][39] - 
     155032.8103079306 $CellContext`\[Alpha][30] $CellContext`\[Alpha][39] - 
     206772.58762472926` $CellContext`\[Alpha][31] $CellContext`\[Alpha][39] - 
     163667.86207795364` $CellContext`\[Alpha][32] $CellContext`\[Alpha][39] - 
     176010.37738959887` $CellContext`\[Alpha][33] $CellContext`\[Alpha][39] - 
     211472.33280190444` $CellContext`\[Alpha][34] $CellContext`\[Alpha][39] - 
     151935.56605687345` $CellContext`\[Alpha][35] $CellContext`\[Alpha][39] - 
     134151.17637766243` $CellContext`\[Alpha][36] $CellContext`\[Alpha][39] - 
     151048.4305411254 $CellContext`\[Alpha][37] $CellContext`\[Alpha][39] - 
     147743.14496891573` $CellContext`\[Alpha][38] $CellContext`\[Alpha][39] - 
     91330.91982487917 $CellContext`\[Alpha][39]^2 - 
     152528.9296716325 $CellContext`\[Alpha][26] $CellContext`\[Alpha][40] - 
     144922.91794237262` $CellContext`\[Alpha][27] $CellContext`\[Alpha][40] - 
     162684.4067803586 $CellContext`\[Alpha][28] $CellContext`\[Alpha][40] - 
     167857.33938766608` $CellContext`\[Alpha][29] $CellContext`\[Alpha][40] - 
     146021.54326653143` $CellContext`\[Alpha][30] $CellContext`\[Alpha][40] - 
     194920.6392926591 $CellContext`\[Alpha][31] $CellContext`\[Alpha][40] - 
     154226.99683043675` $CellContext`\[Alpha][32] $CellContext`\[Alpha][40] - 
     165844.27117944317` $CellContext`\[Alpha][33] $CellContext`\[Alpha][40] - 
     199306.57545709322` $CellContext`\[Alpha][34] $CellContext`\[Alpha][40] - 
     143159.7513468808 $CellContext`\[Alpha][35] $CellContext`\[Alpha][40] - 
     126410.79771087306` $CellContext`\[Alpha][36] $CellContext`\[Alpha][40] - 
     142350.61353142728` $CellContext`\[Alpha][37] $CellContext`\[Alpha][40] - 
     139132.3896856839 $CellContext`\[Alpha][38] $CellContext`\[Alpha][40] - 
     172082.72344096127` $CellContext`\[Alpha][39] $CellContext`\[Alpha][40] - 
     81066.37439150855 $CellContext`\[Alpha][40]^2 - 
     168324.06534467533` $CellContext`\[Alpha][26] $CellContext`\[Alpha][41] - 
     159471.18973679948` $CellContext`\[Alpha][27] $CellContext`\[Alpha][41] - 
     179597.74472361768` $CellContext`\[Alpha][28] $CellContext`\[Alpha][41] - 
     185466.13419531332` $CellContext`\[Alpha][29] $CellContext`\[Alpha][41] - 
     160360.04325890192` $CellContext`\[Alpha][30] $CellContext`\[Alpha][41] - 
     215672.9375330435 $CellContext`\[Alpha][31] $CellContext`\[Alpha][41] - 
     170070.6287728845 $CellContext`\[Alpha][32] $CellContext`\[Alpha][41] - 
     182752.89070459604` $CellContext`\[Alpha][33] $CellContext`\[Alpha][41] - 
     220096.51614521275` $CellContext`\[Alpha][34] $CellContext`\[Alpha][41] - 
     157753.30346805355` $CellContext`\[Alpha][35] $CellContext`\[Alpha][41] - 
     139376.33284122372` $CellContext`\[Alpha][36] $CellContext`\[Alpha][41] - 
     157120.36862408204` $CellContext`\[Alpha][37] $CellContext`\[Alpha][41] - 
     152570.03330926187` $CellContext`\[Alpha][38] $CellContext`\[Alpha][41] - 
     189348.64200909165` $CellContext`\[Alpha][39] $CellContext`\[Alpha][41] - 
     178559.2795479976 $CellContext`\[Alpha][40] $CellContext`\[Alpha][41] - 
     99093.42058016264 $CellContext`\[Alpha][41]^2 - 
     170076.6275267906 $CellContext`\[Alpha][26] $CellContext`\[Alpha][42] - 
     161483.89503292282` $CellContext`\[Alpha][27] $CellContext`\[Alpha][42] - 
     181416.62788041128` $CellContext`\[Alpha][28] $CellContext`\[Alpha][42] - 
     187223.53902559445` $CellContext`\[Alpha][29] $CellContext`\[Alpha][42] - 
     162630.22423071982` $CellContext`\[Alpha][30] $CellContext`\[Alpha][42] - 
     217483.26248423985` $CellContext`\[Alpha][31] $CellContext`\[Alpha][42] - 
     171939.07705943595` $CellContext`\[Alpha][32] $CellContext`\[Alpha][42] - 
     184859.28897437366` $CellContext`\[Alpha][33] $CellContext`\[Alpha][42] - 
     222272.4722053918 $CellContext`\[Alpha][34] $CellContext`\[Alpha][42] - 
     159573.3034765095 $CellContext`\[Alpha][35] $CellContext`\[Alpha][42] - 
     140923.348170065 $CellContext`\[Alpha][36] $CellContext`\[Alpha][42] - 
     158734.31081815495` $CellContext`\[Alpha][37] $CellContext`\[Alpha][42] - 
     154902.9183111103 $CellContext`\[Alpha][38] $CellContext`\[Alpha][42] - 
     191745.2242689447 $CellContext`\[Alpha][39] $CellContext`\[Alpha][42] - 
     180697.0026673136 $CellContext`\[Alpha][40] $CellContext`\[Alpha][42] - 
     199378.13195599942` $CellContext`\[Alpha][41] $CellContext`\[Alpha][42] - 
     100738.88505780514` $CellContext`\[Alpha][42]^2 - 
     157945.5953919264 $CellContext`\[Alpha][26] $CellContext`\[Alpha][43] - 
     150064.3568799104 $CellContext`\[Alpha][27] $CellContext`\[Alpha][43] - 
     168462.45957385132` $CellContext`\[Alpha][28] $CellContext`\[Alpha][43] - 
     173820.8764188247 $CellContext`\[Alpha][29] $CellContext`\[Alpha][43] - 
     151198.3903503539 $CellContext`\[Alpha][30] $CellContext`\[Alpha][43] - 
     201849.0594662067 $CellContext`\[Alpha][31] $CellContext`\[Alpha][43] - 
     159702.54536168618` $CellContext`\[Alpha][32] $CellContext`\[Alpha][43] - 
     171730.83801056983` $CellContext`\[Alpha][33] $CellContext`\[Alpha][43] - 
     206386.1072649318 $CellContext`\[Alpha][34] $CellContext`\[Alpha][43] - 
     148241.1161598321 $CellContext`\[Alpha][35] $CellContext`\[Alpha][43] - 
     130898.55360103653` $CellContext`\[Alpha][36] $CellContext`\[Alpha][43] - 
     147406.14220329234` $CellContext`\[Alpha][37] $CellContext`\[Alpha][43] - 
     144062.4969156953 $CellContext`\[Alpha][38] $CellContext`\[Alpha][43] - 
     178187.6140301474 $CellContext`\[Alpha][39] $CellContext`\[Alpha][43] - 
     167886.42103306254` $CellContext`\[Alpha][40] $CellContext`\[Alpha][43] - 
     184913.01806143098` $CellContext`\[Alpha][41] $CellContext`\[Alpha][43] - 
     187113.63874250365` $CellContext`\[Alpha][42] $CellContext`\[Alpha][43] - 
     86922.23360548755 $CellContext`\[Alpha][43]^2 - 
     134857.2360956915 $CellContext`\[Alpha][26] $CellContext`\[Alpha][44] - 
     128165.53749891478` $CellContext`\[Alpha][27] $CellContext`\[Alpha][44] - 
     143831.3238020976 $CellContext`\[Alpha][28] $CellContext`\[Alpha][44] - 
     148393.41607792908` $CellContext`\[Alpha][29] $CellContext`\[Alpha][44] - 
     129160.1956732756 $CellContext`\[Alpha][30] $CellContext`\[Alpha][44] - 
     172296.64371386459` $CellContext`\[Alpha][31] $CellContext`\[Alpha][44] - 
     136367.7464654367 $CellContext`\[Alpha][32] $CellContext`\[Alpha][44] - 
     146649.01531565888` $CellContext`\[Alpha][33] $CellContext`\[Alpha][44] - 
     176204.4542358447 $CellContext`\[Alpha][34] $CellContext`\[Alpha][44] - 
     126590.22570287687` $CellContext`\[Alpha][35] $CellContext`\[Alpha][44] - 
     111774.1022715662 $CellContext`\[Alpha][36] $CellContext`\[Alpha][44] - 
     125856.09537870694` $CellContext`\[Alpha][37] $CellContext`\[Alpha][44] - 
     123082.7149286209 $CellContext`\[Alpha][38] $CellContext`\[Alpha][44] - 
     152185.50129405697` $CellContext`\[Alpha][39] $CellContext`\[Alpha][44] - 
     143374.54662036346` $CellContext`\[Alpha][40] $CellContext`\[Alpha][44] - 
     157789.82984387502` $CellContext`\[Alpha][41] $CellContext`\[Alpha][44] - 
     159764.04374085882` $CellContext`\[Alpha][42] $CellContext`\[Alpha][44] - 
     148461.30412062397` $CellContext`\[Alpha][43] $CellContext`\[Alpha][44] - 
     63397.293014723255` $CellContext`\[Alpha][44]^2 - 
     137393.85105285875` $CellContext`\[Alpha][26] $CellContext`\[Alpha][45] - 
     130717.87450459297` $CellContext`\[Alpha][27] $CellContext`\[Alpha][45] - 
     146516.21843440473` $CellContext`\[Alpha][28] $CellContext`\[Alpha][45] - 
     151114.85959321927` $CellContext`\[Alpha][29] $CellContext`\[Alpha][45] - 
     131830.99760050146` $CellContext`\[Alpha][30] $CellContext`\[Alpha][45] - 
     175362.5704008235 $CellContext`\[Alpha][31] $CellContext`\[Alpha][45] - 
     138972.0379827836 $CellContext`\[Alpha][32] $CellContext`\[Alpha][45] - 
     149489.2548570107 $CellContext`\[Alpha][33] $CellContext`\[Alpha][45] - 
     179472.31649073836` $CellContext`\[Alpha][34] $CellContext`\[Alpha][45] - 
     129042.67495883667` $CellContext`\[Alpha][35] $CellContext`\[Alpha][45] - 
     113915.05329487694` $CellContext`\[Alpha][36] $CellContext`\[Alpha][45] - 
     128214.57324714273` $CellContext`\[Alpha][37] $CellContext`\[Alpha][45] - 
     125696.99736903427` $CellContext`\[Alpha][38] $CellContext`\[Alpha][45] - 
     155218.901193346 $CellContext`\[Alpha][39] $CellContext`\[Alpha][45] - 
     146183.33100668265` $CellContext`\[Alpha][40] $CellContext`\[Alpha][45] - 
     160407.27726883246` $CellContext`\[Alpha][41] $CellContext`\[Alpha][45] - 
     162778.68976678248` $CellContext`\[Alpha][42] $CellContext`\[Alpha][45] - 
     151364.45980855447` $CellContext`\[Alpha][43] $CellContext`\[Alpha][45] - 
     129312.70228903327` $CellContext`\[Alpha][44] $CellContext`\[Alpha][45] - 
     66013.42918473422 $CellContext`\[Alpha][45]^2 - 
     183152.09328078933` $CellContext`\[Alpha][26] $CellContext`\[Alpha][46] - 
     173641.3820823331 $CellContext`\[Alpha][27] $CellContext`\[Alpha][46] - 
     195401.209923519 $CellContext`\[Alpha][28] $CellContext`\[Alpha][46] - 
     201744.10040168103` $CellContext`\[Alpha][29] $CellContext`\[Alpha][46] - 
     174694.5135865394 $CellContext`\[Alpha][30] $CellContext`\[Alpha][46] - 
     234521.27889753916` $CellContext`\[Alpha][31] $CellContext`\[Alpha][46] - 
     185086.35623312613` $CellContext`\[Alpha][32] $CellContext`\[Alpha][46] - 
     198922.50818968544` $CellContext`\[Alpha][33] $CellContext`\[Alpha][46] - 
     239445.23154100226` $CellContext`\[Alpha][34] $CellContext`\[Alpha][46] - 
     171711.61104492523` $CellContext`\[Alpha][35] $CellContext`\[Alpha][46] - 
     151687.49347920323` $CellContext`\[Alpha][36] $CellContext`\[Alpha][46] - 
     170953.82944157842` $CellContext`\[Alpha][37] $CellContext`\[Alpha][46] - 
     166268.0775921133 $CellContext`\[Alpha][38] $CellContext`\[Alpha][46] - 
     206176.01839989919` $CellContext`\[Alpha][39] $CellContext`\[Alpha][46] - 
     194385.44662771278` $CellContext`\[Alpha][40] $CellContext`\[Alpha][46] - 
     215343.43974469643` $CellContext`\[Alpha][41] $CellContext`\[Alpha][46] - 
     216950.004255948 $CellContext`\[Alpha][42] $CellContext`\[Alpha][46] - 
     201297.77162951147` $CellContext`\[Alpha][43] $CellContext`\[Alpha][46] - 
     171804.63883777455` $CellContext`\[Alpha][44] $CellContext`\[Alpha][46] - 
     174780.80202019657` $CellContext`\[Alpha][45] $CellContext`\[Alpha][46] - 
     117046.68310548544` $CellContext`\[Alpha][46]^2 - 
     134678.2744388932 $CellContext`\[Alpha][26] $CellContext`\[Alpha][47] - 
     127988.60708421696` $CellContext`\[Alpha][27] $CellContext`\[Alpha][47] - 
     143641.4456894732 $CellContext`\[Alpha][28] $CellContext`\[Alpha][47] - 
     148199.86675926848` $CellContext`\[Alpha][29] $CellContext`\[Alpha][47] - 
     128977.11996385838` $CellContext`\[Alpha][30] $CellContext`\[Alpha][47] - 
     172076.45891885756` $CellContext`\[Alpha][31] $CellContext`\[Alpha][47] - 
     136184.88101342833` $CellContext`\[Alpha][32] $CellContext`\[Alpha][47] - 
     146450.4474072546 $CellContext`\[Alpha][33] $CellContext`\[Alpha][47] - 
     175972.8711920531 $CellContext`\[Alpha][34] $CellContext`\[Alpha][47] - 
     126418.78422246546` $CellContext`\[Alpha][35] $CellContext`\[Alpha][47] - 
     111623.90964364371` $CellContext`\[Alpha][36] $CellContext`\[Alpha][47] - 
     125689.50571264539` $CellContext`\[Alpha][37] $CellContext`\[Alpha][47] - 
     122904.9086458528 $CellContext`\[Alpha][38] $CellContext`\[Alpha][47] - 
     151975.28013228314` $CellContext`\[Alpha][39] $CellContext`\[Alpha][47] - 
     143178.86633682583` $CellContext`\[Alpha][40] $CellContext`\[Alpha][47] - 
     157597.3908398994 $CellContext`\[Alpha][41] $CellContext`\[Alpha][47] - 
     159551.56800436976` $CellContext`\[Alpha][42] $CellContext`\[Alpha][47] - 
     148258.93678508213` $CellContext`\[Alpha][43] $CellContext`\[Alpha][47] - 
     126619.88287807305` $CellContext`\[Alpha][44] $CellContext`\[Alpha][47] - 
     129127.4658482835 $CellContext`\[Alpha][45] $CellContext`\[Alpha][47] - 
     171589.00130194763` $CellContext`\[Alpha][46] $CellContext`\[Alpha][47] - 
     63222.881061587585` $CellContext`\[Alpha][47]^2 - 
     151917.69416850136` $CellContext`\[Alpha][26] $CellContext`\[Alpha][48] - 
     144211.92977941997` $CellContext`\[Alpha][27] $CellContext`\[Alpha][48] - 
     162051.34841185118` $CellContext`\[Alpha][28] $CellContext`\[Alpha][48] - 
     167248.86204804876` $CellContext`\[Alpha][29] $CellContext`\[Alpha][48] - 
     145214.39882790396` $CellContext`\[Alpha][30] $CellContext`\[Alpha][48] - 
     194300.4048290879 $CellContext`\[Alpha][31] $CellContext`\[Alpha][48] - 
     153572.84183019484` $CellContext`\[Alpha][32] $CellContext`\[Alpha][48] - 
     165104.41475758434` $CellContext`\[Alpha][33] $CellContext`\[Alpha][48] - 
     198550.63625161047` $CellContext`\[Alpha][34] $CellContext`\[Alpha][48] - 
     142520.44976152366` $CellContext`\[Alpha][35] $CellContext`\[Alpha][48] - 
     125868.79521148349` $CellContext`\[Alpha][36] $CellContext`\[Alpha][48] - 
     141788.286735381 $CellContext`\[Alpha][37] $CellContext`\[Alpha][48] - 
     138299.69291740493` $CellContext`\[Alpha][38] $CellContext`\[Alpha][48] - 
     171235.98727633344` $CellContext`\[Alpha][39] $CellContext`\[Alpha][48] - 
     161380.046739446 $CellContext`\[Alpha][40] $CellContext`\[Alpha][48] - 
     178166.13513920893` $CellContext`\[Alpha][41] $CellContext`\[Alpha][48] - 
     179964.1104111222 $CellContext`\[Alpha][42] $CellContext`\[Alpha][48] - 
     167111.86581214113` $CellContext`\[Alpha][43] $CellContext`\[Alpha][48] - 
     142677.52044553278` $CellContext`\[Alpha][44] $CellContext`\[Alpha][48] - 
     145338.300279385 $CellContext`\[Alpha][45] $CellContext`\[Alpha][48] - 
     193841.40778163495` $CellContext`\[Alpha][46] $CellContext`\[Alpha][48] - 
     142489.29016311246` $CellContext`\[Alpha][47] $CellContext`\[Alpha][48] - 
     80377.2170361676 $CellContext`\[Alpha][48]^2 - 
     134883.59733371774` $CellContext`\[Alpha][26] $CellContext`\[Alpha][49] - 
     128079.43263038424` $CellContext`\[Alpha][27] $CellContext`\[Alpha][49] - 
     143875.54853000407` $CellContext`\[Alpha][28] $CellContext`\[Alpha][49] - 
     148477.2068840681 $CellContext`\[Alpha][29] $CellContext`\[Alpha][49] - 
     128995.9702269701 $CellContext`\[Alpha][30] $CellContext`\[Alpha][49] - 
     172467.63937584765` $CellContext`\[Alpha][31] $CellContext`\[Alpha][49] - 
     136363.57775446563` $CellContext`\[Alpha][32] $CellContext`\[Alpha][49] - 
     146613.442968504 $CellContext`\[Alpha][33] $CellContext`\[Alpha][49] - 
     176275.38670518916` $CellContext`\[Alpha][34] $CellContext`\[Alpha][49] - 
     126558.96916192213` $CellContext`\[Alpha][35] $CellContext`\[Alpha][49] - 
     111765.70949960733` $CellContext`\[Alpha][36] $CellContext`\[Alpha][49] - 
     125887.62843580876` $CellContext`\[Alpha][37] $CellContext`\[Alpha][49] - 
     122871.92797067905` $CellContext`\[Alpha][38] $CellContext`\[Alpha][49] - 
     152081.12362570336` $CellContext`\[Alpha][39] $CellContext`\[Alpha][49] - 
     143314.6750919904 $CellContext`\[Alpha][40] $CellContext`\[Alpha][49] - 
     158095.85661007336` $CellContext`\[Alpha][41] $CellContext`\[Alpha][49] - 
     159787.7815946177 $CellContext`\[Alpha][42] $CellContext`\[Alpha][49] - 
     148403.45437145783` $CellContext`\[Alpha][43] $CellContext`\[Alpha][49] - 
     126714.83416123134` $CellContext`\[Alpha][44] $CellContext`\[Alpha][49] - 
     129116.72275759728` $CellContext`\[Alpha][45] $CellContext`\[Alpha][49] - 
     172038.74338061656` $CellContext`\[Alpha][46] $CellContext`\[Alpha][49] - 
     126545.78639088047` $CellContext`\[Alpha][47] $CellContext`\[Alpha][49] - 
     142723.4133593078 $CellContext`\[Alpha][48] $CellContext`\[Alpha][49] - 
     63362.567789772016` $CellContext`\[Alpha][49]^2 - 
     157895.5582611897 $CellContext`\[Alpha][26] $CellContext`\[Alpha][50] - 
     150016.3819483667 $CellContext`\[Alpha][27] $CellContext`\[Alpha][50] - 
     168409.1536824721 $CellContext`\[Alpha][28] $CellContext`\[Alpha][50] - 
     173766.0241804019 $CellContext`\[Alpha][29] $CellContext`\[Alpha][50] - 
     151149.74998254163` $CellContext`\[Alpha][30] $CellContext`\[Alpha][50] - 
     201785.6505680029 $CellContext`\[Alpha][31] $CellContext`\[Alpha][50] - 
     159651.83111753434` $CellContext`\[Alpha][32] $CellContext`\[Alpha][50] - 
     171676.1825753913 $CellContext`\[Alpha][33] $CellContext`\[Alpha][50] - 
     206320.8668447098 $CellContext`\[Alpha][34] $CellContext`\[Alpha][50] - 
     148193.9344654999 $CellContext`\[Alpha][35] $CellContext`\[Alpha][50] - 
     130856.96673605603` $CellContext`\[Alpha][36] $CellContext`\[Alpha][50] - 
     147359.47106724713` $CellContext`\[Alpha][37] $CellContext`\[Alpha][50] - 
     144015.9398083705 $CellContext`\[Alpha][38] $CellContext`\[Alpha][50] - 
     178130.63986232228` $CellContext`\[Alpha][39] $CellContext`\[Alpha][50] - 
     167832.89101243165` $CellContext`\[Alpha][40] $CellContext`\[Alpha][50] - 
     184855.5134917073 $CellContext`\[Alpha][41] $CellContext`\[Alpha][50] - 
     187054.33189152766` $CellContext`\[Alpha][42] $CellContext`\[Alpha][50] - 
     173789.05369941625` $CellContext`\[Alpha][43] $CellContext`\[Alpha][50] - 
     148413.86292078468` $CellContext`\[Alpha][44] $CellContext`\[Alpha][50] - 
     151315.64256994502` $CellContext`\[Alpha][45] $CellContext`\[Alpha][50] - 
     201234.78448110173` $CellContext`\[Alpha][46] $CellContext`\[Alpha][50] - 
     148211.58193855183` $CellContext`\[Alpha][47] $CellContext`\[Alpha][50] - 
     167058.99519214942` $CellContext`\[Alpha][48] $CellContext`\[Alpha][50] - 
     148356.38362518683` $CellContext`\[Alpha][49] $CellContext`\[Alpha][50] - 
     86866.8296136999 $CellContext`\[Alpha][50]^2)],
  Editable->False]], "Print",
 CellChangeTimes->{3.88952474323641*^9, 3.8895498906138268`*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"d78eb0f1-fc30-48f3-adaf-56e6cc67e1b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Subject to the following constraints: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "[", "26", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "27", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "28", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "29", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "30", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "31", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "32", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "33", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "34", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "35", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "36", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "37", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "38", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "39", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "40", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "41", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "42", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "43", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "44", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "45", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "46", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "47", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "48", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "49", "]"}], "+", 
           RowBox[{"\[Alpha]", "[", "50", "]"}]}], "\[Equal]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "2", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "3", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "4", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "5", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "6", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "7", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "8", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "9", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "10", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "11", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "12", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "13", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "14", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "15", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "16", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "17", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "18", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "19", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "20", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "21", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "22", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "23", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "24", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "25", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "26", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "27", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "28", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "29", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "30", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "31", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "32", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "33", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "34", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "35", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "36", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "37", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "38", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "39", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "40", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "41", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "42", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "43", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "44", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "45", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "46", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "47", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "48", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "49", "]"}], "\[GreaterEqual]", "0"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "50", "]"}], "\[GreaterEqual]", "0"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Subject to the following constraints: ", 
   MatrixForm[{$CellContext`\[Alpha][26] + $CellContext`\[Alpha][
       27] + $CellContext`\[Alpha][28] + $CellContext`\[Alpha][
       29] + $CellContext`\[Alpha][30] + $CellContext`\[Alpha][
       31] + $CellContext`\[Alpha][32] + $CellContext`\[Alpha][
       33] + $CellContext`\[Alpha][34] + $CellContext`\[Alpha][
       35] + $CellContext`\[Alpha][36] + $CellContext`\[Alpha][
       37] + $CellContext`\[Alpha][38] + $CellContext`\[Alpha][
       39] + $CellContext`\[Alpha][40] + $CellContext`\[Alpha][
       41] + $CellContext`\[Alpha][42] + $CellContext`\[Alpha][
       43] + $CellContext`\[Alpha][44] + $CellContext`\[Alpha][
       45] + $CellContext`\[Alpha][46] + $CellContext`\[Alpha][
       47] + $CellContext`\[Alpha][48] + $CellContext`\[Alpha][
       49] + $CellContext`\[Alpha][50] == 0, $CellContext`\[Alpha][2] >= 
     0, $CellContext`\[Alpha][3] >= 0, $CellContext`\[Alpha][4] >= 
     0, $CellContext`\[Alpha][5] >= 0, $CellContext`\[Alpha][6] >= 
     0, $CellContext`\[Alpha][7] >= 0, $CellContext`\[Alpha][8] >= 
     0, $CellContext`\[Alpha][9] >= 0, $CellContext`\[Alpha][10] >= 
     0, $CellContext`\[Alpha][11] >= 0, $CellContext`\[Alpha][12] >= 
     0, $CellContext`\[Alpha][13] >= 0, $CellContext`\[Alpha][14] >= 
     0, $CellContext`\[Alpha][15] >= 0, $CellContext`\[Alpha][16] >= 
     0, $CellContext`\[Alpha][17] >= 0, $CellContext`\[Alpha][18] >= 
     0, $CellContext`\[Alpha][19] >= 0, $CellContext`\[Alpha][20] >= 
     0, $CellContext`\[Alpha][21] >= 0, $CellContext`\[Alpha][22] >= 
     0, $CellContext`\[Alpha][23] >= 0, $CellContext`\[Alpha][24] >= 
     0, $CellContext`\[Alpha][25] >= 0, $CellContext`\[Alpha][26] >= 
     0, $CellContext`\[Alpha][27] >= 0, $CellContext`\[Alpha][28] >= 
     0, $CellContext`\[Alpha][29] >= 0, $CellContext`\[Alpha][30] >= 
     0, $CellContext`\[Alpha][31] >= 0, $CellContext`\[Alpha][32] >= 
     0, $CellContext`\[Alpha][33] >= 0, $CellContext`\[Alpha][34] >= 
     0, $CellContext`\[Alpha][35] >= 0, $CellContext`\[Alpha][36] >= 
     0, $CellContext`\[Alpha][37] >= 0, $CellContext`\[Alpha][38] >= 
     0, $CellContext`\[Alpha][39] >= 0, $CellContext`\[Alpha][40] >= 
     0, $CellContext`\[Alpha][41] >= 0, $CellContext`\[Alpha][42] >= 
     0, $CellContext`\[Alpha][43] >= 0, $CellContext`\[Alpha][44] >= 
     0, $CellContext`\[Alpha][45] >= 0, $CellContext`\[Alpha][46] >= 
     0, $CellContext`\[Alpha][47] >= 0, $CellContext`\[Alpha][48] >= 
     0, $CellContext`\[Alpha][49] >= 0, $CellContext`\[Alpha][50] >= 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.88952474323641*^9, 3.889549890642826*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"e341dfee-edfe-4c8f-9673-93b555e4a87f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The Numerical Analysis Programme comes back with the following \
information:\\n\\nMax found: \"\>", "\[InvisibleSpace]", "\[Infinity]", 
   "\[InvisibleSpace]", "\<\" \[Alpha]s found: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "1", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "2", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "3", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "4", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "5", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "6", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "7", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "8", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "9", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "10", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "11", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "12", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "13", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "14", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "15", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "16", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "17", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "18", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "19", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "20", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "21", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "22", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "23", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "24", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "25", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "26", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "27", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "28", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "29", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "30", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "31", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "32", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "33", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "34", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "35", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "36", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "37", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "38", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "39", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "40", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "41", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "42", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "43", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "44", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "45", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "46", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "47", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "48", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "49", "]"}], "\[Rule]", "Indeterminate"}]},
        {
         RowBox[{
          RowBox[{"\[Alpha]", "[", "50", "]"}], "\[Rule]", "Indeterminate"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" i.e. \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         SubscriptBox["\[Alpha]", "1"]},
        {
         SubscriptBox["\[Alpha]", "2"]},
        {
         SubscriptBox["\[Alpha]", "3"]},
        {
         SubscriptBox["\[Alpha]", "4"]},
        {
         SubscriptBox["\[Alpha]", "5"]},
        {
         SubscriptBox["\[Alpha]", "6"]},
        {
         SubscriptBox["\[Alpha]", "7"]},
        {
         SubscriptBox["\[Alpha]", "8"]},
        {
         SubscriptBox["\[Alpha]", "9"]},
        {
         SubscriptBox["\[Alpha]", "10"]},
        {
         SubscriptBox["\[Alpha]", "11"]},
        {
         SubscriptBox["\[Alpha]", "12"]},
        {
         SubscriptBox["\[Alpha]", "13"]},
        {
         SubscriptBox["\[Alpha]", "14"]},
        {
         SubscriptBox["\[Alpha]", "15"]},
        {
         SubscriptBox["\[Alpha]", "16"]},
        {
         SubscriptBox["\[Alpha]", "17"]},
        {
         SubscriptBox["\[Alpha]", "18"]},
        {
         SubscriptBox["\[Alpha]", "19"]},
        {
         SubscriptBox["\[Alpha]", "20"]},
        {
         SubscriptBox["\[Alpha]", "21"]},
        {
         SubscriptBox["\[Alpha]", "22"]},
        {
         SubscriptBox["\[Alpha]", "23"]},
        {
         SubscriptBox["\[Alpha]", "24"]},
        {
         SubscriptBox["\[Alpha]", "25"]},
        {
         SubscriptBox["\[Alpha]", "26"]},
        {
         SubscriptBox["\[Alpha]", "27"]},
        {
         SubscriptBox["\[Alpha]", "28"]},
        {
         SubscriptBox["\[Alpha]", "29"]},
        {
         SubscriptBox["\[Alpha]", "30"]},
        {
         SubscriptBox["\[Alpha]", "31"]},
        {
         SubscriptBox["\[Alpha]", "32"]},
        {
         SubscriptBox["\[Alpha]", "33"]},
        {
         SubscriptBox["\[Alpha]", "34"]},
        {
         SubscriptBox["\[Alpha]", "35"]},
        {
         SubscriptBox["\[Alpha]", "36"]},
        {
         SubscriptBox["\[Alpha]", "37"]},
        {
         SubscriptBox["\[Alpha]", "38"]},
        {
         SubscriptBox["\[Alpha]", "39"]},
        {
         SubscriptBox["\[Alpha]", "40"]},
        {
         SubscriptBox["\[Alpha]", "41"]},
        {
         SubscriptBox["\[Alpha]", "42"]},
        {
         SubscriptBox["\[Alpha]", "43"]},
        {
         SubscriptBox["\[Alpha]", "44"]},
        {
         SubscriptBox["\[Alpha]", "45"]},
        {
         SubscriptBox["\[Alpha]", "46"]},
        {
         SubscriptBox["\[Alpha]", "47"]},
        {
         SubscriptBox["\[Alpha]", "48"]},
        {
         SubscriptBox["\[Alpha]", "49"]},
        {
         SubscriptBox["\[Alpha]", "50"]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"},
        {"Indeterminate"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" to 3 d.p.\"\>"}],
  SequenceForm[
  "The Numerical Analysis Programme comes back with the following \
information:\n\nMax found: ", 
   DirectedInfinity[1], " \[Alpha]s found: ", 
   MatrixForm[{$CellContext`\[Alpha][1] -> 
     Indeterminate, $CellContext`\[Alpha][2] -> 
     Indeterminate, $CellContext`\[Alpha][3] -> 
     Indeterminate, $CellContext`\[Alpha][4] -> 
     Indeterminate, $CellContext`\[Alpha][5] -> 
     Indeterminate, $CellContext`\[Alpha][6] -> 
     Indeterminate, $CellContext`\[Alpha][7] -> 
     Indeterminate, $CellContext`\[Alpha][8] -> 
     Indeterminate, $CellContext`\[Alpha][9] -> 
     Indeterminate, $CellContext`\[Alpha][10] -> 
     Indeterminate, $CellContext`\[Alpha][11] -> 
     Indeterminate, $CellContext`\[Alpha][12] -> 
     Indeterminate, $CellContext`\[Alpha][13] -> 
     Indeterminate, $CellContext`\[Alpha][14] -> 
     Indeterminate, $CellContext`\[Alpha][15] -> 
     Indeterminate, $CellContext`\[Alpha][16] -> 
     Indeterminate, $CellContext`\[Alpha][17] -> 
     Indeterminate, $CellContext`\[Alpha][18] -> 
     Indeterminate, $CellContext`\[Alpha][19] -> 
     Indeterminate, $CellContext`\[Alpha][20] -> 
     Indeterminate, $CellContext`\[Alpha][21] -> 
     Indeterminate, $CellContext`\[Alpha][22] -> 
     Indeterminate, $CellContext`\[Alpha][23] -> 
     Indeterminate, $CellContext`\[Alpha][24] -> 
     Indeterminate, $CellContext`\[Alpha][25] -> 
     Indeterminate, $CellContext`\[Alpha][26] -> 
     Indeterminate, $CellContext`\[Alpha][27] -> 
     Indeterminate, $CellContext`\[Alpha][28] -> 
     Indeterminate, $CellContext`\[Alpha][29] -> 
     Indeterminate, $CellContext`\[Alpha][30] -> 
     Indeterminate, $CellContext`\[Alpha][31] -> 
     Indeterminate, $CellContext`\[Alpha][32] -> 
     Indeterminate, $CellContext`\[Alpha][33] -> 
     Indeterminate, $CellContext`\[Alpha][34] -> 
     Indeterminate, $CellContext`\[Alpha][35] -> 
     Indeterminate, $CellContext`\[Alpha][36] -> 
     Indeterminate, $CellContext`\[Alpha][37] -> 
     Indeterminate, $CellContext`\[Alpha][38] -> 
     Indeterminate, $CellContext`\[Alpha][39] -> 
     Indeterminate, $CellContext`\[Alpha][40] -> 
     Indeterminate, $CellContext`\[Alpha][41] -> 
     Indeterminate, $CellContext`\[Alpha][42] -> 
     Indeterminate, $CellContext`\[Alpha][43] -> 
     Indeterminate, $CellContext`\[Alpha][44] -> 
     Indeterminate, $CellContext`\[Alpha][45] -> 
     Indeterminate, $CellContext`\[Alpha][46] -> 
     Indeterminate, $CellContext`\[Alpha][47] -> 
     Indeterminate, $CellContext`\[Alpha][48] -> 
     Indeterminate, $CellContext`\[Alpha][49] -> 
     Indeterminate, $CellContext`\[Alpha][50] -> Indeterminate}], " i.e. ", 
   MatrixForm[{
     Subscript[$CellContext`\[Alpha], 1], 
     Subscript[$CellContext`\[Alpha], 2], 
     Subscript[$CellContext`\[Alpha], 3], 
     Subscript[$CellContext`\[Alpha], 4], 
     Subscript[$CellContext`\[Alpha], 5], 
     Subscript[$CellContext`\[Alpha], 6], 
     Subscript[$CellContext`\[Alpha], 7], 
     Subscript[$CellContext`\[Alpha], 8], 
     Subscript[$CellContext`\[Alpha], 9], 
     Subscript[$CellContext`\[Alpha], 10], 
     Subscript[$CellContext`\[Alpha], 11], 
     Subscript[$CellContext`\[Alpha], 12], 
     Subscript[$CellContext`\[Alpha], 13], 
     Subscript[$CellContext`\[Alpha], 14], 
     Subscript[$CellContext`\[Alpha], 15], 
     Subscript[$CellContext`\[Alpha], 16], 
     Subscript[$CellContext`\[Alpha], 17], 
     Subscript[$CellContext`\[Alpha], 18], 
     Subscript[$CellContext`\[Alpha], 19], 
     Subscript[$CellContext`\[Alpha], 20], 
     Subscript[$CellContext`\[Alpha], 21], 
     Subscript[$CellContext`\[Alpha], 22], 
     Subscript[$CellContext`\[Alpha], 23], 
     Subscript[$CellContext`\[Alpha], 24], 
     Subscript[$CellContext`\[Alpha], 25], 
     Subscript[$CellContext`\[Alpha], 26], 
     Subscript[$CellContext`\[Alpha], 27], 
     Subscript[$CellContext`\[Alpha], 28], 
     Subscript[$CellContext`\[Alpha], 29], 
     Subscript[$CellContext`\[Alpha], 30], 
     Subscript[$CellContext`\[Alpha], 31], 
     Subscript[$CellContext`\[Alpha], 32], 
     Subscript[$CellContext`\[Alpha], 33], 
     Subscript[$CellContext`\[Alpha], 34], 
     Subscript[$CellContext`\[Alpha], 35], 
     Subscript[$CellContext`\[Alpha], 36], 
     Subscript[$CellContext`\[Alpha], 37], 
     Subscript[$CellContext`\[Alpha], 38], 
     Subscript[$CellContext`\[Alpha], 39], 
     Subscript[$CellContext`\[Alpha], 40], 
     Subscript[$CellContext`\[Alpha], 41], 
     Subscript[$CellContext`\[Alpha], 42], 
     Subscript[$CellContext`\[Alpha], 43], 
     Subscript[$CellContext`\[Alpha], 44], 
     Subscript[$CellContext`\[Alpha], 45], 
     Subscript[$CellContext`\[Alpha], 46], 
     Subscript[$CellContext`\[Alpha], 47], 
     Subscript[$CellContext`\[Alpha], 48], 
     Subscript[$CellContext`\[Alpha], 49], 
     Subscript[$CellContext`\[Alpha], 50]}], "=", 
   MatrixForm[{
    Indeterminate, Indeterminate, Indeterminate, Indeterminate, Indeterminate,
      Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate, Indeterminate, Indeterminate, Indeterminate, 
     Indeterminate}], " to 3 d.p."],
  Editable->False]], "Print",
 CellChangeTimes->{3.88952474323641*^9, 3.889549890677831*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"4f27e8c3-9a17-40e4-b187-2a7995c5196d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"As a result we find the non-zero \\!\\(\\*SubscriptBox[\\(\
\[Alpha]\\), \\(i\\)]\\)s have labels: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", 
     ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
     "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", 
     ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", 
     "41", ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", 
     ",", "48", ",", "49", ",", "50"}], "}"}]}],
  SequenceForm[
  "As a result we find the non-zero \!\(\*SubscriptBox[\(\[Alpha]\), \
\(i\)]\)s have labels: ", {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
   16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
    35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}],
  Editable->False]], "Print",
 CellChangeTimes->{3.88952474323641*^9, 3.8895498906838264`*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"f907acd1-bce7-4347-a9d4-63719909e461"],

Cell[BoxData["\<\"Using the \\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(i\\)]\\)s we can then find w and b:\"\>"], "Print",
 CellChangeTimes->{3.88952474323641*^9, 3.8895498906888275`*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"b75d92e6-e0a5-4c49-ac4e-7bba9ec4b4d0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(w\\), \\(-\\)]\\) = \[CapitalSigma] \
\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(i\\)]\\) \
\\!\\(\\*SubscriptBox[\\(y\\), \\(i\\)]\\) \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(x\\), \\(-\\)], \\(i\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\<\" x\"\>", "1"], " ", 
     SubscriptBox["\<\" y\"\>", "1"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "1"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "2"], " ", 
     SubscriptBox["\<\" y\"\>", "2"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "2"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "3"], " ", 
     SubscriptBox["\<\" y\"\>", "3"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "3"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "4"], " ", 
     SubscriptBox["\<\" y\"\>", "4"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "4"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "5"], " ", 
     SubscriptBox["\<\" y\"\>", "5"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "5"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "6"], " ", 
     SubscriptBox["\<\" y\"\>", "6"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "6"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "7"], " ", 
     SubscriptBox["\<\" y\"\>", "7"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "7"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "8"], " ", 
     SubscriptBox["\<\" y\"\>", "8"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "8"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "9"], " ", 
     SubscriptBox["\<\" y\"\>", "9"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "9"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "10"], " ", 
     SubscriptBox["\<\" y\"\>", "10"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "10"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "11"], " ", 
     SubscriptBox["\<\" y\"\>", "11"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "11"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "12"], " ", 
     SubscriptBox["\<\" y\"\>", "12"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "12"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "13"], " ", 
     SubscriptBox["\<\" y\"\>", "13"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "13"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "14"], " ", 
     SubscriptBox["\<\" y\"\>", "14"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "14"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "15"], " ", 
     SubscriptBox["\<\" y\"\>", "15"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "15"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "16"], " ", 
     SubscriptBox["\<\" y\"\>", "16"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "16"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "17"], " ", 
     SubscriptBox["\<\" y\"\>", "17"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "17"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "18"], " ", 
     SubscriptBox["\<\" y\"\>", "18"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "18"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "19"], " ", 
     SubscriptBox["\<\" y\"\>", "19"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "19"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "20"], " ", 
     SubscriptBox["\<\" y\"\>", "20"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "20"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "21"], " ", 
     SubscriptBox["\<\" y\"\>", "21"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "21"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "22"], " ", 
     SubscriptBox["\<\" y\"\>", "22"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "22"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "23"], " ", 
     SubscriptBox["\<\" y\"\>", "23"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "23"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "24"], " ", 
     SubscriptBox["\<\" y\"\>", "24"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "24"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "25"], " ", 
     SubscriptBox["\<\" y\"\>", "25"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "25"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "26"], " ", 
     SubscriptBox["\<\" y\"\>", "26"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "26"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "27"], " ", 
     SubscriptBox["\<\" y\"\>", "27"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "27"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "28"], " ", 
     SubscriptBox["\<\" y\"\>", "28"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "28"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "29"], " ", 
     SubscriptBox["\<\" y\"\>", "29"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "29"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "30"], " ", 
     SubscriptBox["\<\" y\"\>", "30"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "30"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "31"], " ", 
     SubscriptBox["\<\" y\"\>", "31"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "31"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "32"], " ", 
     SubscriptBox["\<\" y\"\>", "32"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "32"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "33"], " ", 
     SubscriptBox["\<\" y\"\>", "33"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "33"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "34"], " ", 
     SubscriptBox["\<\" y\"\>", "34"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "34"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "35"], " ", 
     SubscriptBox["\<\" y\"\>", "35"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "35"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "36"], " ", 
     SubscriptBox["\<\" y\"\>", "36"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "36"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "37"], " ", 
     SubscriptBox["\<\" y\"\>", "37"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "37"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "38"], " ", 
     SubscriptBox["\<\" y\"\>", "38"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "38"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "39"], " ", 
     SubscriptBox["\<\" y\"\>", "39"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "39"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "40"], " ", 
     SubscriptBox["\<\" y\"\>", "40"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "40"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "41"], " ", 
     SubscriptBox["\<\" y\"\>", "41"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "41"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "42"], " ", 
     SubscriptBox["\<\" y\"\>", "42"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "42"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "43"], " ", 
     SubscriptBox["\<\" y\"\>", "43"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "43"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "44"], " ", 
     SubscriptBox["\<\" y\"\>", "44"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "44"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "45"], " ", 
     SubscriptBox["\<\" y\"\>", "45"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "45"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "46"], " ", 
     SubscriptBox["\<\" y\"\>", "46"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "46"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "47"], " ", 
     SubscriptBox["\<\" y\"\>", "47"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "47"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "48"], " ", 
     SubscriptBox["\<\" y\"\>", "48"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "48"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "49"], " ", 
     SubscriptBox["\<\" y\"\>", "49"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "49"]}], "+", 
    RowBox[{
     SubscriptBox["\<\" x\"\>", "50"], " ", 
     SubscriptBox["\<\" y\"\>", "50"], " ", 
     SubscriptBox["\<\"\[Alpha]\"\>", "50"]}]}], 
   "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"Indeterminate"},
        {"Indeterminate"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*OverscriptBox[\(w\), \(-\)]\) = \[CapitalSigma] \
\!\(\*SubscriptBox[\(\[Alpha]\), \(i\)]\) \!\(\*SubscriptBox[\(y\), \(i\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(x\), \(-\)], \(i\)]\) = ", 
   Subscript[" x", 1] Subscript[" y", 1] Subscript["\[Alpha]", 1] + 
   Subscript[" x", 2] Subscript[" y", 2] Subscript["\[Alpha]", 2] + 
   Subscript[" x", 3] Subscript[" y", 3] Subscript["\[Alpha]", 3] + 
   Subscript[" x", 4] Subscript[" y", 4] Subscript["\[Alpha]", 4] + 
   Subscript[" x", 5] Subscript[" y", 5] Subscript["\[Alpha]", 5] + 
   Subscript[" x", 6] Subscript[" y", 6] Subscript["\[Alpha]", 6] + 
   Subscript[" x", 7] Subscript[" y", 7] Subscript["\[Alpha]", 7] + 
   Subscript[" x", 8] Subscript[" y", 8] Subscript["\[Alpha]", 8] + 
   Subscript[" x", 9] Subscript[" y", 9] Subscript["\[Alpha]", 9] + 
   Subscript[" x", 10] Subscript[" y", 10] Subscript["\[Alpha]", 10] + 
   Subscript[" x", 11] Subscript[" y", 11] Subscript["\[Alpha]", 11] + 
   Subscript[" x", 12] Subscript[" y", 12] Subscript["\[Alpha]", 12] + 
   Subscript[" x", 13] Subscript[" y", 13] Subscript["\[Alpha]", 13] + 
   Subscript[" x", 14] Subscript[" y", 14] Subscript["\[Alpha]", 14] + 
   Subscript[" x", 15] Subscript[" y", 15] Subscript["\[Alpha]", 15] + 
   Subscript[" x", 16] Subscript[" y", 16] Subscript["\[Alpha]", 16] + 
   Subscript[" x", 17] Subscript[" y", 17] Subscript["\[Alpha]", 17] + 
   Subscript[" x", 18] Subscript[" y", 18] Subscript["\[Alpha]", 18] + 
   Subscript[" x", 19] Subscript[" y", 19] Subscript["\[Alpha]", 19] + 
   Subscript[" x", 20] Subscript[" y", 20] Subscript["\[Alpha]", 20] + 
   Subscript[" x", 21] Subscript[" y", 21] Subscript["\[Alpha]", 21] + 
   Subscript[" x", 22] Subscript[" y", 22] Subscript["\[Alpha]", 22] + 
   Subscript[" x", 23] Subscript[" y", 23] Subscript["\[Alpha]", 23] + 
   Subscript[" x", 24] Subscript[" y", 24] Subscript["\[Alpha]", 24] + 
   Subscript[" x", 25] Subscript[" y", 25] Subscript["\[Alpha]", 25] + 
   Subscript[" x", 26] Subscript[" y", 26] Subscript["\[Alpha]", 26] + 
   Subscript[" x", 27] Subscript[" y", 27] Subscript["\[Alpha]", 27] + 
   Subscript[" x", 28] Subscript[" y", 28] Subscript["\[Alpha]", 28] + 
   Subscript[" x", 29] Subscript[" y", 29] Subscript["\[Alpha]", 29] + 
   Subscript[" x", 30] Subscript[" y", 30] Subscript["\[Alpha]", 30] + 
   Subscript[" x", 31] Subscript[" y", 31] Subscript["\[Alpha]", 31] + 
   Subscript[" x", 32] Subscript[" y", 32] Subscript["\[Alpha]", 32] + 
   Subscript[" x", 33] Subscript[" y", 33] Subscript["\[Alpha]", 33] + 
   Subscript[" x", 34] Subscript[" y", 34] Subscript["\[Alpha]", 34] + 
   Subscript[" x", 35] Subscript[" y", 35] Subscript["\[Alpha]", 35] + 
   Subscript[" x", 36] Subscript[" y", 36] Subscript["\[Alpha]", 36] + 
   Subscript[" x", 37] Subscript[" y", 37] Subscript["\[Alpha]", 37] + 
   Subscript[" x", 38] Subscript[" y", 38] Subscript["\[Alpha]", 38] + 
   Subscript[" x", 39] Subscript[" y", 39] Subscript["\[Alpha]", 39] + 
   Subscript[" x", 40] Subscript[" y", 40] Subscript["\[Alpha]", 40] + 
   Subscript[" x", 41] Subscript[" y", 41] Subscript["\[Alpha]", 41] + 
   Subscript[" x", 42] Subscript[" y", 42] Subscript["\[Alpha]", 42] + 
   Subscript[" x", 43] Subscript[" y", 43] Subscript["\[Alpha]", 43] + 
   Subscript[" x", 44] Subscript[" y", 44] Subscript["\[Alpha]", 44] + 
   Subscript[" x", 45] Subscript[" y", 45] Subscript["\[Alpha]", 45] + 
   Subscript[" x", 46] Subscript[" y", 46] Subscript["\[Alpha]", 46] + 
   Subscript[" x", 47] Subscript[" y", 47] Subscript["\[Alpha]", 47] + 
   Subscript[" x", 48] Subscript[" y", 48] Subscript["\[Alpha]", 48] + 
   Subscript[" x", 49] Subscript[" y", 49] Subscript["\[Alpha]", 49] + 
   Subscript[" x", 50] Subscript[" y", 50] Subscript["\[Alpha]", 50], " = ", 
   MatrixForm[{Indeterminate, Indeterminate}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.88952474323641*^9, 3.889549890705829*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"41fae4fb-7b22-4f21-9918-9a2e33d1d023"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Since \"\>", "\[InvisibleSpace]", 
   SubscriptBox["\<\"\[Alpha]\"\>", "1"], 
   "\[InvisibleSpace]", "\<\" is non-zero \\nwe can find  b = y[[\"\>", 
   "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"]] - \\!\\(\\*OverscriptBox[\\(w\\), \
\\(-\\)]\\). x[[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"]] = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" - \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"Indeterminate"},
        {"Indeterminate"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\".\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"178.91448543244994`"},
        {"23.372372761369387`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" = \"\>", 
   "\[InvisibleSpace]", "Indeterminate"}],
  SequenceForm["Since ", 
   Subscript["\[Alpha]", 1], " is non-zero \nwe can find  b = y[[", 1, 
   "]] - \!\(\*OverscriptBox[\(w\), \(-\)]\). x[[", 1, "]] = ", 0, " - ", 
   MatrixForm[{Indeterminate, Indeterminate}], ".", 
   MatrixForm[{178.91448543244994`, 23.372372761369387`}], " = ", 
   Indeterminate],
  Editable->False]], "Print",
 CellChangeTimes->{3.88952474323641*^9, 3.889549890714831*^9},
 CellLabel->
  "During evaluation of \
In[2083]:=",ExpressionUUID->"7d9e90b3-fc3f-4e32-b127-7bc0f37e3ce3"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.889524504927743*^9, 
  3.8895245058270817`*^9}},ExpressionUUID->"0ef97737-279f-4fcf-b561-\
d7f45a38b98d"]
},
WindowSize->{1440., 747.75},
WindowMargins->{{1147.2, Automatic}, {Automatic, -4.8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"878e42fb-d9d0-4573-b818-d65650af0f9a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 12608, 355, 1361, "Input",ExpressionUUID->"1d6d8e57-0fce-4a96-a783-754c6c3516d7"],
Cell[CellGroupData[{
Cell[13213, 381, 3473, 97, 408, "Print",ExpressionUUID->"29c270ff-62d2-4cd3-9b90-a63efef0b895"],
Cell[16689, 480, 21893, 400, 408, "Print",ExpressionUUID->"2a811de1-b4d0-4e45-985d-8ad750fae6c9"],
Cell[38585, 882, 1488, 33, 28, "Print",ExpressionUUID->"1941f3bd-7201-4881-82d9-c63255bd695f"],
Cell[40076, 917, 3570, 69, 27, "Print",ExpressionUUID->"c6aef9bd-5c16-4f92-a4bf-a94f5a0530b9"],
Cell[43649, 988, 8905, 260, 371, "Print",ExpressionUUID->"f824ea3d-c6f2-4e28-8903-a0d2739063b1"]
}, Open  ]]
}, Open  ]],
Cell[52581, 1252, 81, 0, 30, "Input",ExpressionUUID->"c7faf29e-f451-4757-b0e1-04a95c7f7700"],
Cell[CellGroupData[{
Cell[52687, 1256, 739, 16, 217, "Input",ExpressionUUID->"e05fc2d3-b655-498a-b970-e7fbaf54b034"],
Cell[53429, 1274, 1825, 51, 262, "Output",ExpressionUUID->"6e456c0c-e9f2-4cbc-a071-a001ff8b886e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55291, 1330, 588, 16, 30, "Input",ExpressionUUID->"de08dde6-5b78-459e-89bb-08de217d7397"],
Cell[55882, 1348, 52320, 984, 69, "Output",ExpressionUUID->"efa428a3-378d-4a72-af9a-2db3d28b32dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108239, 2337, 2252, 57, 93, "Input",ExpressionUUID->"d29fd878-c7c0-497b-a5c6-14ff7ec8456b"],
Cell[110494, 2396, 234482, 3814, 312, "Output",ExpressionUUID->"0f0f4b7e-e41c-4ef9-8a7a-4f6e879b7a81"]
}, Open  ]],
Cell[344991, 6213, 202, 4, 30, "Input",ExpressionUUID->"ba071af4-74a2-4d75-a4ee-71e2aea219a2"],
Cell[345196, 6219, 354, 6, 30, "Input",ExpressionUUID->"fa27f326-e652-42aa-871e-c55a17d799f9"],
Cell[CellGroupData[{
Cell[345575, 6229, 696, 10, 52, "Input",ExpressionUUID->"d5f624c2-eab0-464e-870b-0473fcde3615"],
Cell[346274, 6241, 535, 12, 25, "Message",ExpressionUUID->"4494c306-0f07-480b-bf57-18fd91a9f5e3"],
Cell[346812, 6255, 535, 12, 25, "Message",ExpressionUUID->"0de0722d-e63c-4faf-89b0-ab86125716c3"],
Cell[347350, 6269, 50248, 879, 253, "Print",ExpressionUUID->"9ade6817-0a8a-46f7-84f2-cbda9a6e784a"]
}, Open  ]],
Cell[397613, 7151, 222, 4, 52, "Input",ExpressionUUID->"c3db3ab9-9fae-4f26-b1f7-a5a88ea0de08"],
Cell[397838, 7157, 465, 8, 114, "Input",ExpressionUUID->"fcff361b-074c-47c1-979d-7625a20784fb"],
Cell[CellGroupData[{
Cell[398328, 7169, 14703, 378, 1322, "Input",ExpressionUUID->"419172e6-17b6-4204-9fea-9bd266523839"],
Cell[413034, 7549, 3929, 127, 371, "Print",ExpressionUUID->"c0d10fd5-d9f8-4081-867c-a3917b420935"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417000, 7681, 2103, 66, 156, "Input",ExpressionUUID->"1381fc02-d4f8-4287-88b9-9cf27e22a5c9"],
Cell[419106, 7749, 458, 10, 25, "Message",ExpressionUUID->"fad4dd39-8058-4874-8606-bb87ea6816cc"],
Cell[419567, 7761, 456, 10, 25, "Message",ExpressionUUID->"3ceeb88a-b77d-4957-9b01-fe8f7b47f436"],
Cell[420026, 7773, 50089, 877, 253, "Print",ExpressionUUID->"a23d3759-8fd5-433f-a38f-c2c8e4b0ca1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470152, 8655, 3753, 109, 207, "Input",ExpressionUUID->"8ee5e146-1ee8-45de-9128-345d47814e62"],
Cell[CellGroupData[{
Cell[473930, 8768, 456, 13, 25, "Print",ExpressionUUID->"4f8c1e48-4b0b-44f1-ba33-941c3349b5d8"],
Cell[474389, 8783, 1304, 30, 28, "Print",ExpressionUUID->"6ab55a22-5fc0-4eed-8feb-e3802185c58d"]
}, Open  ]]
}, Open  ]],
Cell[475720, 8817, 132, 3, 52, "Input",ExpressionUUID->"e53b434e-01b6-4277-ba27-d00847af95be"],
Cell[CellGroupData[{
Cell[475877, 8824, 5746, 152, 532, "Input",ExpressionUUID->"879d862c-ddda-4d48-9cfe-acb096c6514a"],
Cell[481626, 8978, 12779, 274, 250, "Output",ExpressionUUID->"04b14427-c958-4646-b8c1-e463fdbcf92f"],
Cell[494408, 9254, 20809, 493, 942, "Print",ExpressionUUID->"8e04bb31-f414-4ddf-88d9-913dc2add790"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515254, 9752, 517, 12, 93, "Input",ExpressionUUID->"b8d3b87b-6b74-4cc8-a2c8-9d4a3193e515"],
Cell[515774, 9766, 311, 7, 35, "Output",ExpressionUUID->"04c65cc9-e2e4-463a-b40d-0b40d4998dd6"],
Cell[516088, 9775, 227, 4, 35, "Output",ExpressionUUID->"b86db499-b90a-49d3-b38a-48a239c93acb"],
Cell[516318, 9781, 260, 5, 35, "Output",ExpressionUUID->"40972740-01c1-4926-bdfc-de222ce9d45f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516615, 9791, 242, 5, 30, "Input",ExpressionUUID->"efe17b23-261b-42f0-97fd-8779c4e3f2c1"],
Cell[516860, 9798, 2519, 55, 77, "Output",ExpressionUUID->"861a9c75-5a59-4ca0-9d7d-809d889817c6"]
}, Open  ]],
Cell[519394, 9856, 81, 0, 30, "Input",ExpressionUUID->"f567a28c-23cf-472b-91bc-f4223631cc7e"],
Cell[CellGroupData[{
Cell[519500, 9860, 10230, 267, 950, "Input",ExpressionUUID->"6ee2cb86-3df5-4156-99b8-0def0df81d14"],
Cell[529733, 10129, 435, 10, 25, "Message",ExpressionUUID->"bada0012-2132-4604-ae50-2e85c0401fd6"],
Cell[530171, 10141, 433, 10, 25, "Message",ExpressionUUID->"44163ea6-aab5-4c57-b8f4-24fe32177df6"],
Cell[CellGroupData[{
Cell[530629, 10155, 259, 5, 25, "Print",ExpressionUUID->"8fdcac2c-a12a-477c-a099-573a91c5d27e"],
Cell[530891, 10162, 76635, 1388, 994, "Print",ExpressionUUID->"d78eb0f1-fc30-48f3-adaf-56e6cc67e1b5"],
Cell[607529, 11552, 9880, 236, 919, "Print",ExpressionUUID->"e341dfee-edfe-4c8f-9673-93b555e4a87f"],
Cell[617412, 11790, 17168, 475, 974, "Print",ExpressionUUID->"4f27e8c3-9a17-40e4-b187-2a7995c5196d"],
Cell[634583, 12267, 1316, 23, 46, "Print",ExpressionUUID->"f907acd1-bce7-4347-a9d4-63719909e461"],
Cell[635902, 12292, 294, 5, 25, "Print",ExpressionUUID->"b75d92e6-e0a5-4c49-ac4e-7bba9ec4b4d0"],
Cell[636199, 12299, 12756, 285, 107, "Print",ExpressionUUID->"41fae4fb-7b22-4f21-9918-9a2e33d1d023"],
Cell[648958, 12586, 2252, 56, 63, "Print",ExpressionUUID->"7d9e90b3-fc3f-4e32-b127-7bc0f37e3ce3"]
}, Open  ]]
}, Open  ]],
Cell[651237, 12646, 280, 5, 134, "Input",ExpressionUUID->"0ef97737-279f-4fcf-b561-d7f45a38b98d"]
}
]
*)

(* End of internal cache information *)

